
WEBOTS_HOME ?= ..
WEBOTS_DEPENDENCY_PATH ?= $(WEBOTS_HOME)/dependencies
WEBOTS_HOME_LIB = $(WEBOTS_HOME)/lib/webots

DEPENDENCIES_URL = https://cyberbotics.com/files/repository/dependencies/mac/release
WGET = LANG=en_US.UTF-8 wget -qq

QT_PACKAGE = qt-5.13.1-release.tar.bz2
ASSIMP_PACKAGE = assimp.zip
FREETYPE_PACKAGE = macos-precompiled-freetype-2.9.tar.bz2
FFMPEG_PACKAGE = ffmpeg.tar.bz2
LUA_PACKAGE = lua-5.2.3.tar.bz2
LUA_GD_PACKAGE = gd.tar.bz2
MINIGLU_PACKAGE = libminiglu.tar.gz
OIS_PACKAGE = libOIS.tar.bz2
OPENAL_PACKAGE = openal-mac-1.16.0.tar.bz2
OPENSSL_PACKAGE = openssl-1.0.2-precompiled.tar.bz2
PICO_PACKAGE = libpico.tar.bz2

PACKAGES = qt assimp freetype ffmpeg lua lua-gd miniglu ois openal openssl pico
PACKAGES_CLEAN = $(addsuffix -clean, $(PACKAGES))

.PHONY: release debug distrib profile clean cleanse $(PACKAGES) $(PACKAGES_CLEAN)

release debug distrib profile: ../.clang-format $(PACKAGES)
clean:
cleanse: $(PACKAGES_CLEAN)
	@rm -f ../.clang-format

../.clang-format:
	@echo "# copying clang-format configuration file"
	@cp .clang-format-9 $@

qt-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE) $(WEBOTS_HOME)/Contents/Frameworks/Qt* $(WEBOTS_HOME_LIB)/qt $(WEBOTS_HOME)/include/qt $(WEBOTS_HOME)/bin/qt/lrelease $(WEBOTS_HOME)/bin/qt/lupdate $(WEBOTS_HOME)/bin/qt/moc $(WEBOTS_HOME)/resources/web/local/qwebchannel.js

qt: $(WEBOTS_HOME)/resources/web/local/qwebchannel.js

$(WEBOTS_HOME)/resources/web/local/qwebchannel.js: $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	@echo "# uncompressing $(QT_PACKAGE)"
	@tar xfm $(QT_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE):
	@echo "# downloading $(QT_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(QT_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "4ed0bfacc119e941b5b73d011736d63c" != `md5 -q $(QT_PACKAGE)` ]; then echo "MD5 checksum failed for $(QT_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)


assimp-clean:
	@rm -fr $(WEBOTS_DEPENDENCY_PATH)/assimp $(WEBOTS_HOME_LIB)/libassimp.dylib

assimp: $(WEBOTS_HOME_LIB)/libassimp.dylib

$(WEBOTS_HOME_LIB)/libassimp.dylib: $(WEBOTS_DEPENDENCY_PATH)/assimp
	@cp $(WEBOTS_DEPENDENCY_PATH)/assimp/build/code/libassimp.dylib $(WEBOTS_HOME_LIB)
	@cp $(WEBOTS_DEPENDENCY_PATH)/assimp/build/code/libIrrXML.dylib $(WEBOTS_HOME_LIB)
	@install_name_tool -id @rpath/lib/webots/libassimp.dylib $(WEBOTS_HOME_LIB)/libassimp.dylib
	@install_name_tool -change @rpath/libIrrXML.dylib @rpath/lib/webots/libIrrXML.dylib $(WEBOTS_HOME_LIB)/libassimp.dylib
	@install_name_tool -id @rpath/lib/webots/libIrrXML.dylib $(WEBOTS_HOME_LIB)/libIrrXML.dylib

$(WEBOTS_DEPENDENCY_PATH)/assimp:
	@echo "# downloading $(ASSIMP_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(ASSIMP_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "d2168d41ed865409195624c040ef694e" != `md5 -q $(ASSIMP_PACKAGE)` ]; then echo "MD5 checksum failed for $(ASSIMP_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(ASSIMP_PACKAGE)"
	@tar xfm $(ASSIMP_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)


freetype-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/freetype-2.9

freetype: $(WEBOTS_DEPENDENCY_PATH)/freetype-2.9/objs/.libs/libfreetype.a

$(WEBOTS_DEPENDENCY_PATH)/freetype-2.9/objs/.libs/libfreetype.a:
	@echo "# downloading $(FREETYPE_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FREETYPE_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(FREETYPE_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "44e72be43f677dedd0c547cb9a029178" != `md5 -q $(FREETYPE_PACKAGE)` ]; then echo "MD5 checksum failed for $(FREETYPE_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(FREETYPE_PACKAGE)"
	@tar xfm $(FREETYPE_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FREETYPE_PACKAGE)


ffmpeg-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE) $(WEBOTS_HOME)/util

ffmpeg: $(WEBOTS_HOME)/util/ffmpeg

$(WEBOTS_HOME)/util/ffmpeg: $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	@echo "# uncompressing $(FFMPEG_PACKAGE)"
	@tar xfm $(FFMPEG_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE):
	@echo "# downloading $(FFMPEG_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(FFMPEG_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "258df72f03ef92526dab46ca0fede187" != `md5 -q $(FFMPEG_PACKAGE)` ]; then echo "MD5 checksum failed for $(FFMPEG_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)

lua-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3 $(WEBOTS_HOME_LIB)/liblua.dylib

lua: $(WEBOTS_HOME_LIB)/liblua.dylib

$(WEBOTS_HOME_LIB)/liblua.dylib: $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3
	@cp $(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3/src/liblua.dylib $(WEBOTS_HOME_LIB)/liblua.dylib
	@install_name_tool -id @rpath/lib/webots/liblua.dylib $(WEBOTS_HOME_LIB)/liblua.dylib

$(WEBOTS_DEPENDENCY_PATH)/lua-5.2.3:
	@echo "# downloading $(LUA_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(LUA_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "cf55c9efdf835998a7b22c916ece1854" != `md5 -q $(LUA_PACKAGE)` ]; then echo "MD5 checksum failed for $(LUA_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(LUA_PACKAGE)"
	@tar xfm $(LUA_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)


lua-gd-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE) $(WEBOTS_HOME_LIB)/libgd.3.dylib $(WEBOTS_HOME)/resources/lua/modules/gd

lua-gd: $(WEBOTS_HOME)/resources/lua/modules/gd/gd.dylib

$(WEBOTS_HOME)/resources/lua/modules/gd/gd.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)
	@echo "# uncompressing $(LUA_GD_PACKAGE)"
	@tar xfm $(LUA_GD_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE):
	@echo "# downloading $(LUA_GD_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(LUA_GD_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "a48b974d568b07d8f8a9317ccd650268" != `md5 -q $(LUA_GD_PACKAGE)` ]; then echo "MD5 checksum failed for $(LUA_GD_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(LUA_GD_PACKAGE)


miniglu-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0

miniglu: $(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0/libminiglu.a

$(WEBOTS_DEPENDENCY_PATH)/glu-9.0.0/libminiglu.a:
	@echo "# downloading $(MINIGLU_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(MINIGLU_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(MINIGLU_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "504316e92609b37c8b749025e1dcf481" != `md5 -q $(MINIGLU_PACKAGE)` ]; then echo "MD5 checksum failed for $(MINIGLU_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(MINIGLU_PACKAGE)"
	@tar xfm $(MINIGLU_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(MINIGLU_PACKAGE)


ois-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE) $(WEBOTS_HOME_LIB)/*OIS.dylib $(WEBOTS_HOME)/include/libOIS

ois: $(WEBOTS_HOME_LIB)/libOIS.dylib

$(WEBOTS_HOME_LIB)/libOIS.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	@echo "# uncompressing $(OIS_PACKAGE)"
	@tar xfm $(OIS_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE):
	@echo "# downloading $(OIS_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(OIS_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "3efd7b991bd121230dd58c2448c2e9f2" != `md5 -q $(OIS_PACKAGE)` ]; then echo "MD5 checksum failed for $(OIS_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)


openal-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/openal $(WEBOTS_HOME_LIB)/libopenal*.dylib

openal: $(WEBOTS_HOME_LIB)/libopenal.dylib

$(WEBOTS_HOME_LIB)/libopenal.dylib: $(WEBOTS_DEPENDENCY_PATH)/openal
	@cp $(WEBOTS_DEPENDENCY_PATH)/openal/build/libopenal.1.16.0.dylib $(WEBOTS_HOME_LIB)
	@mv $(WEBOTS_HOME_LIB)/libopenal.1.16.0.dylib $(WEBOTS_HOME_LIB)/libopenal.dylib
	@install_name_tool -id @rpath/lib/webots/libopenal.dylib $(WEBOTS_HOME_LIB)/libopenal.dylib

$(WEBOTS_DEPENDENCY_PATH)/openal:
	@echo "# downloading $(OPENAL_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENAL_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(OPENAL_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "4604766ee64f01c596e12445b2e20f96" != `md5 -q $(OPENAL_PACKAGE)` ]; then echo "MD5 checksum failed for $(OPENAL_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(OPENAL_PACKAGE)"
	@tar xfm $(OPENAL_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENAL_PACKAGE)


openssl-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2 $(WEBOTS_HOME_LIB)/libcrypto* $(WEBOTS_HOME_LIB)/libssl*

openssl: $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib

$(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib: $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2
	@cp $(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2/lib*dylib $(WEBOTS_HOME_LIB)
	@install_name_tool -id @rpath/lib/webots/libcrypto.dylib $(WEBOTS_HOME_LIB)/libcrypto.dylib
	@install_name_tool -id @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libcrypto.1.0.0.dylib
	@install_name_tool -id @rpath/lib/webots/libssl.dylib $(WEBOTS_HOME_LIB)/libssl.dylib
	@install_name_tool -change /usr/local/ssl/lib/libcrypto.1.0.0.dylib @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libssl.dylib
	@install_name_tool -id @rpath/lib/webots/libssl.dylib $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib
	@install_name_tool -change /usr/local/ssl/lib/libcrypto.1.0.0.dylib @rpath/lib/webots/libcrypto.1.0.0.dylib $(WEBOTS_HOME_LIB)/libssl.1.0.0.dylib

$(WEBOTS_DEPENDENCY_PATH)/openssl-1.0.2:
	@echo "# downloading $(OPENSSL_PACKAGE)"
	@cd $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENSSL_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(OPENSSL_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "1ec23830cd8f32f10c83f0e0eb027032" != `md5 -q $(OPENSSL_PACKAGE)` ]; then echo "MD5 checksum failed for $(OPENSSL_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(OPENSSL_PACKAGE)"
	@tar xfm $(OPENSSL_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OPENSSL_PACKAGE)


pico-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE) $(WEBOTS_HOME)/include/libpico $(WEBOTS_HOME_LIB)/libpico.dylib $(WEBOTS_HOME)/resources/pico

pico: $(WEBOTS_HOME_LIB)/libpico.dylib

$(WEBOTS_HOME_LIB)/libpico.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	@echo "# uncompressing $(PICO_PACKAGE)"
	@tar xfm $(PICO_PACKAGE) -C $(WEBOTS_HOME)

$(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE):
	@echo "# downloading $(PICO_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(PICO_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "7b357ddff59913c725b3c592375f7443" != `md5 -q $(PICO_PACKAGE)` ]; then echo "MD5 checksum failed for $(PICO_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
