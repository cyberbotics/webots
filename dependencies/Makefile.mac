
WEBOTS_HOME ?= ..
WEBOTS_DEPENDENCY_PATH ?= $(WEBOTS_HOME)/dependencies
WEBOTS_HOME_LIB = $(WEBOTS_HOME)/Contents/lib/webots

DEPENDENCIES_URL = https://cyberbotics.com/files/repository/dependencies/mac/release
WGET = LANG=en_US.UTF-8 wget -qq

QT_PACKAGE = qt-6.4.3-release.tar.bz2
ASSIMP_PACKAGE = assimp-5.2.3.tar.bz2
FFMPEG_PACKAGE = ffmpeg.tar.bz2
FREETYPE_PACKAGE = freetype2.tar.bz2
LUA_PACKAGE = liblua-5.2.3.tar.bz2
OIS_PACKAGE = libOIS-1.3.tar.bz2
PICO_PACKAGE = libpico-1.0.tar.bz2

PACKAGES = qt assimp ffmpeg freetype lua ois pico
PACKAGES_CLEAN = $(addsuffix -clean, $(PACKAGES))

.PHONY: release debug distrib profile clean cleanse $(PACKAGES) $(PACKAGES_CLEAN)

release debug distrib profile: ../.clang-format $(PACKAGES) ../Contents/Resources ../Contents/include ../Contents/lib/controller/matlab ../Contents/lib/controller/python ../Contents/projects
clean:
cleanse: $(PACKAGES_CLEAN)
	@rm -f ../.clang-format
	@rm -rf ../Contents/MacOS
	@rm -rf ../Contents/Frameworks
	@rm -f ../Contents/Resources
	@rm -f ../Contents/include
	@rm -rf ../Contents/lib
	@rm -f ../Contents/projects

../.clang-format:
	@echo "# copying clang-format configuration file"
	@cp .clang-format-9 $@

../Contents/MacOS:
	@mkdir -p $@

../Contents/Resources:
	@ln -s ../resources $@

../Contents/include:
	@ln -s ../include $@

../Contents/lib/controller/matlab:
	@mkdir -p ../Contents/lib/controller
	@ln -s ../../../lib/controller/matlab $@

../Contents/lib/controller/python:
	@mkdir -p ../Contents/lib/controller
	@ln -s ../../../lib/controller/python $@

../Contents/projects:
	@ln -s ../projects $@

qt-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE) $(WEBOTS_HOME)/Contents/Frameworks/Qt* $(WEBOTS_HOME_LIB)/qt $(WEBOTS_HOME)/include/qt $(WEBOTS_HOME)/bin/qt/lrelease $(WEBOTS_HOME)/bin/qt/lupdate $(WEBOTS_HOME)/bin/qt/moc

qt: $(WEBOTS_HOME)/Contents/Frameworks/QtCore.framework/Versions/A/QtCore

$(WEBOTS_HOME)/Contents/Frameworks/QtCore.framework/Versions/A/QtCore: $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	@echo "# uncompressing $(QT_PACKAGE)"
	@tar xfm $(QT_PACKAGE) -C $(WEBOTS_HOME)
	@touch $(WEBOTS_HOME)/Contents/Frameworks/QtCore.framework/Versions/A/QtCore
	@mkdir -p $(WEBOTS_HOME_LIB)
	@mv $(WEBOTS_HOME)/lib/webots/qt $(WEBOTS_HOME_LIB)
	@echo "# signing libraries"
	@python3 codesign.py

$(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE):
	@echo "# downloading $(QT_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(QT_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "71c339a01c8cf324bc8c00b39d6fbd1e" != `md5 -q $(QT_PACKAGE)` ]; then echo "MD5 checksum failed for $(QT_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(QT_PACKAGE)

assimp-clean:
	@rm -fr $(WEBOTS_DEPENDENCY_PATH)/assimp $(WEBOTS_HOME_LIB)/libassimp.dylib

assimp: $(WEBOTS_HOME_LIB)/libassimp.dylib

$(WEBOTS_HOME_LIB)/libassimp.dylib: $(WEBOTS_DEPENDENCY_PATH)/assimp
	@mkdir -p $(WEBOTS_HOME_LIB)
	@cp $(WEBOTS_DEPENDENCY_PATH)/assimp/build/bin/libassimp.dylib $(WEBOTS_HOME_LIB)
	@install_name_tool -id @rpath/Contents/lib/webots/libassimp.dylib $@
	@codesign --force -s - $@

$(WEBOTS_DEPENDENCY_PATH)/assimp:
	@echo "# downloading $(ASSIMP_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(ASSIMP_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "3d4a0297ef7636dc00a1ddc62ff062e3" != `md5 -q $(ASSIMP_PACKAGE)` ]; then echo "MD5 checksum failed for $(ASSIMP_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(ASSIMP_PACKAGE)"
	@tar xfm $(ASSIMP_PACKAGE) -C $(WEBOTS_DEPENDENCY_PATH)
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(ASSIMP_PACKAGE)


ffmpeg-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE) $(WEBOTS_HOME)/Contents/util

ffmpeg: $(WEBOTS_HOME)/Contents/util/ffmpeg

$(WEBOTS_HOME)/Contents/util/ffmpeg: $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	@echo "# uncompressing $(FFMPEG_PACKAGE)"
	@tar xfm $(FFMPEG_PACKAGE) -C $(WEBOTS_HOME)/Contents
	@codesign --force -s - $@

$(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE):
	@echo "# downloading $(FFMPEG_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(FFMPEG_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "258df72f03ef92526dab46ca0fede187" != `md5 -q $(FFMPEG_PACKAGE)` ]; then echo "MD5 checksum failed for $(FFMPEG_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(FFMPEG_PACKAGE)

freetype-clean:
	@rm -fr freetype2

freetype: freetype2

freetype2:
	@echo "# downloading $(FREETYPE_PACKAGE)"
	@rm -f $(FREETYPE_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(FREETYPE_PACKAGE)
	@if [ "810286fe3f188f7ae7dca18aef0d75a1" != `md5 -q $(FREETYPE_PACKAGE)` ]; then echo "MD5 checksum failed for $(FREETYPE_PACKAGE)"; exit 1; fi
	@echo "# uncompressing $(FREETYPE_PACKAGE)"
	@tar xfm $(FREETYPE_PACKAGE)
	@rm -f $(FREETYPE_PACKAGE)


lua-clean:
	@rm -rf $(WEBOTS_HOME_LIB)/liblua.dylib
	@rm -rf $(WEBOTS_HOME)/dependencies/lua-*
	@rm -rf $(WEBOTS_HOME)/dependencies/liblua-*.tar.bz2

lua: $(WEBOTS_HOME_LIB)/liblua.dylib

$(WEBOTS_HOME_LIB)/liblua.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)
	@echo "# uncompressing $(LUA_PACKAGE)"
	@tar xfm $(LUA_PACKAGE) -C $(WEBOTS_HOME)/Contents
	@mv $(WEBOTS_HOME)/Contents/dependencies/lua-5.2.3 $(WEBOTS_HOME)/dependencies/
	@rmdir $(WEBOTS_HOME)/Contents/dependencies
	@install_name_tool -id @rpath/Contents/lib/webots/liblua.dylib $@
	@codesign --force -s - $@


$(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE):
	@echo "# downloading $(LUA_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(LUA_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(LUA_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "b81047a7d382c1531b5b18530c6578ad" != `md5 -q $(LUA_PACKAGE)` ]; then echo "MD5 checksum failed for $(LUA_PACKAGE)"; exit 1; fi
	@touch $@

ois-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE) $(WEBOTS_HOME_LIB)/*OIS.dylib $(WEBOTS_HOME)/include/libOIS

ois: $(WEBOTS_HOME_LIB)/libOIS.dylib

$(WEBOTS_HOME_LIB)/libOIS.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	@echo "# uncompressing $(OIS_PACKAGE)"
	@tar xfm $(OIS_PACKAGE) -C $(WEBOTS_HOME)
	@mkdir -p $(WEBOTS_HOME_LIB)
	@mv $(WEBOTS_HOME)/lib/webots/libOIS.dylib $@
	@install_name_tool -id @rpath/Contents/lib/webots/libOIS.dylib $@
	@codesign --force -s - $@

$(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE):
	@echo "# downloading $(OIS_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(OIS_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "84c5b0c18031bcf13977165ade137782" != `md5 -q $(OIS_PACKAGE)` ]; then echo "MD5 checksum failed for $(OIS_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(OIS_PACKAGE)


pico-clean:
	@rm -rf $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE) $(WEBOTS_HOME)/include/libpico $(WEBOTS_HOME_LIB)/libpico.dylib $(WEBOTS_HOME)/resources/pico

pico: $(WEBOTS_HOME_LIB)/libpico.dylib

$(WEBOTS_HOME_LIB)/libpico.dylib: $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	@echo "# uncompressing $(PICO_PACKAGE)"
	@tar xfm $(PICO_PACKAGE) -C $(WEBOTS_HOME)
	@mkdir -p $(WEBOTS_HOME_LIB)
	@mv $(WEBOTS_HOME)/lib/webots/libpico.dylib $@
	@install_name_tool -id @rpath/Contents/lib/webots/libpico.dylib $@
	@codesign --force -s - $@

$(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE):
	@echo "# downloading $(PICO_PACKAGE)"
	@rm -f $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
	@$(WGET) $(DEPENDENCIES_URL)/$(PICO_PACKAGE) -P $(WEBOTS_DEPENDENCY_PATH)
	@if [ "7354aa3a597b1703671372a1a6b9c2fd" != `md5 -q $(PICO_PACKAGE)` ]; then echo "MD5 checksum failed for $(PICO_PACKAGE)"; exit 1; fi
	@touch $(WEBOTS_DEPENDENCY_PATH)/$(PICO_PACKAGE)
