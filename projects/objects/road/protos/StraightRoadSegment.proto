#VRML_SIM R2020a utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# tags: static
# A simple straight road, the number of lanes and the dimensions are configurable.
# Furthermore, an optional border can be enabled.
# This model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).

PROTO StraightRoadSegment [
  field        SFVec3f              translation               0 0 0
  field        SFRotation           rotation                  0 1 0 0
  field        SFString             name                      "road"                  # Defines the road name.
  field        SFString             id                        ""                      # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.
  field        SFString             startJunction             ""                      # Optionally defines a reference to the Crossroad connected at the first Road waypoint. Setting correctly this field is required to use the SUMO exporter.
  field        SFString             endJunction               ""                      # Optionally defines a reference to the Crossroad connected at the last Road waypoint. Setting correctly this field is required to use the SUMO exporter.
  field        SFFloat              width                     7                       # Defines the total width of the road (excluding sidewalk).
  field        SFInt32              numberOfLanes             2                       # Defines the number of lanes (used for the texture mapping).
  field        SFInt32              numberOfForwardLanes      1                       # Defines the number of forward lanes. (this is an information with no impact on the graphical shape).
  field        SFFloat              speedLimit                -1.0                    # Optionally defines the speed limit. The recommended unit is meter per seconds.
  field        MFNode{RoadLine {}}  lines                     [ RoadLine { } ]        # Defines the property of each line separating two lanes.
  field        SFFloat              roadBorderHeight          0.15                    # Defines the height of the sidewalk.
  field        SFFloat              startingRoadBorderWidth   0.8                     # Defines the width of the sidewalk at the start.
  field        SFFloat              endingRoadBorderWidth     0.8                     # Defines the width of the sidewalk at the end.
  field        SFBool               rightBorder               TRUE                    # Defines whether the road should have a right sidewalk.
  field        SFBool               leftBorder                TRUE                    # Defines whether the road should have a left sidewalk.
  field        SFBool               rightBarrier              FALSE                   # Defines whether the road should have a right barrier.
  field        SFBool               leftBarrier               FALSE                   # Defines whether the road should have a left barrier.
  field        SFBool               bottom                    FALSE                   # Defines whether the road bottom should be displayed (useful in case of bridge).
  field        SFFloat              length                    10                      # Defines the length of the road.
  field        MFString             startLine                 []                      # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.
  field        MFString             endLine                   []                      # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.
  field        SFFloat              startingRoadTilt          0                       # Defines the tilt of the road at the beginning
  field        SFFloat              endingRoadTilt            0                       # Defines the tilt of the road at the end.
  field        SFNode               appearance                Asphalt { }             # Defines the appearance of the road.
  field        SFNode               pavementAppearance        StonePavement { }       # Defines the appearance of the sidewalk.
  field        MFString             bottomTexture             []                      # Defines the texture to be used for the bottom of the road.
  field        SFBool               locked                    TRUE                    # Is `Solid.locked`.
  field        SFBool               roadBoundingObject        FALSE                   # Defines whether the road should have a bounding object.
  field        SFBool               rightBorderBoundingObject FALSE                   # Defines whether the right sidewalk should have a bounding object.
  field        SFBool               leftBorderBoundingObject  FALSE                   # Defines whether the left sidewalk should have a bounding object.
  field        SFBool               rightBarrierBoundingObject TRUE                   # Defines whether the right crash barrier (if any) should have a bounding object.
  field        SFBool               leftBarrierBoundingObject TRUE                    # Defines whether the left crash barrier (if any) should have a bounding object.
  field        SFBool               castShadows               FALSE                   # Defines whether the road should cast shadows.
  field        SFString             contactMaterial           "default"               # Is `Solid.contactMaterial`.

  hiddenField  MFBool               dashedLine                TRUE                    # Deprecated in Webots R2018c.
]
{
  %{
    local startingRoadTilt = fields.startingRoadTilt.value
    local endingRoadTilt   = fields.endingRoadTilt.value
    local length           = fields.length.value
    if length < 0 then
      io.stderr:write("'length' must be be greater than 0\n")
      length = fields.length.defaultValue
    end
    local startingRoadBorderWidth = fields.startingRoadBorderWidth.value
    if startingRoadBorderWidth < 0 then
      io.stderr:write("'startingRoadBorderWidth' must be be greater than 0\n")
      startingRoadBorderWidth = fields.startingRoadBorderWidth.defaultValue
    end
    local endingRoadBorderWidth = fields.endingRoadBorderWidth.value
    if endingRoadBorderWidth < 0 then
      io.stderr:write("'endingRoadBorderWidth' must be be greater than 0\n")
      endingRoadBorderWidth = fields.endingRoadBorderWidth.defaultValue
    end
  }%

  Road {
    translation IS translation
    rotation IS rotation
    name IS name
    width IS width
    numberOfLanes IS numberOfLanes
    dashedLine IS dashedLine
    lines IS lines
    roadBorderHeight IS roadBorderHeight
    roadBorderWidth [ %{= startingRoadBorderWidth }%, %{= endingRoadBorderWidth }%]
    rightBorder IS rightBorder
    leftBorder IS leftBorder
    rightBarrier IS rightBarrier
    leftBarrier IS leftBarrier
    bottom IS bottom
    wayPoints [
      0 0 0
      0 0 %{= length }%
    ]
    roadTilt [ %{= startingRoadTilt }%, %{= endingRoadTilt }%]
    startLine IS startLine
    endLine IS endLine
    splineSubdivision -1
    appearance IS appearance
    pavementAppearance IS pavementAppearance
    locked IS locked
    roadBoundingObject IS roadBoundingObject
    rightBorderBoundingObject IS rightBorderBoundingObject
    leftBorderBoundingObject IS leftBorderBoundingObject
    rightBarrierBoundingObject IS rightBarrierBoundingObject
    leftBarrierBoundingObject IS leftBarrierBoundingObject
    contactMaterial IS contactMaterial
    castShadows IS castShadows
  }
}
