#VRML_SIM R2022a utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# Light designed to match the skyboxes in the TexturedBackground PROTO.
#
# Supported values for the `texture` field:
#
# - dusk
# - empty_office
# - entrance_hall
# - factory
# - mars
# - noon_building_overcast
# - noon_cloudy_countryside
# - noon_park_empty
# - mountains
# - stadium
# - stadium_dry
#
# Deprecated backgrounds:
#
# - dawn_cloudy_empty
# - morning_cloudy_empty
# - noon_cloudy_empty
# - noon_cloudy_mountains
# - noon_stormy_empty
# - noon_sunny_empty
# - noon_sunny_garden
# - twilight_cloudy_empty
# template language: javascript

PROTO TexturedBackgroundLight [
  field SFString{"dawn_cloudy_empty", "dusk", "empty_office", "entrance_hall", "factory", "mars", "morning_cloudy_empty", "mountains", "noon_building_overcast", "noon_cloudy_countryside", "noon_cloudy_empty", "noon_cloudy_mountains", "noon_park_empty", "noon_stormy_empty", "noon_sunny_empty", "noon_sunny_garden", "stadium", "stadium_dry", "twilight_cloudy_empty"}
                 texture        "mountains"  # Should be equivalent to the 'texture' field of the TexturedBackground.
  field SFFloat  luminosity     1            # Multiplies the `Light.intensity` field.
  field SFBool   castShadows    TRUE         # Defines whether the light should cast shadows.
]
{
  %<
    let direction = [0.0, -1.0, 0.0];
    let color = [1.0, 1.0, 1.0];
    let intensity = 1.0;
    let on = true;
    const luminosity = fields.luminosity.value > 0.0 ? fields.luminosity.value : 0.0;
    if (fields.texture.value === 'dusk') {
      direction = [-1.2, -0.3, -0.6];
      color = [1.0, 0.95, 0.8];
      intensity = 0.5;
    } else if (fields.texture.value === 'empty_office') {
      direction = [-0.2, -0.5, -0.9];
      intensity = 0.05;
    } else if (fields.texture.value === 'dawn_cloudy_empty') {
      direction = [0.022, -0.12, -1];
      color = [1.0, 0.75, 0.5];
      intensity = 0.8;
    } else if (fields.texture.value === 'mars') {
      color = [0.83, 0.83, 0.75];
    } else if (fields.texture.value === 'morning_cloudy_empty') {
      direction = [1, -0.8, -0.1];
      color = [1.0, 0.75, 0.5];
      intensity = 0.9;
    } else if (fields.texture.value === 'noon_building_overcast' || fields.texture.value === 'factory' || fields.texture.value === 'entrance_hall')
      on = false;
    else if (fields.texture.value === 'noon_cloudy_countryside') {
      direction = [-0.3, -1, -0.1];
      color = [0.95, 0.95, 1.0];
      intensity = 3.0;
    } else if (fields.texture.value === 'noon_cloudy_empty') {
      direction = [0.2, -1, 0.2];
      color = [0.9, 0.9, 1.0];
    } else if (fields.texture.value === 'noon_cloudy_village') {
      direction = [-0.3, -1, -0.1];
      color = [0.95, 0.95, 1.0];
      intensity = 3.0;
    } else if (fields.texture.value === 'noon_cloudy_mountains') {
      direction = [0, -1, -0.5];
      color = [0.9, 0.9, 1.0];
      intensity = 0.9;
    } else if (fields.texture.value === 'noon_park_empty') {
      direction = [-0.023, -1, -0.08];
      color = [0.996, 1.0, 0.92];
      intensity = 3.5;
    } else if (fields.texture.value === 'noon_stormy_empty') {
      direction = [0.1, -1, 0.2];
      color = [0.9, 0.9, 1.0];
      intensity = 0.8;
    } else if (fields.texture.value === 'noon_sunny_empty')
      direction = [0.9, -0.59, 0.28];
    else if (fields.texture.value === 'noon_sunny_garden') {
      direction = [-0.1, -0.3, 0.3];
      color = [0.9, 0.9, 1.0];
    } else if (fields.texture.value === 'twilight_cloudy_empty') {
      direction = [1, -0.2, -0.7];
      color = [1.0, 0.75, 0.5];
      intensity = 1.8;
    } else if (fields.texture.value === 'stadium' || fields.texture.value === 'stadium_dry') {
      direction = [-2.1, -0.5, 2.1];
      color = [0.95, 0.95, 1];
      intensity = 2.9;
    }
    else if (fields.texture.value === 'mountains') {
      direction = [-0.6, -1, 0.55];
      intensity = 2.7;
    } else
      console.error('Unknown texture identifier');

    if (context.coordinate_system === 'ENU')
      direction = [direction[2], direction[0], direction[1]];
  >%
  DirectionalLight {
    ambientIntensity 1
    direction %<= direction[0] >% %<= direction[1] >% %<= direction[2] >%
    color %<= color[0] >% %<= color[1] >% %<= color[2] >%
    intensity %<= luminosity * intensity >%
    %< if (on) { >%
      on TRUE
    %< } else { >%
      on FALSE
    %< } >%
    castShadows IS castShadows
  }
}
