#VRML_SIM R2021a utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# tags: static
# A cardboard box.

PROTO CardboardBox [
  field SFVec3f    translation 0 0.3 0
  field SFRotation rotation    0 1 0 0
  field SFString   name        "cardboard box"
  field SFVec3f    size        0.6 0.6 0.6      # Defines the size of the cardboard box.
  field SFFloat    mass        0                # Defines the mass of the cardboard box in kg. A value smaller or equal to 0 remove the physics of the cardboard box.
  field SFBool     locked      FALSE            # Is `Solid.locked`.
]
{
Solid {
  %{
    local size = fields.size.value
    local volume = size.x * size.y * size.z
    local mass = fields.mass.value
    if volume < 0.000001 or volume > 1 then
      io.stderr:write("'size' volume outside of range [ 1 cm3 ; 1 m3 ]\n")
      size.x = fields.size.defaultValue.x
      size.y = fields.size.defaultValue.y
      size.z = fields.size.defaultValue.z
    end

    local max_size = 2.5
    local min_size = 0.01

    if size.x > max_size then
      io.stderr:write("'size.x' greater than " .. max_size .. "\n")
      size.x = max_size
    elseif size.x < min_size then
      io.stderr:write("'size.x' less than " .. min_size .. "\n")
      size.x = min_size
    end
    if size.y > max_size then
      io.stderr:write("'size.y' greater than " .. max_size .. "\n")
      size.y = max_size
    elseif size.y < min_size then
      io.stderr:write("'size.y' less than " .. min_size .. "\n")
      size.y = min_size
    end
    if size.z > max_size then
      io.stderr:write("'size.z' greater than " .. max_size .. "\n")
      size.z = max_size
    elseif size.z < min_size then
      io.stderr:write("'size.z' less than " .. min_size .. "\n")
      size.z = min_size
    end
    -- we want the mass for a 1cm3 box be comprised between 0.1 and 10 g inclusive
    -- and the mass for a 1m3 box be comprised between 1 and 100 kg, hence the
    -- following min_mass and max_mass values:
    local min_mass = volume^(2/3)
    local max_mass = min_mass*100
    if mass > 0 and mass < min_mass then
      io.stderr:write("'mass' less than " .. min_mass .. "\n")
      mass = min_mass
    elseif mass > max_mass then
      io.stderr:write("'mass' greater than " .. max_mass .. "\n")
      mass = max_mass
    end
  }%
  translation IS translation
  rotation IS rotation
  children [
    Transform {
      scale %{= size.x }% %{= size.y }% %{= size.z }%
      children [
        Shape {
          appearance PBRAppearance {
            metalness 0
            roughness 0.7
            baseColorMap ImageTexture {
              url "textures/cardboard_box_base_color.jpg"
            }
            roughnessMap ImageTexture {
              url "textures/cardboard_box_roughness.jpg"
            }
            normalMap ImageTexture {
              url "textures/cardboard_box_normal.jpg"
            }
            occlusionMap ImageTexture {
              url "textures/cardboard_box_occlusion.jpg"
            }
          }
          geometry IndexedFaceSet {
            coord Coordinate {
              point [ -0.490029 0.498200 -0.490131 -0.490029 0.490029 -0.498301 -0.498200 0.490029 -0.490131 -0.490028 0.495806 -0.495908 -0.494746 0.494746 -0.494849 -0.495806 0.490028 -0.495908 -0.495806 0.495806 -0.490131 -0.490105 -0.490105 -0.498173 -0.490105 -0.498275 -0.490001 -0.498275 -0.490105 -0.490001 -0.490105 -0.495882 -0.495779 -0.494822 -0.494822 -0.494718 -0.495882 -0.495882 -0.490000 -0.495882 -0.490105 -0.495779 0.498275 0.490105 -0.490001 0.490105 0.490105 -0.498173 0.490105 0.498275 -0.490001 0.495882 0.490105 -0.495779 0.494822 0.494822 -0.494718 0.490105 0.495882 -0.495779 0.495882 0.495882 -0.490000 0.490029 -0.498200 -0.490131 0.490029 -0.490029 -0.498301 0.498200 -0.490029 -0.490131 0.490028 -0.495806 -0.495908 0.494746 -0.494746 -0.494849 0.495806 -0.490028 -0.495908 0.495806 -0.495806 -0.490131 -0.490105 0.498275 0.490001 -0.498275 0.490105 0.490001 -0.490105 0.490105 0.498173 -0.495882 0.495882 0.490000 -0.494822 0.494822 0.494718 -0.495882 0.490105 0.495779 -0.490105 0.495882 0.495779 -0.498200 -0.490029 0.490131 -0.490029 -0.498200 0.490131 -0.490029 -0.490029 0.498301 -0.495806 -0.495806 0.490131 -0.494746 -0.494746 0.494849 -0.490028 -0.495806 0.495908 -0.495806 -0.490028 0.495908 0.490028 0.498200 0.490131 0.490028 0.490029 0.498301 0.498200 0.490029 0.490131 0.490028 0.495806 0.495908 0.494746 0.494746 0.494849 0.495806 0.490028 0.495908 0.495806 0.495806 0.490131 0.498275 -0.490105 0.490001 0.490105 -0.490105 0.498173 0.490105 -0.498275 0.490001 0.495882 -0.490105 0.495779 0.494822 -0.494822 0.494718 0.490105 -0.495882 0.495779 0.495882 -0.495882 0.490000 ]
            }
            texCoord TextureCoordinate {
              point [ 0.8724 0.0029 0.6278 0.2471 0.8721 0.2472 0.3778 0.5029 0.6222 0.7471 0.3779 0.7472 0.3778 0.7528 0.6223 0.9971 0.3779 0.9972 0.3778 0.0028 0.6222 0.2470 0.3778 0.2472 0.6222 0.2528 0.3778 0.4972 0.6220 0.4972 0.6222 0.0028 0.6233 0.0008 0.6242 0.0028 0.3724 0.2471 0.3744 0.2483 0.3724 0.2491 0.6220 0.4972 0.6232 0.4993 0.6241 0.4972 0.3721 0.0028 0.3733 0.0008 0.3741 0.0028 0.6222 0.7471 0.6243 0.7483 0.6222 0.7491 0.6222 0.2528 0.6243 0.2516 0.6222 0.2508 0.6223 0.9971 0.6243 0.9983 0.6223 0.9992 0.1281 0.2472 0.1269 0.2493 0.1261 0.2473 0.3778 0.0028 0.3758 0.0017 0.3778 0.0008 0.3779 0.7472 0.3767 0.7492 0.3759 0.7472 0.1276 0.0029 0.1256 0.0017 0.1276 0.0009 0.6220 0.7528 0.6232 0.7507 0.6241 0.7528 0.6222 0.2470 0.6242 0.2481 0.6222 0.2490 0.3778 0.4972 0.3757 0.4984 0.3778 0.4992 0.8721 0.2472 0.8733 0.2492 0.8741 0.2472 0.3780 0.2528 0.3768 0.2507 0.3759 0.2528 0.6221 0.5028 0.6233 0.5008 0.6241 0.5028 0.8724 0.0029 0.8744 0.0017 0.8724 0.0009 0.3778 0.2472 0.3767 0.2492 0.3758 0.2472 0.6278 0.2471 0.6258 0.2483 0.6278 0.2491 0.3779 0.9972 0.3767 0.9993 0.3759 0.9972 0.3778 0.7528 0.3757 0.7516 0.3778 0.7508 0.6279 0.0028 0.6267 0.0008 0.6259 0.0028 0.3778 0.5029 0.3757 0.5017 0.3778 0.5009 0.3779 0.9972 0.6223 0.9992 0.3779 0.9993 0.3758 0.0028 0.3778 0.2472 0.3758 0.2472 0.3779 0.7472 0.3757 0.5029 0.3778 0.5029 0.3778 0.7508 0.6220 0.7528 0.3778 0.7528 0.1281 0.2472 0.3724 0.2491 0.1281 0.2493 0.3778 0.0008 0.6222 0.0028 0.3778 0.0028 0.3721 0.0028 0.3744 0.2471 0.3724 0.2471 0.6243 0.2528 0.6220 0.4972 0.6241 0.4972 0.6222 0.0028 0.6242 0.2470 0.6222 0.2470 0.3778 0.4992 0.6220 0.4972 0.3778 0.4972 0.6221 0.5028 0.6243 0.7471 0.6222 0.7471 0.6222 0.2508 0.3780 0.2528 0.6222 0.2528 0.6279 0.0028 0.8724 0.0009 0.6279 0.0008 0.3778 0.5009 0.6221 0.5028 0.3778 0.5029 0.8721 0.2472 0.8744 0.0029 0.8724 0.0029 0.3757 0.4972 0.3780 0.2528 0.3759 0.2528 0.6279 0.0028 0.6258 0.2471 0.6278 0.2471 0.3757 0.7528 0.3779 0.9972 0.3759 0.9972 0.6220 0.7528 0.6243 0.9971 0.6223 0.9971 0.1256 0.0029 0.1281 0.2472 0.1261 0.2473 0.3721 0.0028 0.1276 0.0009 0.3721 0.0008 0.6222 0.7491 0.3779 0.7472 0.6222 0.7471 0.3778 0.2472 0.6222 0.2490 0.3778 0.2492 0.6278 0.2491 0.8721 0.2472 0.6278 0.2471 0.1276 0.0029 0.3724 0.2471 0.1281 0.2472 0.8724 0.0029 0.6279 0.0028 0.6278 0.2471 0.3778 0.5029 0.6221 0.5028 0.6222 0.7471 0.3778 0.7528 0.6220 0.7528 0.6223 0.9971 0.3778 0.0028 0.6222 0.0028 0.6222 0.2470 0.6222 0.2528 0.3780 0.2528 0.3778 0.4972 0.6222 0.0028 0.6222 0.0008 0.6233 0.0008 0.3724 0.2471 0.3744 0.2471 0.3744 0.2483 0.6220 0.4972 0.6220 0.4993 0.6232 0.4993 0.3721 0.0028 0.3721 0.0008 0.3733 0.0008 0.6222 0.7471 0.6243 0.7471 0.6243 0.7483 0.6222 0.2528 0.6243 0.2528 0.6243 0.2516 0.6223 0.9971 0.6243 0.9971 0.6243 0.9983 0.1281 0.2472 0.1281 0.2493 0.1269 0.2493 0.3778 0.0028 0.3758 0.0028 0.3758 0.0017 0.3779 0.7472 0.3779 0.7492 0.3767 0.7492 0.1276 0.0029 0.1256 0.0029 0.1256 0.0017 0.6220 0.7528 0.6220 0.7507 0.6232 0.7507 0.6222 0.2470 0.6242 0.2470 0.6242 0.2481 0.3778 0.4972 0.3757 0.4972 0.3757 0.4984 0.8721 0.2472 0.8721 0.2492 0.8733 0.2492 0.3780 0.2528 0.3780 0.2507 0.3768 0.2507 0.6221 0.5028 0.6221 0.5008 0.6233 0.5008 0.8724 0.0029 0.8744 0.0029 0.8744 0.0017 0.3778 0.2472 0.3778 0.2492 0.3767 0.2492 0.6278 0.2471 0.6258 0.2471 0.6258 0.2483 0.3779 0.9972 0.3779 0.9993 0.3767 0.9993 0.3778 0.7528 0.3757 0.7528 0.3757 0.7516 0.6279 0.0028 0.6279 0.0008 0.6267 0.0008 0.3778 0.5029 0.3757 0.5029 0.3757 0.5017 0.3779 0.9972 0.6223 0.9971 0.6223 0.9992 0.3758 0.0028 0.3778 0.0028 0.3778 0.2472 0.3779 0.7472 0.3759 0.7472 0.3757 0.5029 0.3778 0.7508 0.6220 0.7507 0.6220 0.7528 0.1281 0.2472 0.3724 0.2471 0.3724 0.2491 0.3778 0.0008 0.6222 0.0008 0.6222 0.0028 0.3721 0.0028 0.3741 0.0028 0.3744 0.2471 0.6243 0.2528 0.6222 0.2528 0.6220 0.4972 0.6222 0.0028 0.6242 0.0028 0.6242 0.2470 0.3778 0.4992 0.6220 0.4993 0.6220 0.4972 0.6221 0.5028 0.6241 0.5028 0.6243 0.7471 0.6222 0.2508 0.3780 0.2507 0.3780 0.2528 0.6279 0.0028 0.8724 0.0029 0.8724 0.0009 0.3778 0.5009 0.6221 0.5008 0.6221 0.5028 0.8721 0.2472 0.8741 0.2472 0.8744 0.0029 0.3757 0.4972 0.3778 0.4972 0.3780 0.2528 0.6279 0.0028 0.6259 0.0028 0.6258 0.2471 0.3757 0.7528 0.3778 0.7528 0.3779 0.9972 0.6220 0.7528 0.6241 0.7528 0.6243 0.9971 0.1256 0.0029 0.1276 0.0029 0.1281 0.2472 0.3721 0.0028 0.1276 0.0029 0.1276 0.0009 0.6222 0.7491 0.3779 0.7492 0.3779 0.7472 0.3778 0.2472 0.6222 0.2470 0.6222 0.2490 0.6278 0.2491 0.8721 0.2492 0.8721 0.2472 0.1276 0.0029 0.3721 0.0028 0.3724 0.2471 ]
            }
            texCoordIndex [ 0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11 -1 12 13 14 -1 15 16 17 -1 18 19 20 -1 21 22 23 -1 24 25 26 -1 27 28 29 -1 30 31 32 -1 33 34 35 -1 36 37 38 -1 39 40 41 -1 42 43 44 -1 45 46 47 -1 48 49 50 -1 51 52 53 -1 54 55 56 -1 57 58 59 -1 60 61 62 -1 63 64 65 -1 66 67 68 -1 69 70 71 -1 72 73 74 -1 75 76 77 -1 78 79 80 -1 81 82 83 -1 84 85 86 -1 87 88 89 -1 90 91 92 -1 93 94 95 -1 96 97 98 -1 99 100 101 -1 102 103 104 -1 105 106 107 -1 108 109 110 -1 111 112 113 -1 114 115 116 -1 117 118 119 -1 120 121 122 -1 123 124 125 -1 126 127 128 -1 129 130 131 -1 132 133 134 -1 135 136 137 -1 138 139 140 -1 141 142 143 -1 144 145 146 -1 147 148 149 -1 150 151 152 -1 153 154 155 -1 156 157 158 -1 159 160 161 -1 162 163 164 -1 165 166 167 -1 168 169 170 -1 171 172 173 -1 174 175 176 -1 177 178 179 -1 180 181 182 -1 183 184 185 -1 186 187 188 -1 189 190 191 -1 192 193 194 -1 195 196 197 -1 198 199 200 -1 201 202 203 -1 204 205 206 -1 207 208 209 -1 210 211 212 -1 213 214 215 -1 216 217 218 -1 219 220 221 -1 222 223 224 -1 225 226 227 -1 228 229 230 -1 231 232 233 -1 234 235 236 -1 237 238 239 -1 240 241 242 -1 243 244 245 -1 246 247 248 -1 249 250 251 -1 252 253 254 -1 255 256 257 -1 258 259 260 -1 261 262 263 -1 264 265 266 -1 267 268 269 -1 270 271 272 -1 273 274 275 -1 276 277 278 -1 279 280 281 -1 282 283 284 -1 285 286 287 -1 288 289 290 -1 291 292 293 -1 294 295 296 -1 297 298 299 -1 300 301 302 -1 303 304 305 -1 306 307 308 -1 309 310 311 -1 312 313 314 -1 315 316 317 -1 318 319 320 -1 321 322 323 -1 ]
            coordIndex [ 37 43 30 -1 51 8 21 -1 49 14 44 -1 16 28 42 -1 9 29 2 -1 0 4 6 -1 1 4 3 -1 2 4 5 -1 7 11 13 -1 8 11 10 -1 9 11 12 -1 14 18 20 -1 15 18 17 -1 16 18 19 -1 21 25 27 -1 22 25 24 -1 23 25 26 -1 28 32 34 -1 29 32 31 -1 30 32 33 -1 35 39 41 -1 36 39 38 -1 37 39 40 -1 42 46 48 -1 43 46 45 -1 44 46 47 -1 49 53 55 -1 50 53 52 -1 51 53 54 -1 44 20 48 -1 20 42 48 -1 21 55 51 -1 55 23 49 -1 15 3 19 -1 19 0 16 -1 7 5 1 -1 13 2 5 -1 0 31 28 -1 31 2 29 -1 36 12 8 -1 12 35 9 -1 50 40 54 -1 54 36 51 -1 30 41 37 -1 33 35 41 -1 50 47 43 -1 52 44 47 -1 23 17 14 -1 26 15 17 -1 7 24 10 -1 10 21 8 -1 42 34 45 -1 45 30 43 -1 22 1 15 -1 37 50 43 -1 51 36 8 -1 49 23 14 -1 16 0 28 -1 9 35 29 -1 0 3 4 -1 1 5 4 -1 2 6 4 -1 7 10 11 -1 8 12 11 -1 9 13 11 -1 14 17 18 -1 15 19 18 -1 16 20 18 -1 21 24 25 -1 22 26 25 -1 23 27 25 -1 28 31 32 -1 29 33 32 -1 30 34 32 -1 35 38 39 -1 36 40 39 -1 37 41 39 -1 42 45 46 -1 43 47 46 -1 44 48 46 -1 49 52 53 -1 50 54 53 -1 51 55 53 -1 44 14 20 -1 20 16 42 -1 21 27 55 -1 55 27 23 -1 15 1 3 -1 19 3 0 -1 7 13 5 -1 13 9 2 -1 0 6 31 -1 31 6 2 -1 36 38 12 -1 12 38 35 -1 50 37 40 -1 54 40 36 -1 30 33 41 -1 33 29 35 -1 50 52 47 -1 52 49 44 -1 23 26 17 -1 26 22 15 -1 7 22 24 -1 10 24 21 -1 42 28 34 -1 45 34 30 -1 22 7 1 -1 ]
            creaseAngle 1
          }
        }
      ]
    }
  ]
  name IS name
  model "cardboard box"
  boundingObject Box {
    size %{= size.x }% %{= size.y }% %{= size.z }%
  }
  %{ if mass > 0 then }%
  physics Physics {
    density -1
    mass %{= mass}%
  }
  %{ end }%
  locked IS locked
}
}
