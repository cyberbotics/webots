#VRML_SIM R2022a utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# A box object with rounded corners and edges implemented at the Solid-node level.
# The box has similar properties as the VRML Box node in term of axis and fields.
# template language: javascript

PROTO SolidRoundedBox [
  field SFVec3f    translation           0 0 0
  field SFRotation rotation              0 0 1 0
  field SFString   name                  "rounded box"
  field SFVec3f    size                  2 2 2                                                                                                          # Defines the size of the box.
  field SFFloat    borderRadius          0.5                                                                                                            # Defines the radius of the box borders.
  field SFInt32    subdivision           24                                                                                                             # Defines the number of polygons used to represent the box and so its resolution.
  field SFString   contactMaterial       "default"                                                                                                      # Is `Solid.contactMaterial`.
  field SFNode     appearance            PBRAppearance { baseColorMap ImageTexture { url [ "webots://projects/default/worlds/textures/tagged_wall.jpg" ] } metalness 0 roughness 0.5 }   # Defines the appearance of the box.
  field SFNode     physics               NULL                                                                                                           # Is `Solid.physics`.
  field SFBool     enableBoundingObject  TRUE                                                                                                           # Defines whether the solid should have a bounding object.
]
{
  %<
    // parameter checking
    let subdivision = fields.subdivision.value;
    if (subdivision > 200)
      console.log('High value for \'subdivision\'. This can slow down the simulation');

    if (subdivision < 8) {
      console.error('\'subdivision\' must be greater or equal to 8. Using 8 instead.');
      subdivision = 8;
    }

    let borderRadius = fields.borderRadius.value;
    if (borderRadius <= 0) {
      borderRadius = fields.borderRadius.defaultValue;
      console.error('\'borderRadius\' must be strictly positive. Value reset to ' + borderRadius + '.');
    }

    let size = fields.size.value;
    if (size.x <= 0 || size.y <= 0 || size.z <= 0) {
      size = fields.size.defaultValue;
      console.error('\'size\' must contain positive values. Value reset to (' + size.x + ', ' + size.y + ', ' + size.z + ').');
    }

    if (2 * borderRadius > size.x || 2 * borderRadius > size.y || 2 * borderRadius > size.z) {
      borderRadius = 0.5 * Math.min(size.x, size.y, size.z);
      console.error('\'borderRadius\' must be smaller or equal than half of the smallest \'size\' element. Value reset to ' + borderRadius + '.');
    }

    const borderDiameter = 2 * borderRadius;
    const innerSize = {x: size.x - borderDiameter, y: size.y - borderDiameter, z: size.z - borderDiameter};
  >%
  Solid {
    translation IS translation
    rotation IS rotation
    children [
      DEF SOLID_ROUNDED_BOX_GROUP Group {
        children [
          %< if (innerSize.x <= 0 && innerSize.y <= 0 && innerSize.z <= 0) { >%
            # edge case: a sphere
            Shape {
              appearance IS appearance
              geometry Sphere {
                radius %<= 0.5 * size.x >%
              }
            }
          %< } >%
          %< if (innerSize.x > 0 && innerSize.y > 0) { >%
            Shape {
              appearance IS appearance
              geometry Box {
                size %<= innerSize.x >% %<= innerSize.y >% %<= size.z >%
              }
            }
          %< } >%
          %< if (innerSize.x > 0 && innerSize.z > 0) { >%
            Shape {
              appearance IS appearance
              geometry Box {
                size %<= innerSize.x >% %<= size.y >% %<= innerSize.z >%
              }
            }
          %< } >%
          %< if (innerSize.y > 0 && innerSize.z > 0) { >%
            Shape {
              appearance IS appearance
              geometry Box {
                size %<= size.x >% %<= innerSize.y >% %<= innerSize.z >%
              }
            }
          %< } >%
          %< if (innerSize.x > 0) { >%
            Transform {
              translation 0 %<= 0.5 * innerSize.y >% %<= 0.5 * innerSize.z >%
              rotation 0.57735 0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Capsule {
                    height %<= innerSize.x >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation 0 %<= -0.5 * size.y + borderRadius >% %<= 0.5 * innerSize.z >%
              rotation 0.57735 0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Capsule {
                    height %<= innerSize.x >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation 0 %<= 0.5 * innerSize.y >% %<= - 0.5 * innerSize.z >%
              rotation 0.57735 0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Capsule {
                    height %<= innerSize.x >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation 0 %<= - 0.5 * innerSize.y >% %<= - 0.5 * innerSize.z >%
              rotation 0.57735 0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Capsule {
                    height %<= innerSize.x >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
          %< } >%
          %< if (innerSize.z > 0) { >%
            Transform {
              translation %<= 0.5 * innerSize.x >% %<= 0.5 * innerSize.y >% 0
              rotation 0 0 1 1.5708
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.z >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= 0.5 * innerSize.x >% %<= - 0.5 * innerSize.y >% 0
              rotation 0 0 1 1.5708
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.z >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= - 0.5 * innerSize.x >% %<= - 0.5 * innerSize.y >% 0
              rotation 0 0 1 1.5708
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.z >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= - 0.5 * innerSize.x >% %<= 0.5 * innerSize.y >% 0
              rotation 0 0 1 1.5708
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.z >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
          %< } >%
          %< if (innerSize.y > 0) { >%
            Transform {
              translation %<= 0.5 * innerSize.x >% 0 %<= 0.5 * innerSize.z >%
              rotation 0.57735 -0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.y >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= 0.5 * innerSize.x >% 0 %<= - 0.5 * innerSize.z >%
              rotation 0.57735 -0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.y >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= - 0.5 * innerSize.x >% 0 %<= - 0.5 * innerSize.z >%
              rotation 0.57735 -0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.y >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
            Transform {
              translation %<= - 0.5 * innerSize.x >% 0 %<= 0.5 * innerSize.z >%
              rotation 0.57735 -0.57735 0.57735 2.09394
              children [
                Shape {
                  appearance IS appearance
                  geometry Cylinder {
                    height %<= innerSize.y >%
                    radius %<= borderRadius >%
                    subdivision %<= subdivision >%
                  }
                }
              ]
            }
          %< } >%
        ]
      }
    ]
    name IS name
    model "rounded box"
    contactMaterial IS contactMaterial
    %< if (fields.enableBoundingObject.value) { >%
    boundingObject USE SOLID_ROUNDED_BOX_GROUP
    %< } >%
    physics IS physics
  }
}
