#VRML_SIM R2022a utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# This bounding object with a torus shape is formed by a group of spheres.
# template language: javascript

PROTO TorusBoundingObject [
  field SFFloat    majorRadius     2   # Defines the major radius of the torus.
  field SFFloat    minorRadius     1   # Defines the minor radius of the torus.
  field SFInt32    subdivision     24  # Defines the number of polygons used to represent the torus and so its resolution.
]
{
  %<
    import * as wbgeometry from 'wbgeometry.js';

    // parameter checking
    let subdivision = fields.subdivision.value;
    if (subdivision > 200)
      console.log('High value for \'subdivision\'. This can slow down the simulation');
    else if (subdivision < 8) {
      subdivision = 8;
      console.error('\'subdivision\' must be greater or equal to 8. Value reset to ' + subdivision + '.');
    }

    let majorRadius = fields.majorRadius.value;
    if (majorRadius <= 0) {
      majorRadius = fields.majorRadius.defaultValue;
      console.error('\'majorRadius\' must be strictly positive. Value reset to ' + majorRadius + '.');
    }

    let minorRadius = fields.minorRadius.value;
    if (minorRadius <= 0) {
      minorRadius = fields.minorRadius.defaultValue;
      console.error('\'minorRadius\' must be strictly positive. Value reset to ' + minorRadius + '.');
    }

    const referenceCircle = wbgeometry.circle(1, subdivision, {x: 0, y: 0}, 0);
  >%
  Group { # set of spheres
    children [
       %< for (let i = 0; i < referenceCircle.length; ++i) { >%
        Transform {
          translation %<= majorRadius * referenceCircle[i].x >% %<= majorRadius * referenceCircle[i].y >% 0
          children [
            Sphere {
              radius %<= minorRadius >%
              subdivision 2
            }
          ]
        }
      %< } >%
    ]
  }
}
