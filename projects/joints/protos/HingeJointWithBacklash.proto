#VRML_SIM R2021b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# This extension of the hinge joint allows to model the effect of backlash.

PROTO HingeJointWithBacklash [
  field SFNode                                 jointParameters   HingeJointParameters {}
  field SFFloat                                backlash          0.01   # Defines the gear clearence, [0, inf).
  field SFFloat                                gearMass          0.1    # Defines the gear mass, [0, inf).
  field MFNode                                 device            [ ]    # {RotationalMotor, PositionSensor, Brake}.
  field MFNode{PositionSensor{}}               outputSensor      [ ]    # {PositionSensor}.
  field MFNode{Group{}, Transform{}, Shape{}}  startPoint        NULL   # {Group, Transform, or Shape}.
  field SFNode                                 endPoint          NULL   # {Solid, SolidReference, or Slot}.
]
{
  %{
    -- parameter retrieval
    local axis = fields.jointParameters.value.fields.axis.value
    local anchor = fields.jointParameters.value.fields.anchor.value
    -- parameter sanity check
    local backlash = fields.backlash.value
    if backlash < 0 then
      io.stderr:write("'backlash' value must be greater or equal to 0. Using default value.\n")
      backlash = fields.backlash.defaultValue
    elseif backlash > 0 and backlash < 0.01 then
      print("Values of 'backlash' smaller than 0.01 are unlikely to be correctly modeled by the physics engine.")
    end

    local gearMass = fields.gearMass.value
    if gearMass <= 0 then
      io.stderr:write("'gearMass' value must be positive. Using default value.\n")
      gearMass = fields.gearMass.defaultValue
    end

    if (backlash == 0 and gearMass > 0) or (backlash == 0 and fields.startPoint.value ~= nil) or
       (backlash == 0 and fields.outputSensor.value ~= nil) then
      print("'HingeJointWithBacklash' replaced with a 'HingeJoint'. 'gearMass', 'startPoint' and 'outputSensor' are being ignored. You should consider replacing the node.\n")
    end
  }%
  HingeJoint {
    jointParameters IS jointParameters
    device IS device
    %{ if backlash == 0 then }% # use a normal hinge
      endPoint IS endPoint
    %{ else }%
      endPoint Solid {
        name %{='"start_point_' .. context.id .. '"'}% # prevent name clashes
        children [
          Group {
            children IS startPoint
          }
          HingeJoint {
            jointParameters HingeJointParameters {
              axis %{= axis.x}% %{= axis.y}% %{= axis.z}%
              anchor %{= anchor.x}% %{= anchor.y}% %{= anchor.z}%
              minStop %{= - backlash*0.5}%
              maxStop %{= backlash*0.5}%
              stopERP 0
            }
            device IS outputSensor
            endPoint IS endPoint
          }
        ]
        physics Physics {
          inertiaMatrix [ 4e-8 4e-8 4e-8, 0.0 0.0 0.0 ] # sphere of radius 0.01
          centerOfMass %{= anchor.x}% %{= anchor.y}% %{= anchor.z}%
          density -1
          mass IS gearMass
        }
      }
    %{ end }%
  }
}
