#VRML_SIM R2023b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/vehicles/protos/abstract/AckermannVehicle.proto
# keywords: vehicle/other
# Generic model of an Ackerman vehicle allowing users to easily create any vehicle that complies with the Ackermann model.
# The positions and joints of the wheels are set automatically using the `trackFont`, `trackRear` and `wheelbase` fields of the PROTO.
# These wheels are automatically connected to the appropriate joints in order to rotate along the correct axis.
# Motor nodes called `right_steer` and `left_steer` are connected to the front joints to be able to steer the vehicle.
# The rest of the vehicle (shape, sensors, other actuators) can be added in the `extensionSlot` field, see for example the `SimpleVehicle` PROTO.
# This model was sponsored by the [CTI project RO2IVSim](http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).
# template language: javascript

EXTERNPROTO "VehicleWheel.proto"

PROTO AckermannVehicle [
  field SFVec3f    translation                    0 0 0.4
  field SFRotation rotation                       0 0 1 0
  field SFString   name                           "vehicle"
  field SFString   model                          "Ackermann vehicle"
  field SFString   controller                     "<generic>"
  field MFString   controllerArgs                 []
  field SFBool     supervisor                     FALSE
  field SFBool     synchronization                TRUE
  field SFFloat    trackFront                     1.7
  field SFFloat    trackRear                      1.7
  field SFFloat    wheelbase                      4.0
  field SFFloat    minSteeringAngle              -1
  field SFFloat    maxSteeringAngle               1
  field SFFloat    suspensionFrontSpringConstant  100000
  field SFFloat    suspensionFrontDampingConstant 4000
  field SFFloat    suspensionRearSpringConstant   100000
  field SFFloat    suspensionRearDampingConstant  4000
  field SFFloat    wheelsDampingConstant          5
  field SFFloat    maxSteeringTorque              10000
  field MFNode     extensionSlot                  []
  field SFNode     boundingObject                 NULL
  field SFNode     physics                        NULL
  field SFFloat    radarCrossSection              100
  field MFColor    recognitionColors              []
  field SFNode     wheelFrontRight                VehicleWheel { name "front right wheel" }
  field SFNode     wheelFrontLeft                 VehicleWheel { name "front left wheel" wheelSide TRUE }
  field SFNode     wheelRearRight                 VehicleWheel { name "rear right wheel" }
  field SFNode     wheelRearLeft                  VehicleWheel { name "rear left wheel" wheelSide TRUE }
  field MFNode     axisDevicesFrontRight          []
  field MFNode     axisDevicesFrontLeft           []
  field MFNode     axisDevicesRearRight           []
  field MFNode     axisDevicesRearLeft            []
  field SFString   customData                     ""
  field SFString   window                         "<generic>"
]
{
  %<
    // tracks check
    let frontTrack = fields.trackFront.value;
    if (frontTrack <= 0.0) {
      frontTrack = fields.trackFront.defaultValue;
      console.error('\'trackFront\' must be strictly positive. Value reset to ' + frontTrack + '.');
    }
    let rearTrack = fields.trackRear.value;
    if (rearTrack <= 0.0) {
      rearTrack = fields.trackRear.defaultValue;
      console.error('\'trackRear\' must be strictly positive. Value reset to ' + rearTrack + '.');
    }
    // wheelbase check
    let wheelbase = fields.wheelbase.value;
    if (wheelbase <= 0.0) {
      wheelbase = fields.wheelbase.defaultValue;
      console.error('\'wheelbase\' must be strictly positive. Value reset to ' + wheelbase + '.');
    }
  >%
  Robot {
    translation IS translation
    rotation IS rotation
    children [
      Pose {
        translation %<= wheelbase >% %<= frontTrack * 0.5 >% 0
        rotation 0 0 1 3.14159
        children [
          DEF LEFT_STEER_HINGE2 Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0 -1
              suspensionSpringConstant IS suspensionFrontSpringConstant
              suspensionDampingConstant IS suspensionFrontDampingConstant
              suspensionAxis 0 0 1
            }
            jointParameters2 JointParameters {
              axis 0 -1 0
              dampingConstant IS wheelsDampingConstant
            }
            device [
              RotationalMotor {
                name "left_steer"
                minPosition IS minSteeringAngle
                maxPosition IS maxSteeringAngle
                maxTorque IS maxSteeringTorque
                sound ""
              }
              PositionSensor {
                name "left_steer_sensor"
              }
            ]
            device2 IS axisDevicesFrontLeft
            endPoint Slot {
              type "vehicle wheel"
              endPoint IS wheelFrontLeft
            }
          }
        ]
      }
      Pose {
        translation %<= wheelbase >% %<= -frontTrack * 0.5 >% 0
        children [
          DEF RIGHT_STEER_HINGE2 Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0 -1
              suspensionSpringConstant IS suspensionFrontSpringConstant
              suspensionDampingConstant IS suspensionFrontDampingConstant
              suspensionAxis 0 0 1
            }
            jointParameters2 JointParameters {
              axis 0 1 0
              dampingConstant IS wheelsDampingConstant
            }
            device [
              RotationalMotor {
                name "right_steer"
                minPosition IS minSteeringAngle
                maxPosition IS maxSteeringAngle
                maxTorque IS maxSteeringTorque
                sound ""
              }
              PositionSensor {
                name "right_steer_sensor"
              }
            ]
            device2 IS axisDevicesFrontRight
            endPoint Slot {
              type "vehicle wheel"
              endPoint IS wheelFrontRight
            }
          }
        ]
      }
      Pose {
        translation 0 %<= rearTrack * 0.5 >% 0
        rotation 0 0 1 3.14159
        children [
          DEF LEFT_REAR_WHEEL_HINGE HingeJoint {
            jointParameters HingeJointParameters {
              axis 0 -1 0
              dampingConstant IS wheelsDampingConstant
              suspensionSpringConstant IS suspensionRearSpringConstant
              suspensionDampingConstant IS suspensionRearDampingConstant
              suspensionAxis 0 0 1
            }
            device IS axisDevicesRearLeft
            endPoint Slot {
              type "vehicle wheel"
              endPoint IS wheelRearLeft
            }
          }
        ]
      }
      Pose {
        translation 0 %<= -rearTrack * 0.5 >% 0
        children [
          DEF RIGHT_REAR_WHEEL_HINGE HingeJoint {
            jointParameters HingeJointParameters {
              axis 0 1 0
              dampingConstant IS wheelsDampingConstant
              suspensionSpringConstant IS suspensionRearSpringConstant
              suspensionDampingConstant IS suspensionRearDampingConstant
              suspensionAxis 0 0 1
            }
            device IS axisDevicesRearRight
            endPoint Slot {
              type "vehicle wheel"
              endPoint IS wheelRearRight
            }
          }
        ]
      }
      Speaker {
        translation %<= wheelbase >% 0 0
        name "engine_speaker"
      }
      Group {
        children IS extensionSlot
      }
    ]
    name IS name
    model IS model
    controller IS controller
    controllerArgs IS controllerArgs
    customData IS customData
    window IS window
    supervisor IS supervisor
    synchronization IS synchronization
    boundingObject IS boundingObject
    physics IS physics
    radarCrossSection IS radarCrossSection
    recognitionColors IS recognitionColors
  }
}
