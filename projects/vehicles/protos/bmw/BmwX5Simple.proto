#VRML_SIM R2023b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/vehicles/protos/bmw/BmwX5.proto
# keywords: vehicle/car
# Simple kinematic model of the BMW X5 to be moved with a Supervisor.
# This model was sponsored by the [CTI project RO2IVSim](http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).

EXTERNPROTO "BmwX5Wheel.proto"
EXTERNPROTO "BmwX5FrontLight.proto"
EXTERNPROTO "BmwX5RightIndicator.proto"
EXTERNPROTO "BmwX5LeftIndicator.proto"
EXTERNPROTO "BmwX5AntiFogLight.proto"
EXTERNPROTO "BmwX5RearLight.proto"
EXTERNPROTO "BmwX5BrakingLight.proto"
EXTERNPROTO "BmwX5BackwardsLight.proto"
EXTERNPROTO "BmwX5RightWiper.proto"
EXTERNPROTO "BmwX5LeftWiper.proto"
EXTERNPROTO "BmwX5Mesh.proto"
EXTERNPROTO "BmwX5RightWingMirror.proto"
EXTERNPROTO "BmwX5LeftWingMirror.proto"

PROTO BmwX5Simple [
  field       SFVec3f    translation         0 0 0.4           # Is `Robot.translation`.
  field       SFRotation rotation            0 0 1 0           # Is `Robot.rotation`.
  field       SFColor    color               0.43 0.11 0.1     # Defines the car body color.
  field       MFColor    recognitionColors   [ 0.43 0.11 0.1 ] # Is `Robot.recognitionColors`.
  field       SFString   name                "vehicle"         # Is `Robot.name`.
  field       SFString   controller          "<none>"          # Is `Robot.controller`.
  field       MFString   controllerArgs      [ ]               # Is `Robot.controllerArgs`.
  field       SFString   window              "<none>"          # Is `Robot.window`.
  field       MFNode     sensorsSlotFront    [ ]               # Extends the robot with new nodes on the front of the car.
  field       MFNode     sensorsSlotRear     [ ]               # Extends the robot with new nodes on the back of the car.
  field       MFNode     sensorsSlotTop      [ ]               # Extends the robot with new nodes on the roof of the car.
  field       MFNode     sensorsSlotCenter   [ ]               # Extends the robot with new nodes at the center of the car.
  field       SFBool     wheelBoundingObject FALSE             # Defines whether the wheels should have a bounding object.
  hiddenField SFVec3f frontRightWheelAngularVelocity 0 0 0
  hiddenField SFVec3f frontLeftWheelAngularVelocity  0 0 0
  hiddenField SFVec3f rearRightWheelAngularVelocity  0 0 0
  hiddenField SFVec3f rearLeftWheelAngularVelocity   0 0 0
]
{
  Robot {
    translation IS translation
    rotation IS rotation
    recognitionColors IS recognitionColors # somehow duplicate with the color field, but useful to avoid lua PROTO regeneration when colors change.
    children [
      Pose {
        translation -1 0 0.3
        rotation 0 0 1 3.14159
        children IS sensorsSlotRear
      }
      Pose {
        translation 3.85 0 0.45
        children IS sensorsSlotFront
      }
      Pose {
        translation 1 0 1.45
        children IS sensorsSlotTop
      }
      Pose {
        children IS sensorsSlotCenter
      }
      DEF FRONT_RIGHT_WHEEL Solid {
        angularVelocity IS frontRightWheelAngularVelocity
        translation 2.995 -0.814 0
        children [
          Slot {
            type "vehicle wheel"
            endPoint BmwX5Wheel {
              boundingObject IS wheelBoundingObject
            }
          }
        ]
        name "front right wheel"
      }
      DEF FRONT_LEFT_WHEEL Solid {
        angularVelocity IS frontLeftWheelAngularVelocity
        translation 2.995 0.814 0
        rotation 0 0 1 -3.14159
        children [
          Slot {
            type "vehicle wheel"
            endPoint BmwX5Wheel {
              wheelSide TRUE
              boundingObject IS wheelBoundingObject
            }
          }
        ]
        name "front left wheel"
      }
      DEF REAR_RIGHT_WHEEL Solid {
        angularVelocity IS rearRightWheelAngularVelocity
        translation 0 -0.814 0
        children [
          Slot {
            type "vehicle wheel"
            endPoint BmwX5Wheel {
              boundingObject IS wheelBoundingObject
            }
          }
        ]
        name "rear right wheel"
      }
      DEF REAR_LEFT_WHEEL Solid {
        angularVelocity IS rearLeftWheelAngularVelocity
        translation 0 0.814 0
        rotation 0 0 1 -3.14159
        children [
          Slot {
            type "vehicle wheel"
            endPoint BmwX5Wheel {
              wheelSide TRUE
              boundingObject IS wheelBoundingObject
            }
          }
        ]
        name "rear left wheel"
      }
      Pose {
        rotation 0.57735 0.57735 0.57735 2.094395
        children [
          BmwX5FrontLight {
          }
          BmwX5RightIndicator {
          }
          BmwX5LeftIndicator {
          }
          BmwX5AntiFogLight {
          }
          BmwX5RearLight {
          }
          BmwX5BrakingLight {
          }
          BmwX5BackwardsLight {
          }
          BmwX5RightWiper {
          }
          BmwX5LeftWiper {
          }
          BmwX5Mesh {
            color IS color
          }
          BmwX5RightWingMirror {
          }
          BmwX5LeftWingMirror {
          }
        ]
      }
    ]
    name IS name
    controller IS controller
    controllerArgs IS controllerArgs
    model "BMW X5"
    radarCrossSection 100
    boundingObject Pose {
      translation 1.35 0 0.7
      children [
        Box {
          size 4.5 1.8 1.6
        }
      ]
    }
    physics NULL
    window IS window
  }
}
