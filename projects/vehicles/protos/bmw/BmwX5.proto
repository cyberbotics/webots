#VRML_SIM R2023b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/vehicles/protos/bmw/BmwX5Simple.proto
# keywords: vehicle/car
# Model of an BMW X5 car using the Car PROTO as a base.
# The vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.
# This model was sponsored by the [CTI project RO2IVSim](http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).
# For the last 6 fields to have any effect, the 'interior' has to be enabled.
# template language: javascript

EXTERNPROTO "webots://projects/vehicles/protos/abstract/CarSteeringWheel.proto"
EXTERNPROTO "webots://projects/vehicles/protos/abstract/Car.proto"
EXTERNPROTO "BmwX5Wheel.proto"
EXTERNPROTO "webots://projects/vehicles/protos/abstract/VehicleLights.proto"
EXTERNPROTO "BmwX5FrontLight.proto"
EXTERNPROTO "BmwX5RightIndicator.proto"
EXTERNPROTO "BmwX5LeftIndicator.proto"
EXTERNPROTO "BmwX5AntiFogLight.proto"
EXTERNPROTO "BmwX5RearLight.proto"
EXTERNPROTO "BmwX5BrakingLight.proto"
EXTERNPROTO "BmwX5BackwardsLight.proto"
EXTERNPROTO "BmwX5RightWiper.proto"
EXTERNPROTO "BmwX5LeftWiper.proto"
EXTERNPROTO "BmwX5Mesh.proto"
EXTERNPROTO "BmwX5InnerWindow.proto"
EXTERNPROTO "BmwX5RightWingMirror.proto"
EXTERNPROTO "BmwX5LeftWingMirror.proto"
EXTERNPROTO "BmwX5Interior.proto"
EXTERNPROTO "BmwX5CentralMirrorFrame.proto"
EXTERNPROTO "BmwX5CentralMirror.proto"
EXTERNPROTO "BmwX5RearInterior.proto"

PROTO BmwX5 [
  field SFVec3f      translation              0 0 0.4              # Is `Car.translation`.
  field SFRotation   rotation                 0 0 1 0              # Is `Car.rotation`.
  field SFColor      color                    0.43 0.11 0.1        # Defines the car body color.
  field SFString     engineSound              "sounds/engine.wav"  # Is `Car.engineSound`.
  field SFString     name                     "vehicle"            # Is `Car.name`.
  field SFString     controller               "<generic>"          # Is `Car.controller`.
  field MFString     controllerArgs           []                   # Is `Car.controllerArgs`.
  field SFBool       supervisor               FALSE                # Is `Car.supervisor`.
  field SFBool       synchronization          TRUE                 # Is `Car.synchronization`.
  field SFBool       windshieldWipers         TRUE                 # Defines whether the car should have windshiel wipers.
  field SFBool       frontSpotLights          FALSE                # Defines whether the car should have front spot lights.
  field SFBool       rearMirror               FALSE                # Defines whether the car should have a rear mirror.
  field SFBool       leftWingMirror           FALSE                # Defines whether the car should have a left wing mirror.
  field SFBool       rightWingMirror          FALSE                # Defines whether the car should have a right wing mirror.
  field SFFloat      mirrorFar                200.0                # Defines the far clipping plane for the rear, left and right mirrors.
  field MFNode       sensorsSlotFront         []                   # Extends the robot with new nodes on the front of the car.
  field MFNode       sensorsSlotRear          []                   # Extends the robot with new nodes on the back of the car.
  field MFNode       sensorsSlotTop           []                   # Extends the robot with new nodes on the roof of the car.
  field MFNode       sensorsSlotCenter        []                   # Extends the robot with new nodes at the center of the car.
  field SFBool       interior                 TRUE                 # Defines whether the car should have the interior walls and the dashboard.
  field SFBool       dynamicSpeedDisplay      TRUE                 # Defines whether the current speed can be displaed in the dashboard.
  field SFBool       indicatorLevers          TRUE                 # Defines whether the car has indicator levers.
  field SFNode       steeringWheel            CarSteeringWheel {}  # Defines the car steering wheel.
  field SFBool       completeInterior         TRUE                 # Defines whether the interior of the car should have seats, armrests, and handbrake.
  field SFBool       shifter                  TRUE                 # Defines whether the interior of the car should have the gear shifter.
  field SFFloat      outerWindowTransparency  0.4                  # Defines the transparency level of the windows seen from outside.
  field SFFloat      innerWindowTransparency  0.7                  # Defines the transparency level of the windows seen from inside.
  field SFBool       innerWindowDust          FALSE                # Defines whether there is dust on windows seen from inside.
  field SFString     window                   "automobile"         # Is `Car.window`.
]
{
  %<
    let interior = fields.interior.value;
    let outerWindowTransparency = fields.outerWindowTransparency.value;
    let innerWindowTransparency = fields.innerWindowTransparency.value;
    const frontSpotLights = fields.frontSpotLights.value;
    const rearMirror = fields.rearMirror.value;
    const dynamicSpeedDisplay = fields.dynamicSpeedDisplay.value;
    const completeInterior = fields.completeInterior.value;
    const innerWindowDust = fields.innerWindowDust.value;
    if (!interior && rearMirror)
      console.error('The rear mirror can only enabled if \'interior\' is set to TRUE.');

    if (!interior && (outerWindowTransparency !== fields.outerWindowTransparency.defaultValue || innerWindowTransparency !== fields.innerWindowTransparency.defaultValue)) {
      outerWindowTransparency = fields.outerWindowTransparency.defaultValue;
      innerWindowTransparency = fields.innerWindowTransparency.defaultValue;
      console.error('Window transparencies were reset to default values.');
    }
    if (!interior && (dynamicSpeedDisplay || completeInterior || innerWindowDust))
      console.error('In order to see the effect of the last 6 fields, the \'interior\' has to be enabled.');
  >%
  Car {
    translation IS translation
    rotation IS rotation
    engineSound IS engineSound
    trackFront 1.628
    trackRear 1.628
    wheelbase 2.995
    time0To100 7
    engineMinRPM 1000
    engineMaxRPM 6500
    brakeCoefficient 1800  # calibrated for braking from 100 to 0km/h in 36.5m
    engineFunctionCoefficients 34.11 0.136 -0.00001461
    wheelsDampingConstant 2
    gearRatio   [-12.5 12.5 8 5.35 4.3 4]
    wheelFrontLeft BmwX5Wheel {
      name "front left wheel"
      wheelSide TRUE
      physics DEF WHEEL_PHYSICS Physics {
        density -1
        mass 30
      }
    }
    wheelFrontRight BmwX5Wheel {
      name "front right wheel"
      physics USE WHEEL_PHYSICS
    }
    wheelRearRight BmwX5Wheel {
      name "rear right wheel"
      physics USE WHEEL_PHYSICS
    }
    wheelRearLeft BmwX5Wheel {
      name "rear left wheel"
      wheelSide TRUE
      physics USE WHEEL_PHYSICS
    }
    extensionSlot [
      # Sensors slots
      Pose {
        translation -1 0 0.3
        rotation 0 0 1 3.14159
        children IS sensorsSlotRear
      }
      Pose {
        translation 3.85 0 0.45
        children IS sensorsSlotFront
      }
      Pose {
        translation 1 0 1.45
        children IS sensorsSlotTop
      }
      Pose {
        children IS sensorsSlotCenter
      }
      # lights
      VehicleLights {
        front [
          Group {
            children [
              %< if (frontSpotLights) { >%
                SpotLight {
                  attenuation 0 0 1
                  intensity 20
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction 1 -0.2 -1
                  location 3.95 0.65 0.45
                  radius 20
                  castShadows TRUE
                }
                SpotLight {
                  attenuation 0 0 1
                  intensity 20
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction 1 0.2 -1
                  location 3.95 -0.65 0.45
                  radius 20
                  castShadows TRUE
                }
              %< } >%
              Pose {
                rotation 0.57735 0.57735 0.57735 2.094395
                children [
                  BmwX5FrontLight {
                  }
                ]
              }
            ]
          }
        ]
        rightIndicator [
          Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5RightIndicator {
              }
            ]
          }
        ]
        leftIndicator [
          Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5LeftIndicator {
              }
            ]
          }
        ]
        antifog [
           Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5AntiFogLight {
              }
            ]
          }
        ]
        rear [
          Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5RearLight {
              }
            ]
          }
        ]
        braking [
          Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5BrakingLight {
              }
            ]
          }
        ]
        backwards [
          Pose {
            rotation 0.57735 0.57735 0.57735 2.094395
            children [
              BmwX5BackwardsLight {
              }
            ]
          }
        ]
      }
      %< if (interior) { >%
          DEF INTERIOR_RIGHT_INDICATOR LED {
            children [
              Shape {
                appearance DEF INDICATOR_APPEARANCE PBRAppearance {
                  metalness 0
                  roughness 0.3
                  baseColor 0.255686 0.530196 0.353725
                }
                geometry IndexedFaceSet {
                  coord Coordinate {
                    point [
                      2.176469 0.414489 0.730049 2.176469 0.410942 0.730049 2.173784 0.414489 0.727043 2.173784 0.410942 0.727043 2.171399 0.410942 0.724502 2.178832 0.410942 0.732554 2.175115 0.406213 0.728528
                    ]
                  }
                  coordIndex [
                    1, 3, 6, -1, 5, 1, 6, -1, 1, 2
                    3, -1, 3, 4, 6, -1, 1, 0, 2, -1
                  ]
                }
              }
            ]
            name "interior_right_indicators"
            color 0 0.596078 0
          }
          DEF INTERIOR_LEFT_INDICATOR LED {
            children [
              Shape {
                appearance USE INDICATOR_APPEARANCE
                geometry IndexedFaceSet {
                  coord Coordinate {
                    point [
                      2.173784 0.415657 0.727043 2.173784 0.419204 0.727043 2.176469 0.415657 0.730048 2.176469 0.419204 0.730048 2.178832 0.419204 0.732553 2.171399 0.419204 0.724502 2.175115 0.423934 0.728528
                    ]
                  }
                  coordIndex [
                    1, 2, 3, -1, 1, 3, 6, -1, 5, 1
                    6, -1, 3, 4, 6, -1, 1, 0, 2, -1
                  ]
                }
              }
            ]
            name "interior_left_indicators"
            color 0 0.596078 0
          }
      %< } >%
      # windshield wipers
      %< if (fields.windshieldWipers.value) { >%
      DEF RIGHT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis -1.7 0.04 -2.19
          anchor 2.55 0.05 0.79
        }
        device [
          DEF RIGHT_WIPER_MOTOR RotationalMotor {
            name "right_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
          DEF WIPER_SENSOR PositionSensor {
            name "wiper_sensor"
          }
        ]
        endPoint Solid {
          children [
            Pose {
              rotation 0.57735 0.57735 0.57735 2.094395
              children [
                BmwX5RightWiper{
                  %< if (outerWindowTransparency !== 0) { >%
                  castShadows TRUE
                %< } >%
                }
              ]
            }
          ]
          name "right wiper"
        }
      }
      DEF LEFT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis -1.25 -0.08 -1.85
          anchor 2.46 0.63 0.84
        }
        device [
          DEF LEFT_WIPER_MOTOR RotationalMotor {
            name "left_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
        ]
        endPoint Solid {
          children [
            Pose {
              rotation 0.57735 0.57735 0.57735 2.094395
              children [
                BmwX5LeftWiper{
                  %< if (outerWindowTransparency !== 0) { >%
                    castShadows TRUE
                  %< } >%
                }
              ]
            }
          ]
          name "left wiper"
        }
      }
      %< } >%
      Pose {
          rotation 0.57735 0.57735 0.57735 2.094395
          children [
            BmwX5Mesh {
              color IS color
              outerWindowTransparency %<= outerWindowTransparency >%
            }
          ]
      }
      %< if (innerWindowTransparency !== 1) { >%
        Pose {
           rotation 0.57735 0.57735 0.57735 2.094395
           children [
             BmwX5InnerWindow {
               innerWindowTransparency %<= innerWindowTransparency >%
               innerWindowDust IS innerWindowDust
             }
          ]
        }
      %< } >%
      %< if (fields.rightWingMirror.value) { >%
          DEF RIGHT_WING_DISPLAY Display {
            children [
      %< } >%
      Pose {
        rotation 0.57735 0.57735 0.57735 2.094395
        children [
          BmwX5RightWingMirror {
          }
        ]
      }
      %< if (fields.rightWingMirror.value) { >%
            ]
            name "right_wing_display"
            width 512
            height 256
          }
      %< } >%
      %< if (fields.leftWingMirror.value) { >%
          DEF LEFT_WING_DISPLAY Display {
            children [
      %< } >%
      Pose {
      rotation 0.57735 0.57735 0.57735 2.094395
        children [
          BmwX5LeftWingMirror {
          }
        ]
      }
      %< if (fields.leftWingMirror.value) { >%
            ]
            name "left_wing_display"
            width 512
            height 256
          }
      %< } >%
      # vehicle interior
      %< if (interior) { >%
              Pose {
                rotation 0.57735 0.57735 0.57735 2.094395
                children [
                  BmwX5Interior {
                    %< if (dynamicSpeedDisplay) { >%
                      baseColorMap "textures/bmw_interior_speedometer_without_needles.jpg"
                    %< } else { >%
                      baseColorMap "textures/bmw_interior_speedometer.jpg"
                    %< } >%
                    indicatorLevers IS indicatorLevers
                  }
                ]
              }
              DEF REAR_MIRROR Hinge2Joint {
                jointParameters HingeJointParameters {
                  axis 0 0 1
                  anchor 1.757 -0.03 1.195
                }
                jointParameters2 JointParameters {
                  axis 0 1 0
                }
                device [
                  DEF REAR_YAW_MOTOR RotationalMotor {
                    name "rear_yaw_mirror_frame_motor"
                    maxPosition 0.2
                    minPosition -0.2
                    sound ""
                  }
                ]
                device2 [
                  DEF REAR_PITCH_MOTOR RotationalMotor {
                    name "rear_pitch_mirror_frame_motor"
                    maxPosition 0.2
                    minPosition -0.2
                    sound ""
                  }
                ]
                endPoint Solid {
                  children [
                    Pose {
                      rotation 0.57735 0.57735 0.57735 2.094395
                      children [
                        BmwX5CentralMirrorFrame {
                        }
                      ]
                    }
                    # When active, the parameter changes REAR_DISPLAY Shape to a display
                    %< if (rearMirror) { >%
                      DEF REAR_DISPLAY Display {
                        children [
                    %< } >%
                    Pose {
                      rotation 0.57735 0.57735 0.57735 2.094395
                      children [
                        BmwX5CentralMirror {
                        }
                      ]
                    }
                    %< if (rearMirror) { >%
                        ]
                        name "rear_display"
                        width 256
                        height 80
                      }
                    %< } >%
                  ]
                  name "central mirror"
                }
              }
              %< if (completeInterior) { >%
                Pose {
                    rotation 0.57735 0.57735 0.57735 2.094395
                    children [
                      BmwX5RearInterior {
                        shifter IS shifter
                      }
                    ]
                  }
              %< } >%
              Pose {
                translation 2.03 0.43 0.61
                rotation 0.57735 0.57735 0.57735 2.094395
                children [
                  Slot {
                    type "vehicle steering wheel"
                    endPoint IS steeringWheel
                  }
                ]
              }
              %< if (dynamicSpeedDisplay) { >%
                  DEF SPEED_NEEDLE HingeJoint {
                    jointParameters HingeJointParameters {
                      axis 0.055 0 -0.049
                      anchor 2.16 0.5135 0.7308
                    }
                    device [
                      RotationalMotor {
                        name "speed_needle_motor"
                        maxPosition 4.42
                        minPosition 0
                        sound ""
                      }
                    ]
                    endPoint Solid {
                      children [
                        DEF LEFT_NEEDLE Shape {
                          appearance DEF NEEDLE_APPEARANCE PBRAppearance {
                              metalness 0
                              roughness 1
                              baseColor 1 0.564706 0.0313725
                              emissiveColor 0.337255 0.180392 0.00784314
                          }
                          geometry IndexedFaceSet {
                            coord Coordinate {
                              point [
                                2.166991 0.516675 0.719537 2.168242 0.518099 0.721015 2.150175 0.551327 0.70148 2.150081 0.552352 0.701407 2.15071 0.551936 0.702112 2.150507 0.552172 0.701888 2.150215 0.552397 0.701561 2.150017 0.552171 0.701327 2.15008 0.551686 0.701383
                              ]
                            }
                            coordIndex [
                              5, 2, 4, -1, 1, 4, 0, -1, 5, 6
                              8, -1, 3, 7, 6, -1, 8, 2, 5, -1
                              0, 4, 2, -1, 6, 7, 8, -1
                            ]
                          }
                        }
                      ]
                      name "speed needle"
                    }
                  }
                  DEF RPM_NEEDLE HingeJoint {
                    jointParameters HingeJointParameters {
                      axis 0.055 0 -0.049
                      anchor 2.16 0.3389 0.7319
                    }
                    device [
                      RotationalMotor {
                        name "rpm_needle_motor"
                        maxPosition 4.42
                        minPosition 0
                        sound ""
                      }
                    ]
                    endPoint Solid {
                      children [
                        DEF RIGHT_NEEDLE Shape {
                          appearance USE NEEDLE_APPEARANCE
                          geometry IndexedFaceSet {
                            coord Coordinate {
                              point [
                                2.167793 0.341341 0.720529 2.169029 0.342776 0.722008 2.150643 0.375846 0.702505 2.150539 0.376871 0.702432 2.151172 0.37646 0.703137 2.150967 0.376694 0.702913 2.150672 0.376916 0.702587 2.150476 0.376689 0.702352 2.150545 0.376204 0.702408
                              ]
                            }
                            coordIndex [
                              5, 2, 4, -1, 1, 4, 0, -1, 5, 6
                              7, -1, 3, 7, 6, -1, 8, 2, 5, -1
                              0, 4, 2, -1, 5, 7, 8, -1
                            ]
                          }
                        }
                      ]
                      name "rpm needle"
                    }
                  }
              %< } >%
      %< } >%
      # mirror cameras
      %< if (fields.leftWingMirror.value) { >%
          DEF LEFT_WING_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0 0.3
              anchor 2.08 1 0.9
            }
            jointParameters2 JointParameters {
              axis 0.061 0.3 0
            }
            device [
              DEF LEFT_YAW_MOTOR RotationalMotor {
                name "left_wing_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF LEFT_PITCH_MOTOR RotationalMotor {
                name "left_wing_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF LEFT_WING_CAMERA Camera {
              translation 2.08 1 0.9
              rotation 0 0 1 3
              fieldOfView 0.5236
              name "left_wing_camera"
              width 512
              height 256
              far %<= fields.mirrorFar.value >%
            }
          }
      %< } >%
      %< if (fields.rightWingMirror.value) { >%
          DEF RIGHT_WING_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0 0.3
              anchor 2.08 -1 0.9
            }
            jointParameters2 JointParameters {
              axis -0.061 0.3 0
            }
            device [
              DEF RIGHT_YAW_MOTOR RotationalMotor {
                name "right_wing_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF RIGHT_PITCH_MOTOR RotationalMotor {
                name "right_wing_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF RIGHT_WING_CAMERA Camera {
              translation 2.08 -1 0.9
              rotation 0 0 1 3.28
              fieldOfView 0.5236
              name "right_wing_camera"
              width 512
              height 256
              far %<= fields.mirrorFar.value >%
            }
          }
      %< } >%
      %< if (rearMirror) { >%
          DEF REAR_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0 0.3
              anchor -0.7 0 1.3
            }
            jointParameters2 JointParameters {
              axis 0 0.3 0
            }
            device [
              DEF REAR_YAW_MOTOR RotationalMotor {
                name "rear_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF REAR_PITCH_MOTOR RotationalMotor {
                name "rear_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF REAR_CAMERA Camera {
              translation -0.7 0.8 1.3
              rotation 0 0 1 3.14156
              name "rear_camera"
              width 256
              height 80
              far %<= fields.mirrorFar.value >%
            }
          }
      %< } >%
    ]
    name IS name
    model "BMW X5"
    controller IS controller
    controllerArgs IS controllerArgs
    supervisor IS supervisor
    synchronization IS synchronization
    boundingObject Group {
      children [
        Pose {
          translation 2.6775 0 0.29
          rotation 0.57735 0.57735 0.57735 2.094395
          children [
            Box {
              size 1.73 0.76 2
            }
          ]
        }
        Pose {
          translation 0.5875 0 0.63
          rotation 0.57735 0.57735 0.57735 2.094395
          children [
            Box {
              size 1.73 1.44 2.14
            }
          ]
        }
        Pose {
          translation -0.1725 0 0.53
          rotation 0.57735 0.57735 0.57735 2.094395
          children [
            Box {
              size 1.73 0.78 1.41
            }
          ]
        }
      ]
    }
    radarCrossSection 100
    recognitionColors [
      %<= fields.color.value.r >% %<= fields.color.value.g >% %<= fields.color.value.b >%
    ]
    physics Physics {
      density -1
      mass 2000
      centerOfMass [
        1.2975 0 0.1
      ]
      inertiaMatrix [
        1125.07 4473.54 4346.1
        0 846.89 0
      ]
    }
    window IS window
  }
}
