#VRML_SIM R2022a utf8
# license: Apache License 2.0
# license url: http://www.apache.org/licenses/LICENSE-2.0
# A parquetry material.
# The type of parquetry can be set using the `type` field.
# The color can be overridden using the `colorOverride` field.
# template language: javascript

PROTO Parquetry [
  field SFString{"chequered", "dark strip", "light strip", "mosaic"}
                 type             "mosaic"  # Defines the parquetry type.
  field SFColor  colorOverride    1 1 1     # Defines the default color multiplied with the texture color.
  field SFNode   textureTransform NULL      # Defines an optional 2d texture transform.
  field SFFloat  IBLStrength      1         # Defines the strength of ambient lighting from the Background node.
]
{
  %<
    const textureName = (fields.type.value).replace(/\s+/g, '_'); // replace whitespaces with underscores
  >%
  PBRAppearance {
    baseColor IS colorOverride
    baseColorMap ImageTexture {
      url [
        %<= '"webots://projects/appearances/protos/textures/parquetry/' + textureName + '_parquetry_base_color.jpg"' >%
      ]
    }
    roughness 1
    %< if (fields.type.value !== 'dark strip') { >%
    roughnessMap ImageTexture {
      url [
        %<= '"webots://projects/appearances/protos/textures/parquetry/' + textureName + '_parquetry_roughness.jpg"' >%
      ]
    }
    %< } >%
    metalness 0
    normalMap ImageTexture {
      url [
        %<= '"webots://projects/appearances/protos/textures/parquetry/' + textureName + '_parquetry_normal.jpg"' >%
      ]
    }
    normalMapFactor 1
    IBLStrength IS IBLStrength
    %< if (fields.type.value !== 'light strip') { >%
    occlusionMap ImageTexture {
      url [
        %<= '"webots://projects/appearances/protos/textures/parquetry/' + textureName + '_parquetry_occlusion.jpg"' >%
      ]
    }
    %< } >%
    textureTransform IS textureTransform
  }
}
