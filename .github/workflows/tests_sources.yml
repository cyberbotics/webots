name: Test Sources

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  test-sources:
    needs: cleanup-runs
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-10.15]
        python: [2.7, 3.8]
        include:
          - os: ubuntu-16.04
            DEPENDENCIES_INSTALLATION: "sudo apt -y install clang-format-9"
          - os: ubuntu-18.04
            DEPENDENCIES_INSTALLATION: "sudo apt -y install clang-format-9"
          - os: ubuntu-20.04
            DEPENDENCIES_INSTALLATION: "sudo apt -y install clang-format-9"
          - os: macos-10.15
            DEPENDENCIES_INSTALLATION: "brew install clang-format cppcheck"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      if: (matrix.os == 'ubuntu-18.04' && matrix.python == '3.8') || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources')
    - name: Set up Python ${{ matrix.python }}
      if: (matrix.os == 'ubuntu-18.04' && matrix.python == '3.8') || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources')
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Tests
      if: (matrix.os == 'ubuntu-18.04' && matrix.python == '3.8') || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources')
      run: |
        ${{ matrix.DEPENDENCIES_INSTALLATION }}
        cp dependencies/.clang-format-9 .clang-format
        pip install -r tests/sources/requirements.txt
        export WEBOTS_HOME=$PWD
        python -m unittest discover -s tests/sources
