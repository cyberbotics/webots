name: Test Sources

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
    branches-ignore:
      - 'released'
  schedule:
    - cron:  '0 22 * * *'

defaults:
  run:
    shell: bash

jobs:
  job-skipper:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          paths_ignore: '["docs/**"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  test-sources:
    needs: [cleanup-runs, job-skipper]
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2019]
        python: [3.9]
        include:
          - os: ubuntu-18.04
            DEPENDENCIES_INSTALLATION: "sudo apt -y install clang-format-10 cppcheck"
          - os: ubuntu-20.04
            DEPENDENCIES_INSTALLATION: "sudo apt -y install clang-format-10 cppcheck"
          - os: macos-10.15
            DEPENDENCIES_INSTALLATION: "brew install clang-format cppcheck"
          - os: windows-2019
            DEPENDENCIES_INSTALLATION: "choco install cppcheck --version 2.2; choco install llvm --version 11.0.0; export PATH=$PATH:\"/c/Program Files/Cppcheck:/c/Program Files/LLVM/bin\""
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      if: needs.job-skipper.outputs.should_skip != 'true' && ((matrix.os == 'ubuntu-18.04' && matrix.python == '3.9') || github.event_name == 'schedule' || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources'))
    - name: Set up Python ${{ matrix.python }}
      if: needs.job-skipper.outputs.should_skip != 'true' && ((matrix.os == 'ubuntu-18.04' && matrix.python == '3.9') || github.event_name == 'schedule' || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources'))
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Tests
      if: needs.job-skipper.outputs.should_skip != 'true' && ((matrix.os == 'ubuntu-18.04' && matrix.python == '3.9') || github.event_name == 'schedule' || github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'test sources'))
      run: |
        ${{ matrix.DEPENDENCIES_INSTALLATION }}
        cp dependencies/.clang-format-9 .clang-format
        pip install -r tests/sources/requirements.txt
        export WEBOTS_HOME=$PWD
        python -m unittest discover -s tests/sources
    - name: Test Workflows Synchronization
      if: needs.job-skipper.outputs.should_skip != 'true' && (matrix.os == 'ubuntu-18.04' && matrix.python == '3.9')
      run: |
        if [[ "$(diff .github/workflows/test_suite_linux.yml .github/workflows/test_suite_linux_develop.yml | grep -c -e '^<' -e '^>')" -ne "13" ]]; then echo Linux Workflows not synchronized; exit -1; fi
        if [[ "$(diff .github/workflows/test_suite_mac.yml .github/workflows/test_suite_mac_develop.yml | grep -c -e '^<' -e '^>')" -ne "10" ]]; then echo macOS Workflows not synchronized; exit -1; fi
        if [[ "$(diff .github/workflows/test_suite_windows.yml .github/workflows/test_suite_windows_develop.yml | grep -c -e '^<' -e '^>')" -ne "8" ]]; then echo Windows Workflows not synchronized; exit -1; fi
