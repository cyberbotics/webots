name: Test Suite Windows (develop)

on:
  schedule:
    - cron:  '0 23 * * *'

defaults:
  run:
    shell: msys2 {0}

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  build:
    needs: cleanup-runs
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'test distribution') || contains(github.event.pull_request.labels.*.name, 'test suite') }}
    strategy:
      matrix:
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
    - uses: actions/checkout@v2
      with:
         submodules: true
         ref: develop
    - name: Install Visual Studio 10 and OpenJDK 8
      shell: powershell
      run: |
        choco install jdk8
        choco install visualcpp-build-tools
    - name: Install Webots Compilation Dependencies
      run: |
        export PYTHON_INSTALLATION_FOLDER=/C/hostedtoolcache/windows/Python/
        export PYTHON27_REVISION=`ls $PYTHON_INSTALLATION_FOLDER | grep '^2\.7\.[0-9]\+$' | cut -c5- | sort -n | tail -n1`
        export PYTHON37_REVISION=`ls $PYTHON_INSTALLATION_FOLDER | grep '^3\.7\.[0-9]\+$' | cut -c5- | sort -n | tail -n1`
        export PYTHON38_REVISION=`ls $PYTHON_INSTALLATION_FOLDER | grep '^3\.8\.[0-9]\+$' | cut -c5- | sort -n | tail -n1`
        export PYTHON39_REVISION=`ls $PYTHON_INSTALLATION_FOLDER | grep '^3\.9\.[0-9]\+$' | cut -c5- | sort -n | tail -n1`
        echo 'export JAVA_HOME=/C/Program\ Files/Java/jdk1.8.0_211' >> ~/.bash_profile
        echo 'export PYTHON27_HOME='$PYTHON_INSTALLATION_FOLDER'2.7.'$PYTHON27_REVISION'/x64' >> ~/.bash_profile
        echo 'export PYTHON37_HOME='$PYTHON_INSTALLATION_FOLDER'3.7.'$PYTHON37_REVISION'/x64' >> ~/.bash_profile
        echo 'export PYTHON38_HOME='$PYTHON_INSTALLATION_FOLDER'3.8.'$PYTHON38_REVISION'/x64' >> ~/.bash_profile
        echo 'export PYTHON39_HOME='$PYTHON_INSTALLATION_FOLDER'3.9.'$PYTHON39_REVISION'/x64' >> ~/.bash_profile
        echo 'export VISUAL_STUDIO_PATH="/C/Program Files (x86)/Microsoft Visual Studio/2017"' >> ~/.bash_profile
        echo 'export INNO_SETUP_HOME="/C/Program Files (x86)/Inno Setup 6"' >> ~/.bash_profile
        echo 'export PATH=$PYTHON38_HOME:$PYTHON38_HOME/Scripts:$GITHUB_WORKSPACE/msys64/mingw64/bin:$GITHUB_WORKSPACE/bin/node:/mingw64/bin:/usr/bin:$JAVA_HOME/bin:$PATH' >> ~/.bash_profile
        export WEBOTS_HOME=$GITHUB_WORKSPACE
        ./scripts/install/msys64_installer.sh --all
    - name: Set Commit SHA in Version
      if: ${{ github.event_name == 'schedule' }}
      run: python scripts/packaging/set_commit_and_date_in_version.py ${{ github.sha }}
    - name: Webots Package Creation
      run: |
        export WEBOTS_HOME=$GITHUB_WORKSPACE
        make distrib -j4
    - name: Deploy Webots Controller
      if: ${{ github.event_name == 'schedule' }}
      run: |
        pacman -S --noconfirm git openssh
        export SSH_AUTH_SOCK=/tmp/ssh_agent.sock
        mkdir ~/.ssh
        ssh-keyscan -H github.com > ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.WEBOTS_CONTROLLER_DEPLOY_KEY }}"
        scripts/packaging/sync_controller_lib.sh
    - name: Create/Update GitHub release
      if: ${{ (github.event_name == 'push' || github.event_name == 'schedule') }}
      run: |
        python -m pip install requests PyGithub
        scripts/packaging/publish_release.py --key=${{ secrets.GITHUB_TOKEN }} --repo=${{ github.repository }} --branch=${{ github.ref }} --commit=${{ github.sha }} --tag=${{ github.ref }}
    - uses: actions/upload-artifact@v2
      if: ${{ contains(github.event.pull_request.labels.*.name, 'test distribution') }}
      with:
        name: build-${{ matrix.os }}
        path: |
          distribution/*.exe
  delete-artifacts:
    needs: [build]
    if: ${{ always() && !contains(github.event.pull_request.labels.*.name, 'test distribution') }}
    strategy:
      matrix:
        os: [windows-2019]
    runs-on: ubuntu-latest
    steps:
    - name: Delete artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: build-${{ matrix.os }}
