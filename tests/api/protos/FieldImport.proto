#VRML_SIM R2020a utf8

PROTO FieldImport [
  field MFBool      bool      []
  field MFInt32     int       []
  field MFFloat     float     []
  field MFVec2f     vec2      []
  field MFVec3f     vec3      []
  field MFRotation  rot       []
  field MFColor     color     []
  field MFString    string    []
]
{
  %{
    local wbcore = require('wbcore')
    local size = 0.1
    
    local boolField = fields.bool.value
    if wbcore.tablelength(boolField) > 0 and boolField[1] == true then
      size = size + 0.1
    end

    local intField = fields.int.value
     if wbcore.tablelength(intField) > 0 and intField[1] == 17 then
      size = size + 0.1
    end

    local floatField = fields.float.value
    if wbcore.tablelength(floatField) > 0 and floatField[1] == 0.54 then
      size = size + 0.1
    end

    local vec2Field = fields.vec2.value
    if wbcore.tablelength(vec2Field) > 0 and vec2Field[1].x == 0.1 and vec2Field[1].y == 0.2 then
      size = size + 0.1
    end

    local vec3Field = fields.vec3.value
    if wbcore.tablelength(vec3Field) > 0 and vec3Field[1].x == 0.1 and vec3Field[1].y == 0.2 and vec3Field[1].z == 0.3 then
      size = size + 0.1
    end

    local rotField = fields.rot.value
    if wbcore.tablelength(rotField) > 0  and rotField[1].x == 0.0 and rotField[1].y == 1.0 and rotField[1].z == 0.0 and rotField[1].a == 0.57 then
      size = size + 0.1
    end

    local colorField = fields.color.value
    if wbcore.tablelength(colorField) > 0 and colorField[1].r == 0.1 and colorField[1].g == 0.2 and colorField[1].b == 0.3 then
      size = size + 0.1
    end

    local stringField = fields.string.value
    if wbcore.tablelength(stringField) > 0  and stringField[1] == "Hello World!" then
      size = size + 0.1
    end
  }%
  Solid {
    children [
      DEF BOX Shape {
        geometry Box {
          size %{= size }% %{= size }% %{= size }%
        }
      }
    ]
    boundingObject USE BOX
  }
}
