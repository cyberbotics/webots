#VRML_SIM R2022a utf8
# template language: javascript

PROTO FieldImport [
  field MFBool      bool      []
  field MFInt32     int       []
  field MFFloat     float     []
  field MFVec2f     vec2      []
  field MFVec3f     vec3      []
  field MFRotation  rot       []
  field MFColor     color     []
  field MFString    string    []
]
{
  %<
    let size = 0.1;

    const boolField = fields.bool.value;
    if (boolField.length > 0 && boolField[0] === true)
      size = size + 0.1;

    const intField = fields.int.value;
    if (intField.length > 0 && intField[0] === 17)
      size = size + 0.1;

    const floatField = fields.float.value;
    if (floatField.length > 0 && floatField[0] === 0.54)
      size = size + 0.1;

    const vec2Field = fields.vec2.value;
    if (vec2Field.length > 0 && vec2Field[0].x === 0.1 && vec2Field[0].y === 0.2)
      size = size + 0.1;

    const vec3Field = fields.vec3.value;
    if (vec3Field.length > 0 && vec3Field[0].x === 0.1 && vec3Field[0].y === 0.2 && vec3Field[0].z === 0.3)
      size = size + 0.1;

    const rotField = fields.rot.value;
    if (rotField.length > 0 && rotField[0].x === 0.0 && rotField[0].y === 1.0 && rotField[0].z === 0.0 && rotField[0].a === 0.57)
      size = size + 0.1;

    const colorField = fields.color.value;
    if (colorField.length > 0 && colorField[0].r === 0.1 && colorField[0].g === 0.2 && colorField[0].b === 0.3)
      size = size + 0.1;

    const stringField = fields.string.value;
    if (stringField.length > 0 && stringField[0] === 'Hello World!')
      size = size + 0.1;
  >%
  Solid {
    children [
      DEF BOX Shape {
        geometry Box {
          size %<= size >% %<= size >% %<= size >%
        }
      }
    ]
    boundingObject USE BOX
  }
}
