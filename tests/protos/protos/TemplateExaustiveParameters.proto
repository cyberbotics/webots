#VRML_SIM R2021a utf8

PROTO TemplateExaustiveParameters [

  field SFString controller ""

  field SFBool     sfb FALSE
  field SFInt32    sfi 1
  field SFFloat    sff 1.0
  field SFVec2f    sfv2 1.0 2.0
  field SFVec3f    sfv3 1.0 2.0 3.0
  field SFRotation sfr 0.0 0.0 1.0 2.0
  field SFColor    sfc 0.0 0.5 1.0
  field SFString   sfs "test"
  field SFString   sfs2 "custom data"
  field SFString   sfs3 "lua string"
  field SFNode     sfn1 NULL
  field SFNode     sfn2 NULL

  # note: only one multiple field is tested
  #       this should be sufficient because the internal code
  #       for multiple nodes is identical
  field MFInt32    mfi [ 1 2 3 ]
]
{
  Robot {
    children [
      TestSuiteEmitter {
      }
    ]
    controller IS controller
    %{
      message = "success"

      if fields.sfb.value ~= false then
        message = "SFBool test failed"

      elseif fields.sfi.value ~= 1 then
        message = "SFInt32 test failed"

      elseif fields.sff.value ~= 1.0 then
        message = "SFFloat test failed"

      elseif fields.sfv2.value.x ~= 1.0 or
             fields.sfv2.value.y ~= 2.0 then
        message = "SFVec2f test failed"

      elseif fields.sfv3.value.x ~= 1.0 or
             fields.sfv3.value.y ~= 2.0 or
             fields.sfv3.value.z ~= 3.0 then
        message = "SFVec3f test failed"

      elseif fields.sfr.value.x ~= 0.0 or
             fields.sfr.value.y ~= 0.0 or
             fields.sfr.value.z ~= 1.0 or
             fields.sfr.value.a ~= 2.0 then
        message = "SFRotation test failed"

      elseif fields.sfc.value.r ~= 0.0 or
             fields.sfc.value.g ~= 0.5 or
             fields.sfc.value.b ~= 1.0 then
        message = "SFColor test failed"

      elseif fields.sfs.value ~= "test" then
        message = "SFString test failed"

      elseif fields.sfs.value ~= fields.sfs.defaultValue then
        message = "default value test failed"

      elseif fields.controller.value == fields.controller.defaultValue then
        message = "non-default value test failed"

      elseif fields.sfn1.value == none or
             fields.sfn1.value.fields.material.value == none or
             fields.sfn1.value.fields.material.value.fields.shininess.value ~= 0.5 then
        message = "regular SFNode test failed"

      elseif fields.sfn1.value.node_name ~= "Appearance" then
        message = "regular SFNode.node_name test failed"

      elseif fields.sfn2.value == none or
             fields.sfn2.value.fields.boxLengths.value == none or
             fields.sfn2.value.fields.boxLengths.value.x ~= 0.2 or
             fields.sfn2.value.fields.boxSize ~= none or
             fields.sfn2.value.fields.size ~= NIL then
        message = "PROTO SFNode test failed"

      elseif fields.sfn2.value.node_name ~= "SecondDerivedBoxShape" then
        message = "PROTO SFNode.node_name test failed"

      elseif fields.mfi.value[1] ~= 1 or
             fields.mfi.value[2] ~= 2 or
             fields.mfi.value[3] ~= 3 then
        message = "MFInt32 test failed"

      end
      
      local arguments = "test --prefix in " .. fields.sfs3.value .. "."
    }%
    model "%{= message }%"
    customData "%{= fields.sfs2.value }%"
  }
}
