<?xml version="1.0" encoding="utf-8"?>
<proto-list>
	<proto>
		<name>InvertedPendulumBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/inverted_pendulum/protos/InvertedPendulumBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>This PROTO manages the inverted pendulum benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field MFString controllerArgs [ &quot;seed=2&quot; ]\nfield SFString window &quot;inverted_pendulum&quot;</parameters>
	</proto>
	<proto>
		<name>RaceStopwatch</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/humanoid_sprint/protos/RaceStopwatch.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString window &quot;&quot;</parameters>
	</proto>
	<proto>
		<name>VisualTrackingBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/visual_tracking/protos/VisualTrackingBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor node managing the visual tracking benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;visual_tracking&quot;\nfield MFString controllerArgs [ &quot;hit-error=0.1&quot; ]</parameters>
	</proto>
	<proto>
		<name>WallFollowingPioneer3dx</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/wall_following/protos/WallFollowingPioneer3dx.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Pioneer 3-DX robot (Adept MobileRobots) is an all-purpose base, used for research and applications involving mapping, teleoperation, localization, monitoring, reconnaissance and other behaviors.\n</description>
		<parameters>field SFVec3f translation 0 0 0.0975 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Pioneer 3-DX&quot; # Is `Solid.name`.\nfield SFString controller &quot;pioneer3dx_collision_avoidance&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>LinkedWalls</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/wall_following/protos/LinkedWalls.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable wall made of segments.\n</description>
		<tags>hidden,nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat length 1\nfield SFFloat height 0.5\nfield MFInt32 angles []\nfield SFNode appearance NULL\nfield SFString window &quot;wall_following&quot;</parameters>
	</proto>
	<proto>
		<name>MazeBlock</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/maze_runner/protos/MazeBlock.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Block used to build walls of the maze.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;maze block&quot;\nfield SFFloat length 0.1</parameters>
	</proto>
	<proto>
		<name>MazeRunnerBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/maze_runner/protos/MazeRunnerBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor of the maze runner benchmark.\n</description>
		<parameters>field SFString window &quot;maze_runner&quot;</parameters>
	</proto>
	<proto>
		<name>Pit</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/pit_escape/protos/Pit.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Randomly generated uneven terrain based on Perlin noise.\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFVec3f size 20 20 5\nfield SFInt32 xDimension 50\nfield SFInt32 yDimension 50\nfield SFNode appearance SandyGround {}\nfield SFInt32 randomSeed 1 # Defines the random seed, if seed &lt;= 0 then set a random seed.\nfield SFInt32 perlinNOctaves 3\nfield SFFloat noiseAmplitude 0.15\nfield SFFloat pitRadius 3\nfield SFString name &quot;pit&quot;</parameters>
	</proto>
	<proto>
		<name>PitEscapeBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/pit_escape/protos/PitEscapeBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor that manages the Pit Escape benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;pit_escape&quot;</parameters>
	</proto>
	<proto>
		<name>ObstacleAvoidanceBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/obstacle_avoidance/protos/ObstacleAvoidanceBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor of the robot programming benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;obstacle_avoidance&quot;</parameters>
	</proto>
	<proto>
		<name>PickAndPlaceBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/pick_and_place/protos/PickAndPlaceBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor that manages the Pick and Place benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;pick_and_place&quot;</parameters>
	</proto>
	<proto>
		<name>HighwayDrivingBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/highway_driving/protos/HighwayDrivingBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor that manages the highway driving benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;highway_driving&quot;</parameters>
	</proto>
	<proto>
		<name>DistanceSensorVisualization</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/highway_driving/protos/DistanceSensorVisualization.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Simple shape displaying the detection area of a distance sensor with 2 rays\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0.4 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat range 5\nfield SFFloat aperture 0.1\nfield SFColor diffuseColor 0 0 1\nfield SFFloat transparency 0.7\nfield SFFloat subdivision 8</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>RobotProgrammingBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/robot_programming/protos/RobotProgrammingBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor of the robot programming benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;robot_programming&quot;</parameters>
	</proto>
	<proto>
		<name>HumanoidMarathonBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/humanoid_marathon/protos/HumanoidMarathonBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor that manages the humanoid marathon benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;humanoid_marathon&quot;</parameters>
	</proto>
	<proto>
		<name>SquarePathPioneer3dx</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/square_path/protos/SquarePathPioneer3dx.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Pioneer 3-DX robot (Adept MobileRobots) is an all-purpose base, used for research and applications involving mapping, teleoperation, localization, monitoring, reconnaissance and other behaviors.\n</description>
		<parameters>field SFVec3f translation 0 0 0.0975 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Pioneer 3-DX&quot; # Is `Solid.name`.\nfield SFString controller &quot;pioneer3dx_collision_avoidance&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>SquarePathBenchmark</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/robotbenchmark/square_path/protos/SquarePathBenchmark.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Supervisor that manages the Pioneer square path benchmark.\n</description>
		<tags>hidden</tags>
		<parameters>field SFString window &quot;square_path&quot;</parameters>
	</proto>
	<proto>
		<name>TeapotMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/geometries/protos/TeapotMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Utah teapot mesh\n</description>
	</proto>
	<proto>
		<name>FourWheelsRobot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/tutorials/protos/FourWheelsRobot.proto</url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat bodyMass 1</parameters>
	</proto>
	<proto>
		<name>Helmet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/rendering/protos/Helmet.proto</url>
		<license>MIT</license>
		<license-url>https://opensource.org/licenses/MIT</license-url>
		<description>A model of an advanced sci-fi helmet, sourced from the GLTF PBR reference implementation, found at https://github.com/KhronosGroup/glTF-WebGL-PBR.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>PingPongBallScaled</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/rendering/protos/PingPongBallScaled.proto</url>
		<description>A ping pong ball 4 times bigger than a real one.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ping pong ball&quot;</parameters>
	</proto>
	<proto>
		<name>SphereGrid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/rendering/protos/SphereGrid.proto</url>
		<description>A grid of spheres for testing material properties.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sphere grid&quot;\nfield SFColor color 1 0 0\nfield SFNode normalMap ImageTexture {}\nfield SFNode baseColorMap ImageTexture {}\nfield SFNode roughnessMap ImageTexture {}\nfield SFFloat transparency 0.01\nfield SFInt32 widthAndHeight 10</parameters>
	</proto>
	<proto>
		<name>NXTFeeder</name>
		<base-type>Charger</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/ratslife/protos/NXTFeeder.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;NXT feeder&quot;</parameters>
	</proto>
	<proto>
		<name>LegoInterval</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/ratslife/protos/LegoInterval.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0.025\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;LEGO interval&quot;\nfield MFString textureUrl &quot;textures/lego_wall_template.png&quot;</parameters>
	</proto>
	<proto>
		<name>LegoWall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/ratslife/protos/LegoWall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0.025\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;LEGO wall&quot;\nfield MFString textureUrl &quot;textures/lego_wall_template.png&quot;</parameters>
	</proto>
	<proto>
		<name>E-puckFlag</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/ratslife/protos/e-puck/E-puckFlag.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Flag for the Rat's Life contest\n</description>
		<parameters>field MFString image &quot;textures/rat0.jpg&quot;</parameters>
	</proto>
	<proto>
		<name>YoubotFlag</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/tower_of_hanoi/protos/YoubotFlag.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>a flag\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;youBot flag&quot;\nfield MFString textureURL &quot;textures/flag_start.png&quot;\nfield SFBool locked FALSE</parameters>
	</proto>
	<proto>
		<name>RobocupGoal</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/robocup/protos/RobocupGoal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Robocup Humanoid League 2021 soccer goal.\nThe color and size of the goal can be modified.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;robotstadium goal&quot;\nfield SFColor frameColor 1 1 1 # Defines the color of the goal frame.\nfield SFColor netColor 0.3 0.3 0.3 # Defines the color of the net.\nfield SFString{&quot;adult&quot;, &quot;kid&quot;} size &quot;kid&quot; # Defines the size of the field.</parameters>
	</proto>
	<proto>
		<name>RobocupSoccerField</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/robocup/protos/RobocupSoccerField.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Official soccer field for the Robocup Humanoid League 2021.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;soccer_field&quot;\nfield SFString{&quot;adult&quot;, &quot;kid&quot;} size &quot;adult&quot;\nfield SFBool turfPhysics TRUE</parameters>
	</proto>
	<proto>
		<name>RoCKInShelf</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/rockin/protos/RoCKInShelf.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;RoCKIn shelf&quot;</parameters>
	</proto>
	<proto>
		<name>RoCKInAX01</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/rockin/protos/RoCKInAX01.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;RoCKIn AX01&quot;\nfield SFColor color 0.2 0.8 0.2</parameters>
	</proto>
	<proto>
		<name>RoCKInAX06</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/rockin/protos/RoCKInAX06.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;RoCKIn AX06&quot;\nfield SFColor color 0.9 0.5 0.1</parameters>
	</proto>
	<proto>
		<name>RoCKInER02</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/contests/rockin/protos/RoCKInER02.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;RoCKIn ER02&quot;\nfield SFColor color 0.1 0.1 0.6</parameters>
	</proto>
	<proto>
		<name>Obstacle</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/samples/curriculum/protos/Obstacle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0.025\nfield SFColor color 1 0.501961 0.25098\nfield SFString name &quot;obstacle&quot;</parameters>
	</proto>
	<proto>
		<name>MultiSenseS21</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/multisense/protos/MultiSenseS21.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/camera-sensors#multisense-s21</documentation-url>
		<description>Model of MultiSense S21 stereoscopic camera.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;MultiSense S21&quot;\nfield SFInt32 cameraWidth 1024\nfield SFInt32 cameraHeight 544\nfield SFFloat cameraFieldOfView 1.4 # The default value is equal to 80 deg.\nfield SFFloat cameraNoise 0\nfield SFFloat rangeFinderNoise 0\nfield SFFloat rangeFinderMaxRange 300\nfield SFBool leftCamera TRUE\nfield SFBool rightCamera TRUE\nfield SFBool metaCamera FALSE\nfield SFBool metaRangeFinder FALSE\nfield SFBool enablePhysics TRUE</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Robotiq3fGripper</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/robotiq/protos/Robotiq3fGripper.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/universal_robots</documentation-url>
		<description>A 3-finger adaptive robot gripper from ROBOTIQ.\n</description>
		<parameters>field SFVec3f translation 0 0.04 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ROBOTIQ 3f Gripper&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>IbeoLux</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/ibeo/protos/IbeoLux.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#ibeo-lux</documentation-url>
		<description>Ibeo Lux sensor model based on the Lidar PROTO.\nIf 'fastModel' is set to TRUE then the sensor simulation should run faster but\nthe noise, resolution and spherical correction is not enabled.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Ibeo Lux&quot;\nfield SFBool useExtendedFieldOfView FALSE\nfield SFBool fastModel FALSE</parameters>
	</proto>
	<proto>
		<name>SickLdMrs</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sick/protos/SickLdMrs.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#sick-ld-mrs</documentation-url>
		<description>Sick LD-MRS model.\nSupported types: `400001`, `400102`, `400001S01`, `400102S01` and `800001S01`.\nReference: https://www.sick.com/us/en/detection-and-ranging-solutions/3d-lidar-sensors/ld-mrs/c/g91913\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sick LD-MRS&quot;\nfield SFString{&quot;400001&quot;, &quot;400102&quot;, &quot;400001S01&quot;, &quot;400102S01&quot;, &quot;800001S01&quot;}
 type &quot;400001&quot;\nfield SFString{&quot;0.5 [deg]&quot;, &quot;0.25 [deg]&quot;, &quot;0.125 [deg]&quot;}
 angularResolution &quot;0.5 [deg]&quot;\nfield SFFloat noise 0.001\nfield SFBool enablePhysics TRUE</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>SickS300</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sick/protos/SickS300.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#sick-s300</documentation-url>
		<description>Model of Sick S300 (lidar device).\nspecs:\n- field of view: 270 [deg]\n- range: up to 30 [m] (distance measuring range)\n- number of layers: 1\n- angular resolution: 0.5°\n- resolution: 540\n- dimension: 0.102 x 0.152 x 0.106 [m]\n- weight: 1.2 [kg]\n</description>
	</proto>
	<proto>
		<name>SickLms291</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sick/protos/SickLms291.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#sick-lms-291</documentation-url>
		<description>Model of Sick LMS291 (Lidar device).\n'resolution' should be typically 180, 360 or 720 in order to have a precision of respectively 1°, 0.5° and 0.25°\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sick LMS 291&quot;\nfield SFFloat noise 0.0\nfield SFInt32 resolution 180</parameters>
	</proto>
	<proto>
		<name>Mpu-9250</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/tdk/protos/Mpu-9250.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/imu-sensors#mpu-9250</documentation-url>
		<description>Model of the MPU-9250 Inertial Measurement Unit (IMU) developed by TDK InvenSense.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;MPU-9250&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>SmsUmrr-0a29</name>
		<base-type>Radar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/smartmicro/protos/SmsUmrr-0a29.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/radar-sensors#smartmicro-umrr-0a</documentation-url>
		<description>Smartmicro UMR-A0 type 29 sensor model based on the Radar node.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sms UMRR 0a29&quot;\nfield SFBool occlusion FALSE\nfield SFFloat cellDistance 0.0\nfield SFFloat angularNoise 0.0</parameters>
	</proto>
	<proto>
		<name>SmsUmrr-0a31</name>
		<base-type>Radar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/smartmicro/protos/SmsUmrr-0a31.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/radar-sensors#smartmicro-umrr-0a</documentation-url>
		<description>Smartmicro UMR-A0 type 31 sensor model based on the Radar node.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sms UMRR 0a31&quot;\nfield SFBool occlusion FALSE\nfield SFFloat cellDistance 0.0\nfield SFFloat angularNoise 0.0</parameters>
	</proto>
	<proto>
		<name>SmsUmrrShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/smartmicro/protos/SmsUmrrShape.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic shape for the smartmicro UMRR radars\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>SmsUmrr-0a30</name>
		<base-type>Radar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/smartmicro/protos/SmsUmrr-0a30.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/radar-sensors#smartmicro-umrr-0a</documentation-url>
		<description>Smartmicro UMR-A0 type 30 sensor model based on the Radar node.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sms UMRR 0a30&quot;\nfield SFBool occlusion FALSE\nfield SFFloat cellDistance 0.0\nfield SFFloat angularNoise 0.0</parameters>
	</proto>
	<proto>
		<name>DelphiESR</name>
		<base-type>Radar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/delphi/protos/DelphiESR.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/radar-sensors#delphi-esr</documentation-url>
		<description>Delphi ESR sensor model based on the Radar node.\nIn long range mode the radar can see target at up to 174m and has a field of view of 20degrees\nOtherwise the radar can see target at up to 60m and has a field of view of 90degrees\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Delphi ESR&quot;\nfield SFBool occlusion FALSE\nfield SFBool longRangeMode FALSE</parameters>
	</proto>
	<proto>
		<name>VelodyneHDL-32E</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/velodyne/protos/VelodyneHDL-32E.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#velodyne-hdl-32e</documentation-url>
		<description>Velodyne HDL-32E sensor model based on the Lidar PROTO.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Velodyne HDL-32E&quot;\nfield SFBool enablePhysics TRUE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>VelodynePuck</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/velodyne/protos/VelodynePuck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#velodyne-puck</documentation-url>
		<description>Velodyne Puck sensor model based on the Lidar PROTO.\nThis model can simulate the following versions:\n- 'Puck'\n- 'Puck LITE'\n- 'Puck Hi-Res'\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Velodyne Puck&quot;\nfield SFString{&quot;Puck&quot;, &quot;Puck LITE&quot;, &quot;Puck Hi-Res&quot;}
 version &quot;Puck&quot; # Defines the version of the velodyne puck.\nfield SFBool enablePhysics TRUE # Defines whether the sensor should have physics.</parameters>
	</proto>
	<proto>
		<name>VelodyneHDL-64E</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/velodyne/protos/VelodyneHDL-64E.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#velodyne-hdl-64e</documentation-url>
		<description>Velodyne HDL-64E sensor model based on the Lidar PROTO.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Velodyne HDL-64E&quot;\nfield SFBool enablePhysics TRUE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>VelodyneVLP-16</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/velodyne/protos/VelodyneVLP-16.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#velodyne-puck</documentation-url>
		<description>Velodyne VLP-16 sensor model based on the Lidar PROTO.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Velodyne VLP-16&quot;\nfield SFBool enablePhysics TRUE # Defines whether the sensor should have physics.</parameters>
	</proto>
	<proto>
		<name>RobotisLds01</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/robotis/protos/RobotisLds01.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#lds-01</documentation-url>
		<description>Model of the Robotis LDS-01 Laser Distance Sensor\nReference: http://www.robotis.us/360-laser-distance-sensor-lds-01-lidar/\n</description>
		<parameters>field SFVec3f translation 0 0 0.02\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;LDS-01&quot;\nfield SFFloat noise 0.0043\nfield SFBool enablePhysics TRUE</parameters>
	</proto>
	<proto>
		<name>HokuyoUrg04lx</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/hokuyo/protos/HokuyoUrg04lx.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#hokuyo-urg-04lx</documentation-url>
		<description>Model of Hokuyo URG-04LX (lidar device).\nspecs:\n- field of view: 240 [deg]\n- range: 0.06 to 4.095 [m]\n- resolution: 667 * 0.36 [deg]\n- dimension: 0.05 x 0.07 x 0.05 [m]\n- weight: 0.16 [kg]\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Hokuyo URG-04LX&quot;\nfield SFFloat noise 0.0\nfield SFInt32 resolution 667 # Defines the `horizontalResolution` field of the `Lidar`.\nfield SFBool enablePhysics TRUE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>HokuyoUrg04lxug01</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/hokuyo/protos/HokuyoUrg04lxug01.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#hokuyo-urg-04lx-ug01</documentation-url>
		<description>Model of Hokuyo URG-04LX-UG01 (lidar device).\nspecs:\n- field of view: 240 [deg]\n- range: 0.2 to 5.6 [m]\n- resolution: 667 * 0.36 [deg]\n- dimension: 0.05 x 0.07 x 0.05 [m]\n- weight: 0.16 [kg]\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Hokuyo URG-04LX-UG01&quot;\nfield SFFloat noise 0.0\nfield SFInt32 resolution 667 # Defines the `horizontalResolution` field of the `Lidar`.\nfield SFBool enablePhysics TRUE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>HokuyoUtm30lx</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/hokuyo/protos/HokuyoUtm30lx.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#hokuyo-utm-30lx</documentation-url>
		<description>Model of Hokuyo UTM-30LX (lidar device).\nspecs:\n- field of view: 270 [deg]\n- range : 0.1 to 30 [m]\n- resolution : 1080 * 0.25 [deg]\n- dimension : 0.06 x 0.087 x 0.06 [m]\n- weight : 0.37 [kg]\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Hokuyo UTM-30LX&quot;\nfield SFFloat noise 0.0\nfield SFInt32 resolution 1080 # Defines the `horizontalResolution` field of the `Lidar`.\nfield SFBool enablePhysics TRUE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>JetsonNano</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/nvidia/protos/JetsonNano.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/single-board-computers#nvidia-jetson-nano</documentation-url>
		<description>NVIDIA Jetson Nano embedded module.\nThis is a graphical model that can be extended with solid parts, devices and physics properties.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Robot.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Robot.rotation`.\nfield SFString name &quot;NVIDIA Jetson Nano&quot; # Is `Robot.name`.\nfield SFNode physics NULL # Is `Robot.physics`.\nfield SFString controller &quot;&lt;none&gt;&quot; # Is `Robot.controller`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield MFNode extensionSlot [] # Extends the board with meshes, solid parts or devices.</parameters>
	</proto>
	<proto>
		<name>Servo</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/generic/protos/Servo.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A Servo represents a servomotor which adds one active degree of freedom (DOF) in a mechanical simulation.\nThe Servo 'children' move with respect to the Servo parent.\nA Servo can be used to simulate a rotational or a linear motion.\nSpring and damping behavior can be specified.\nFor loading performance reasons, it is suggested to use the joint and motor nodes directly instead of this node.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFVec3f scale 1 1 1\nfield MFNode children []\nfield SFString name &quot;servo&quot; # Defines the name of the motor, the position sensor is called: name + ' sensor'.\nfield SFString model &quot;&quot;\nfield SFString description &quot;&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield MFNode immersionProperties []\nfield SFNode boundingObject NULL\nfield SFNode physics NULL\nfield SFBool locked FALSE\nfield SFFloat translationStep 0.01\nfield SFFloat rotationStep 0.261799387\nfield SFFloat radarCrossSection 0\nfield MFColor recognitionColors []\nfield SFString type &quot;rotational&quot; # Defines the type of joint: &quot;rotational&quot; or &quot;linear&quot;.\nfield SFFloat maxVelocity 10 # Defines the max velocity (rad/s or m/s) of the motor.\nfield SFFloat maxForce 10 # Defines the max force or torque (rad/s^2 or m/s^2) of the motor.\nfield SFFloat controlP 10 # Defines the proportional PID parameter for control of the motor.\nfield SFFloat acceleration -1 # Defines the acceleration for control (rad/s^2 or m/s^2) of the motor.\nfield SFFloat position 0 # Defines the current position of the joint.\nfield SFFloat minPosition 0 # Defines the max position of the motor, ignored if maxPosition = minPosition.\nfield SFFloat maxPosition 0 # Defines the min position of the motor, ignored if maxPosition = minPosition.\nfield SFFloat minStop 0 # Defines the min position of the joint, low stop angle or position.\nfield SFFloat maxStop 0 # Defines the max position of the joint, high stop angle or position.\nfield SFFloat springConstant 0 # Defines the spring constant of the joint.\nfield SFFloat dampingConstant 0 # Defines the damping constant of the joint.\nfield SFFloat staticFriction 0 # Defines the static friction of the joint.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>RpLidarA2</name>
		<base-type>Lidar</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/slamtec/protos/RpLidarA2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/lidar-sensors#rplidar-a2</documentation-url>
		<description>Model of the RpLidar A2 rotational lidar developed by Slamtec.\n</description>
		<parameters>field SFVec3f translation 0 0 0.031\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;RPlidar A2&quot;</parameters>
	</proto>
	<proto>
		<name>SharpGP2Y0A02YK0F</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sharp/protos/SharpGP2Y0A02YK0F.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/distancesensor-sensors</documentation-url>
		<description>This is a PROTO file for Webots of the infrared sensor GP2Y0A02YK0F from Sharp.\nEffective range: 20 to 150 cm, datasheet: https://www.sparkfun.com/datasheets/Sensors/Infrared/gp2y0a02yk_e.pdf\nBased on the lookupTable, power fitting method after the highest voltage point.\ny[V] = f(x[m])  =&gt; y = 1.784*x^(-0.4215)-1.11\ny[m] = f(x[V])  =&gt; y = 0.7611*x^(-0.9313)-0.1252\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sharp's IR sensor GP2Y0A02YK0F&quot;\nfield SFString model &quot;GP2Y0A02YK0F&quot;</parameters>
	</proto>
	<proto>
		<name>SharpGP2D120</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sharp/protos/SharpGP2D120.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/distancesensor-sensors</documentation-url>
		<description>This is a PROTO file for Webots of the GP2D120 IR sensor from Sharp.\nEffective range: 4 to 30 cm, datasheet: https://www.pololu.com/file/0J157/GP2D120-DATA-SHEET.pdf\nBased on the lookupTable, power fitting method after the highest voltage point.\ny[V] = f(x[m])  =&gt; y = 0.5131*x^(-0.5735)-0.6143\ny[m] = f(x[V])  =&gt; y = 0.1594*x^(-0.8533)-0.02916\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sharp's IR sensor GP2D120&quot;\nfield SFString model &quot;GP2D120&quot;</parameters>
	</proto>
	<proto>
		<name>SharpGP2Y0A41SK0F</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sharp/protos/SharpGP2Y0A41SK0F.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/distancesensor-sensors</documentation-url>
		<description>This is a PROTO file for Webots of the infrared sensor GP2Y0A41SK0F from Sharp.\nEffective range: 4 to 30 cm, datasheet: https://www.pololu.com/file/0J713/GP2Y0A41SK0F.pdf\nBased on the lookupTable, power fitting method after the highest voltage point.\ny[V] = f(x[m])  =&gt; y = 0.5131*x^(-0.5735)-0.6143\ny[m] = f(x[V])  =&gt; y = 0.1594*x^(-0.8533)-0.02916\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sharp's IR sensor GP2Y0A41SK0F&quot;\nfield SFString model &quot;GP2Y0A41SK0F&quot;</parameters>
	</proto>
	<proto>
		<name>SharpGP2Y0A710K0F</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/sharp/protos/SharpGP2Y0A710K0F.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/distancesensor-sensors</documentation-url>
		<description>This is a PROTO file for Webots of the infrared sensor GP2Y0A710K0F from Sharp.\nEffective range: 100 to 550 cm, datasheet: https://global.sharp/products/device/lineup/data/pdf/datasheet/gp2y0a710k_e.pdf\nBased on the lookupTable, power fitting method after the highest voltage point.\ny[V] = f(x[m])  =&gt; y = 1.962*x^(-0.5214)+0.4926\ny[m] = f(x[V])  =&gt; y = 20.24*x^(-4.76)+0.6632\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sharp's IR sensor GP2Y0A710K0F&quot;\nfield SFString model &quot;GP2Y0A710K0F&quot;</parameters>
	</proto>
	<proto>
		<name>Kinect</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/microsoft/protos/Kinect.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/range-finder-sensors#microsoft-kinect</documentation-url>
		<description>Microsoft Kinect.\nIt contains a RangeFinder device called &quot;&lt;cameraName&gt; + ' range'&quot; and a Camera device called &quot;&lt;cameraName&gt; + ' color'&quot;.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Kinect&quot;\nfield SFInt32 width 320 # Defines the `width` field of the `RangeFinder` and `Camera` nodes.\nfield SFInt32 height 190 # Defines the `height` field of the `RangeFinder` and `Camera` nodes.\nfield SFFloat maxRange 3.5 # Defines the `maxRange` field of the `RangeFinder`.\nfield SFFloat colorNoise 0.0 # Defines the `noise` field of the `Camera`.\nfield SFFloat rangeNoise 0.0 # Defines the `noise` field of the `RangeFinder`.\nfield SFString cameraName &quot;kinect&quot; # Defines the name of the `RangeFinder` and `Camera` nodes. The `RangeFinder` is named &quot;&lt;cameraName&gt; + ' range'&quot; and the `Camera` &quot;&lt;cameraName&gt; + ' color'&quot;.\nfield SFString tiltMotorName &quot;tilt motor&quot; # Defines the name of the foot tilt `RotationalMotor` (when the `foot` field is enabled).\nfield SFBool foot TRUE # Defines whether the articulated foot is present.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Astra</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/devices/orbbec/protos/Astra.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/camera-sensors#astra</documentation-url>
		<description>Model of the Astra RGBD camera developed by Orbbec.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Astra&quot;\nfield SFFloat colorNoise 0.0 # Defines the `noise` field of the `Camera`.\nfield SFFloat rangeNoise 0.0 # Defines the `noise` field of the `RangeFinder`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>PedestrianNeck</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianNeck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianLeftUpperArm</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftUpperArm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Pedestrian</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/Pedestrian.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Simple model of a pedestrian\nBased on the model of Paul Salvador (zxys.com)\n</description>
		<parameters>field SFVec3f translation 0 0 1.27\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pedestrian&quot;\nfield SFString controller &quot;pedestrian&quot;\nfield MFString controllerArgs []\nfield SFColor shirtColor 0.25 0.55 0.20\nfield SFColor pantsColor 0.24 0.25 0.5\nfield SFColor shoesColor 0.28 0.15 0.06\nfield SFColor skinColor 1.0 0.75 0.7\nfield SFBool enableBoundingObject FALSE\nfield MFNode bodySlot []\nfield MFNode leftHandSlot []\nfield MFNode rightHandSlot []</parameters>
	</proto>
	<proto>
		<name>PedestrianLeftLowerLeg</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftLowerLeg.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightFoot</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightFoot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightLowerLeg</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightLowerLeg.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianLeftUpperLeg</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftUpperLeg.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianTorso</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianTorso.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianLeftHand</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftHand.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianLeftFoot</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftFoot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightUpperLeg</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightUpperLeg.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianHead</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianHead.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianLeftLowerArm</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianLeftLowerArm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightUpperArm</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightUpperArm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightLowerArm</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightLowerArm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PedestrianRightHand</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/pedestrian/protos/PedestrianRightHand.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CharacterSkin</name>
		<base-type>Skin</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/skin_animated_humans/protos/CharacterSkin.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Skin node representing a human with predefined mesh and appearance.\nFour different characters are available based on the 'model' field:\n- &quot;Anthony&quot;: a boy,\n- &quot;Robert&quot;: a men,\n- &quot;Sandra&quot;: a woman,\n- &quot;Sophia&quot;: a girl.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0.57735 0.57735 0.57735 2.0944\nfield SFVec3f scale 1 1 1\nfield SFString name &quot;skin&quot;\nfield SFString{&quot;Anthony&quot;, &quot;Robert&quot;, &quot;Sandra&quot;, &quot;Sophia&quot;} model &quot;Sandra&quot;\nfield SFBool castShadows TRUE</parameters>
	</proto>
	<proto>
		<name>C3dBodyRepresentation</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/c3d/protos/C3dBodyRepresentation.proto</url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 -1.5708\nfield SFVec3f scale 1 1 1\nfield SFFloat transparency 0.1\nfield SFRotation RShoulderRotation 0 0 1 0\nfield SFRotation RElbowRotation 0 0 1 0\nfield SFRotation RWristRotation 0 0 1 0\nfield SFRotation LShoulderRotation 0 0 1 0\nfield SFRotation LElbowRotation 0 0 1 0\nfield SFRotation LWristRotation 0 0 1 0\nfield SFRotation LHipRotation 0 0 1 0\nfield SFRotation LKneeRotation 0 0 1 0\nfield SFRotation LAnkleRotation 0 0 1 0\nfield SFRotation RHipRotation 0 0 1 0\nfield SFRotation RKneeRotation 0 0 1 0\nfield SFRotation RAnkleRotation 0 0 1 0\nfield SFRotation LPelvisRotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>C3dMarker</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/c3d/protos/C3dMarker.proto</url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFColor color 0 1 0\nfield SFFloat transparency 0\nfield SFFloat radius 0.01\nfield SFString name &quot;marker&quot;</parameters>
	</proto>
	<proto>
		<name>C3dViewer</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/c3d/protos/C3dViewer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A viewer to visualize C3D (www.c3d.org) files.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString c3dFile &quot;&quot; # Defines which file should be displayed.\nfield SFFloat playbackSpeed 1.0 # Defines the speed at which should be played the C3D file.\nfield MFNode markers [] # The markers will be automatically inserted in this field.\nfield SFVec3f leftGroundReactionForceOffset 0.28 0.28 0 # Defines the offset of the left Ground Reaction Force position.\nfield SFVec3f rightGroundReactionForceOffset -0.21 0.22 0 # Defines the offset of the right Ground Reaction Force position.\nfield SFFloat bodyTransparency 1 # Defines the transparency of the body representation (transparency to 1 disables body representation).\nfield SFFloat bodyHeight -1 # Defines the height of the body representation, if negative, the height defined in the C3D file is used (or 1.83m if not set in the C3D file).\nfield SFFloat bodyOffset 0.25 # Defines the vertical offset of the body representation compared to the 'CenterOfMass' marker.\nfield SFString window &quot;c3d_viewer_window&quot;\nfield SFString name &quot;c3d_viewer&quot;</parameters>
	</proto>
	<proto>
		<name>C3dGroundReactionForce</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/humans/c3d/protos/C3dGroundReactionForce.proto</url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFVec3f coneTranslation 0 0 0.1\nfield SFVec3f cylinderTranslation 0 0 0\nfield SFColor color 1 1 0\nfield SFFloat height 0.2</parameters>
	</proto>
	<proto>
		<name>E-puckGroundSensors</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/e-puck/protos/E-puckGroundSensors.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Ground sensors extension for the e-puck robot.\n\nIt includes three infra-red proximity sensors\npointing down to the ground in front of the robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Pi-puck</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/e-puck/protos/Pi-puck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/epuck</documentation-url>
		<description>Raspberry pi extension for the e-puck robot model 2\nTo be inserted in the `turretSlot` of the E-puck node.\n</description>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>E-puck</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/e-puck/protos/E-puck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/epuck</documentation-url>
		<description>EPFL educational and research mini mobile robot.\nThe e-puck is powered by a dsPIC processor and features a very large number of sensors in its basic configuration.\nMore info here: http://www.e-puck.org.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;e-puck&quot; # Is `Solid.name`.\nfield SFString controller &quot;e-puck_avoid_obstacles&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;e-puck&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield SFString{&quot;1&quot;, &quot;2&quot;} version &quot;1&quot; # Defines the e-puck version; either &quot;1&quot; or &quot;2&quot;.\nfield SFFloat camera_fieldOfView 0.84 # Is `Camera.fieldOfView`.\nfield SFInt32 camera_width 52 # Is `Camera.width`.\nfield SFInt32 camera_height 39 # Is `Camera.height`.\nfield SFBool camera_antiAliasing FALSE # Is `Camera.antiAliasing`.\nfield SFRotation camera_rotation 0 0 1 0 # Is `Camera.rotation`. Interesting setup: set `0 1 0 0.47` in order to simulate the linear camera mode.\nfield SFFloat camera_noise 0.0 # Is `Camera.noise`.\nfield SFFloat camera_motionBlur 0.0 # Is `Camera.motionBlur`.\nfield SFInt32 distance_sensor_numberOfRays 1 # Is `DistanceSensor.numberOfRays`.\nfield SFInt32 emitter_channel 1 # Is `Emitter.channel`.\nfield SFInt32 receiver_channel 1 # Is `Receiver.channel`.\nfield MFNode turretSlot [] # Extends the robot with new nodes in the turret slot.\nfield MFNode groundSensorsSlot [] # Extends the robot with new nodes in the ground slot. Typically: `E-puckGroundSensors.proto`.\nfield SFBool kinematic FALSE # Defines whether the robot motion and its sensors are computed according to a 2D kinematics algorithm.</parameters>
	</proto>
	<proto>
		<name>E-puckDistanceSensor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/e-puck/protos/E-puckDistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Distance sensor of the e-puck mobile robot.\n</description>
		<parameters>field SFVec3f translation 0 0.005 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;\nfield SFInt32 numberOfRays 1 # Is `DistanceSensor.numberOfRays`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Elisa3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/elisa/protos/Elisa3.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/elisa3</documentation-url>
		<description>Elisa-3: miniature Arduino robot by GCtronic.\nThe Elisa-3 is powered by an ATmega 2560 processor and features a large number of sensors.\nMore info here: http://www.gctronic.com/doc/index.php/Elisa-3.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Elisa-3&quot; # Is `Solid.name`.\nfield SFString controller &quot;elisa3&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFInt32 emitter_channel 1 # Is `Emitter.channel`.\nfield SFInt32 receiver_channel 1 # Is `Receiver.channel`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Elisa3DistanceSensor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/gctronic/elisa/protos/Elisa3DistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Distance sensor of the Elisa-3 mobile robot.\n</description>
		<parameters>field SFVec3f translation 0 0.005 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Shrimp</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/bluebotics/shrimp/protos/Shrimp.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/shrimp</documentation-url>
		<description>The &quot;Shrimp&quot; robot is a mobile platform for rough terrain from Bluebotics.\nIt has 6 wheels and a passive structure that adapts to the terrain profile and climbs obstacles.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Shrimp&quot; # Is `Solid.name`.\nfield SFString controller &quot;shrimp&quot; # Is `Robot.controller`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>TiagoFrontArm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoFrontArm.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots for the robot TIAGo from PAL Robotics (Spain).\nIt is the robot's left arm that can be connected to the TIAGo body.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo front arm&quot;\nfield MFNode endEffectorSlot [] # Extends the arm with an end-effector (such as the TiagoGripper or the TiagoLeftHey5 for example).</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoLeftArm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoLeftArm.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots for the robot TIAGo from PAL Robotics (Spain).\nIt is the robot's left arm that can be connected to the TIAGo body.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo left arm&quot;\nfield MFNode endEffectorSlot [] # Extends the arm with an end-effector (such as the TiagoGripper or the TiagoLeftHey5 for example).</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoRightHey5</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoRightHey5.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>Right version of the Hey5 hand end-effector for the TIAGo robot from PAL Robotics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 -1 -1.5708\nfield SFString name &quot;right Hey5 hand&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoGripper</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoGripper.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>Parallel gripper end-effector for the TIAGo robot from PAL Robotics.\n</description>
		<parameters>field SFVec3f translation 0 0.016 0\nfield SFRotation rotation 0.5774 0.5774 -0.5774 2.0944\nfield SFString{&quot;left&quot;, &quot;front&quot;, &quot;right&quot;} name &quot;front&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoRightArm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoRightArm.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots for the robot TIAGo from PAL Robotics (Spain).\nIt is the robot's right arm that can be connected to the TIAGo body.\n</description>
		<parameters>field SFVec3f translation 0.05 0 0\nfield SFRotation rotation 0 0 1 3.14159\nfield SFString name &quot;TIAGo right arm&quot;\nfield MFNode endEffectorSlot [] # Extends the arm with an end-effector (such as the TiagoGripper or the TiagoRightHey5 for example).</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoBody</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoBody.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>TIAGo robot's body from PAL Robotics.\nThe body can be extended with arms.\n</description>
		<parameters>field SFVec3f translation -0.054 0 0.193\nfield SFRotation rotation 0 0 1 0\nfield MFNode cameraSlot [] # Extends the robot with a camera at head level.\nfield MFNode rightArmSlot [] # Extends the robot with a right arm (such as the TiagoRightArm for example).\nfield MFNode frontArmSlot [] # Extends the robot with a front arm (such as the TiagoLeftArm for example).\nfield MFNode leftArmSlot [] # Extends the robot with a left arm (such as the TiagoLeftArm for example).</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>TiagoLeftHey5</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_extensions/protos/TiagoLeftHey5.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>Left version of the Hey5 hand end-effector for the TIAGo robot from PAL Robotics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 -1.5708\nfield SFString name &quot;left Hey5 hand&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Tiago++</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago++/protos/Tiago++.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/tiago++</documentation-url>
		<description>TIAGo++ robot from PAL Robotics.\nThe robot is composed by the TIAGo base and a body with two arms equipped with parallel grippers.\n</description>
		<parameters>field SFVec3f translation 0 0 0.095\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo++&quot;\nfield SFString controller &quot;tiago++&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield MFNode cameraSlot [] # Extends the robot with a camera at head level.\nfield MFNode endEffectorRightSlot TiagoGripper { name &quot;right&quot; } # Extends the robot with a right end-effector (such as the TiagoRightHey5 for example).\nfield MFNode endEffectorLeftSlot TiagoGripper { name &quot;left&quot; } # Extends the robot with a left end-effector (such as the TiagoLeftHey5 for example).\nfield MFNode lidarSlot HokuyoUrg04lxug01{} # Extends the robot with a lidar sensor (such as Sick TIM551 or Hokuyo URG 04LX_UG01 for example).</parameters>
	</proto>
	<proto>
		<name>TiagoTitanium</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_titanium/protos/TiagoTitanium.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/tiago-titanium</documentation-url>
		<description>Titanium version of the TIAGo robot from PAL Robotics.\nThe robot is composed by the TIAGo base and a body with a front arm equipped with a Hey5 hand.\n</description>
		<parameters>field SFVec3f translation 0 0 0.095\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo Titanium&quot;\nfield SFString controller &quot;tiago_titanium&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield MFNode cameraSlot [] # Extends the robot with a camera at head level.\nfield MFNode lidarSlot HokuyoUrg04lxug01{} # Extends the robot with a lidar sensor (such as Sick TIM551 or Hokuyo URG 04LX_UG01 for example).</parameters>
	</proto>
	<proto>
		<name>TiagoIron</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_iron/protos/TiagoIron.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/tiago-iron</documentation-url>
		<description>Iron version of the TIAGo robot from PAL Robotics.\nThe robot is composed by the TIAGo base and a body without arm.\n</description>
		<parameters>field SFVec3f translation 0 0 0.095\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo Iron&quot;\nfield SFString controller &quot;tiago_iron&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield MFNode cameraSlot [] # Extends the robot with a camera at head level.\nfield MFNode lidarSlot HokuyoUrg04lxug01{} # Extends the robot with a lidar sensor (such as Sick TIM551 or Hokuyo URG 04LX_UG01 for example).</parameters>
	</proto>
	<proto>
		<name>TiagoBase</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_base/protos/TiagoBase.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/tiago-base</documentation-url>
		<description>This is a PROTO file for Webots for the robot TIAGo from PAL Robotics (Spain).\nIt is the TIAGo base robot that can be extended with different features to fullfil your requirement.\n</description>
		<parameters>field SFVec3f translation 0 0 0.095\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo Base&quot;\nfield SFString controller &quot;tiago_base&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield SFString model &quot;PAL Robotics - TIAGo Base&quot;\nfield MFNode bodySlot [] # Extends the robot with a body (such as the TiagoBody or fixed shelves, safety box, roller conveyor, boxes, lifter for example).\nfield MFNode lidarSlot [] # Extends the robot with a lidar sensor (such as Sick TIM551 or Hokuyo URG 04LX_UG01 for example).</parameters>
	</proto>
	<proto>
		<name>TiagoSteel</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/pal_robotics/tiago_steel/protos/TiagoSteel.proto</url>
		<license>Apache License 2.0.</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/tiago-steel</documentation-url>
		<description>Steel version of the TIAGo robot from PAL Robotics.\nThe robot is composed by the TIAGo base and a body with the front arm equipped with a parallel gripper.\n</description>
		<parameters>field SFVec3f translation 0 0 0.095\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;TIAGo Steel&quot;\nfield SFString controller &quot;tiago_steel&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield MFNode cameraSlot [] # Extends the robot with a camera at head level.\nfield MFNode lidarSlot HokuyoUrg04lxug01{} # Extends the robot with a lidar sensor (such as Sick TIM551 or Hokuyo URG 04LX_UG01 for example).</parameters>
	</proto>
	<proto>
		<name>AltinoWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/saeon/protos/AltinoWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<slot-type>vehicle wheel</slot-type>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;Altino wheel&quot;</parameters>
	</proto>
	<proto>
		<name>AltinoBodyMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/saeon/protos/AltinoBodyMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Altino</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/saeon/protos/Altino.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/altino</documentation-url>
		<description>The &quot;ALTINO System&quot; is a robot platform designed for education. It is a four-wheeled robot based on an Ackermann vehicle frame.\n</description>
		<parameters>field SFVec3f translation 0 0 0.022 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;vehicle&quot; # Is `Solid.name`.\nfield SFString controller &quot;vehicle_driver_altino&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFColor color 0.3 0.3 0.7 # Is `Material.diffuseColor`.</parameters>
	</proto>
	<proto>
		<name>Pioneer3dx</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/adept/pioneer3/protos/Pioneer3dx.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/pioneer-3dx</documentation-url>
		<description>The Pioneer 3-DX robot (Adept MobileRobots) is an all-purpose base, used for research and applications involving mapping, teleoperation, localization, monitoring, reconnaissance and other behaviors.\n</description>
		<parameters>field SFVec3f translation 0 0 0.0975 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Pioneer 3-DX&quot; # Is `Solid.name`.\nfield SFString controller &quot;pioneer3dx_collision_avoidance&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Pioneer3Gripper</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/adept/pioneer3/protos/Pioneer3Gripper.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Physics-based model of the Pioneer gripper (Adept Mobile Robotics)\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFString name &quot;Pioneer3 gripper&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Pioneer3DistanceSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/adept/pioneer3/protos/Pioneer3DistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Distance sensor of the Pioneer 3AT robot.\n</description>
		<parameters>field SFVec3f translation 0 0.137 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;so&quot;\nfield SFString type &quot;sonar&quot;</parameters>
	</proto>
	<proto>
		<name>Pioneer3at</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/adept/pioneer3/protos/Pioneer3at.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/pioneer-3at</documentation-url>
		<description>Pioneer 3AT robot (Adept MobileRobots) is an all terrain four wheels drive robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Pioneer 3-AT&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Pioneer2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/adept/pioneer2/protos/Pioneer2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/pioneer2</documentation-url>
		<description>The Pioneer 2 robot (Adept MobileRobots) is an all-purpose base, used for research and applications involving mapping, teleoperation, localization, monitoring, reconnaissance and other behaviors.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Pioneer 2&quot; # Is `Solid.name`.\nfield SFString controller &quot;braitenberg&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Salamander</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/epfl/biorob/protos/Salamander.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/salamander</documentation-url>
		<description>The &quot;Salamander&quot; robot is a salamander-like robot developed by the EPFL BioRob laboratory.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Salamander&quot; # Is `Solid.name`.\nfield SFString controller &quot;salamander&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>GhostDog</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/epfl/biorob/protos/GhostDog.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ghostdog</documentation-url>
		<description>The &quot;GhostDog&quot; robot is a dog-like robot developed by the EPFL BioRob laboratory.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;GhostDog&quot; # Is `Solid.name`.\nfield SFString controller &quot;ghostdog&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Yamor</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/epfl/biorob/protos/Yamor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/yamor</documentation-url>
		<description>The &quot;Yamor&quot; robot is a modular robot developed by the EPFL BioRob laboratory.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Yamor&quot; # Is `Solid.name`.\nfield SFString controller &quot;yamor&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Blimp</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/epfl/lis/protos/Blimp.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/blimp</documentation-url>
		<description>The &quot;Blimp&quot; robot is a Zeppelin-like aerial robot developed by the EPFL LIS laboratory.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Blimp&quot; # Is `Solid.name`.\nfield SFString controller &quot;blimp&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Crazyflie</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/bitcraze/crazyflie/protos/Crazyflie.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/crazyflie</documentation-url>
		<description>The &quot;Crazyflie&quot; is a robot developed by &quot;Bitcraze&quot;: https://bitcraze.io\n</description>
		<parameters>field SFVec3f translation 0 0 0.015 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Crazyflie&quot; # Is `Solid.name`.\nfield SFString controller &quot;crazyflie&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>BoeBot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/parallax/boebot/protos/BoeBot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/boebot</documentation-url>
		<description>The &quot;Boe-Bot&quot; is a 3 wheeled robot (2 motorized wheels and a passive caster wheel) created by Parallax Inc.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;BoeBot&quot; # Is `Solid.name`.\nfield SFString controller &quot;boebot&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>ScaraT6</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/epson/scara_t6/protos/ScaraT6.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Model of the T6-602S Epson Scara robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;ScaraT6&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;none&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool staticBase FALSE # Defines if the scara base should be pinned to the static environment.\nfield MFNode handSlot [] # Extends the shaft with new nodes in the hand slot.</parameters>
	</proto>
	<proto>
		<name>BB-8HeadShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/sphero/bb8/protos/BB-8HeadShape.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BB-8BodyShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/sphero/bb8/protos/BB-8BodyShape.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BB-8</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/sphero/bb8/protos/BB-8.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/bb8</documentation-url>
		<description>Model of the Sphero's BB-8 robot.\nThe default dimension parameters are matching the robot as seen in the movie.\nThe mass inside the body ball can be moved along 2 DOFs (pitch and yaw motors).\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;BB-8&quot; # Is `Solid.name`.\nfield SFString controller &quot;bb-8&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString contactMaterial &quot;bb-8&quot; # Defines the `Solid.contactMaterial` for the robot parts.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield SFFloat bodyRadius 0.25 # Defines the radius of the sphere which defines the robot body.\nfield SFFloat bodyMass 5.0 # Defines the mass of the robot body.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield SFFloat headOffset 0.025 # Defines the distance between the body center and the head center.\nfield SFFloat headRadius 0.15 # Defines the radius of the sphere which defines the robot head.\nfield SFFloat headMass 1.0 # Defines the mass of the robot head.\nfield SFFloat weightMass 20.0 # Defines the mass of the robot body.\nfield SFFloat maxVelocity 8.72 # Defines the `RotationalMotor.maxVelocity` fields. Note: the real robot moves at 4.9 [mph].</parameters>
	</proto>
	<proto>
		<name>IprHd6m180</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/neuronics/ipr/protos/IprHd6m180.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ipr</documentation-url>
		<description>The IPR robot is a six degrees of freedom robotic arm equipped with a gripper composed of 2 rotational fingers.\nIt was developed by Neuronics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.61 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;IPR&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode sensorsSlot [] # Extends the robot with new nodes in the sensors slot.\nfield MFNode tableSlot [] # Extends the robot with new nodes in the table slot.\nfield MFNode wristSlot [] # Extends the robot with new nodes in the wrist slot.\nfield MFNode leftGripperSlot [] # Extends the robot with new nodes in the left gripper slot.\nfield MFNode rightGripperSlot [] # Extends the robot with new nodes in the right gripper slot.</parameters>
	</proto>
	<proto>
		<name>IprHd6m90</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/neuronics/ipr/protos/IprHd6m90.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ipr</documentation-url>
		<description>The IPR robot is a six degrees of freedom robotic arm equipped with a gripper composed of 2 rotational fingers.\nIt was developed by Neuronics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.62 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;IPR&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode sensorsSlot [] # Extends the robot with new nodes in the sensors slot.\nfield MFNode tableSlot [] # Extends the robot with new nodes in the table slot.\nfield MFNode wristSlot [] # Extends the robot with new nodes in the wrist slot.\nfield MFNode leftGripperSlot [] # Extends the robot with new nodes in the left gripper slot.\nfield MFNode rightGripperSlot [] # Extends the robot with new nodes in the right gripper slot.</parameters>
	</proto>
	<proto>
		<name>IprHd6ms180</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/neuronics/ipr/protos/IprHd6ms180.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ipr</documentation-url>
		<description>The IPR robot is a six degrees of freedom robotic arm equipped with a gripper composed of 2 rotational fingers.\nIt was developed by Neuronics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.61 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;IPR&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode sensorsSlot [] # Extends the robot with new nodes in the sensors slot.\nfield MFNode tableSlot [] # Extends the robot with new nodes in the table slot.\nfield MFNode wristSlot [] # Extends the robot with new nodes in the wrist slot.\nfield MFNode leftGripperSlot [] # Extends the robot with new nodes in the left gripper slot.\nfield MFNode rightGripperSlot [] # Extends the robot with new nodes in the right gripper slot.</parameters>
	</proto>
	<proto>
		<name>IprHd6ms90</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/neuronics/ipr/protos/IprHd6ms90.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ipr</documentation-url>
		<description>The IPR robot is a six degrees of freedom robotic arm equipped with a gripper composed of 2 rotational fingers.\nIt was developed by Neuronics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.62 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;IPR&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode sensorsSlot [] # Extends the robot with new nodes in the sensors slot.\nfield MFNode tableSlot [] # Extends the robot with new nodes in the table slot.\nfield MFNode wristSlot [] # Extends the robot with new nodes in the wrist slot.\nfield MFNode leftGripperSlot [] # Extends the robot with new nodes in the left gripper slot.\nfield MFNode rightGripperSlot [] # Extends the robot with new nodes in the right gripper slot.</parameters>
	</proto>
	<proto>
		<name>Puma560</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/unimation/puma/protos/Puma560.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/puma</documentation-url>
		<description>The PUMA robotic arm (for &quot;Programmable Universal Machine for Assembly&quot;) is a six axes arm with three axes making up a spherical wrist.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;PUMA 560&quot; # Is `Solid.name`.\nfield SFString controller &quot;puma560&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode gripperSlot [] # Extends the robot with new nodes in the gripper slot.</parameters>
	</proto>
	<proto>
		<name>Khr2hv</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kondo/khr-2hv/protos/Khr2hv.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khr-2hv</documentation-url>
		<description>The Kondo's KHR-2HV\nMore info here: http://www.kondo-robot.com/EN/\n</description>
		<parameters>field SFVec3f translation 0 0 0.215 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;KHR-2HV&quot; # Is `Solid.name`.\nfield SFString controller &quot;khr-2hv_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString contactMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the robot parts.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>Khr3hv</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kondo/khr-3hv/protos/Khr3hv.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khr-3hv</documentation-url>
		<description>The &quot;Kondo KHR-3HV&quot; is an humanoid robot with 17 degrees of freedom.\n</description>
		<parameters>field SFVec3f translation 0 0 0.68 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;KHR-3HV&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>Microbot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/picaxe/microbot/protos/Microbot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/microbot</documentation-url>
		<description>BOT120 PICAXE-20X2 Microbot (Revolution Education Ltd.)\nThis small robot is used for education with PICAXE programming tools\n</description>
		<parameters>field SFVec3f translation 0 0 0.022 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;BOT120&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Panda</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/franka_emika/panda/protos/Panda.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>This is a proto file for Franka Emika's Panda arm.\nThe PROTO has been generated from the officially provided xacro description of the robot, available at https://github.com/frankaemika/franka_ros.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;panda&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield MFNode endEffectorSlot PandaHand {} # Defines the end effector.</parameters>
	</proto>
	<proto>
		<name>PandaHand</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/franka_emika/panda/protos/PandaHand.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>This is a PROTO file for Franka Emika's Panda Hand.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;panda hand&quot; # Is `Solid.name`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Ned</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/niryo/ned/protos/Ned.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/ned</documentation-url>
		<description>A 6-axis collaborative robot based on open-source technologies designed for education, professional training and research.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Ned&quot; # Is `Robot.name`.\nfield SFString controller &quot;ned&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.</parameters>
	</proto>
	<proto>
		<name>P-Grip</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/fp_robotics/p-rob3/protos/P-Grip.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/p-rob3</documentation-url>
		<description>A P-Grip gripper rom F&amp;P Robotics\n</description>
		<parameters>field SFVec3f translation 0 0 0.07775 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;link_base_tcp180&quot; # Is `Solid.name`.\nfield SFString model &quot;180 deg&quot; # Is `Solid.model`.\nfield SFColor mainColor 0.98 0.98 0.98 # Defines the main color of the robot.\nfield SFColor secondaryColor 0.036 0.3 0.615 # Defines the secondary color of the robot.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>P-GripDistanceSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/fp_robotics/p-rob3/protos/P-GripDistanceSensor.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A distance sensor to plug in the fingers of the P-Grip gripper.\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0.07775 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;distance sensor&quot; # Is `Solid.name`.</parameters>
	</proto>
	<proto>
		<name>P-Rob3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/fp_robotics/p-rob3/protos/P-Rob3.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/p-rob3</documentation-url>
		<description>A P-Rob3 robotic arm from F&amp;P Robotics.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;P-Rob3&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision TRUE # Is `Robot.selfCollision`.\nfield SFColor mainColor 0.98 0.98 0.98 # Defines the main color of the robot.\nfield SFColor secondaryColor 0.036 0.3 0.615 # Defines the secondary color of the robot.\nfield MFNode toolSlot [ P-Grip { } ] # Extend the robot with new nodes at the end of the arm.\nfield SFBool staticBase TRUE # Defines if the robot base should be pinned to the static environment.</parameters>
	</proto>
	<proto>
		<name>Arm3Mesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm3Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm3 lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>SubWheelMesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/SubWheelMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>subwheel lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BodyMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/BodyMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>body lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Youbot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Youbot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/youbot</documentation-url>
		<description>The KUKA youBot is a powerful, educational robot that is especially designed for research and education in mobile manipulation, which counts as a key technology for professional service robotics. It consists of an omnidirectional platform, a five degree-of-freedom robot arm and a two-finger gripper.\n</description>
		<parameters>field SFVec3f translation 0 0 0.12 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;youBot&quot; # Is `Solid.name`.\nfield SFString controller &quot;youbot&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield SFInt32{0, 1, 2} numberOfArms 1 # Defines the number of arms on the robot.</parameters>
	</proto>
	<proto>
		<name>Arm4Mesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm4Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm4 lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Arm2Mesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm2Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm2 lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Arm0Mesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm0Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm0 lowpoly mesh\ncreated from the CAD files of the youBot using blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BlackMetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/BlackMetalAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>black metal appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Arm5Mesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm5Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm5 lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/MetalAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>satiny metal appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PlateMesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/PlateMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>plate lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BlackAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/BlackAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>plastic metal appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>SubWheel</name>
		<base-type>HingeJoint</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/SubWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>subwheel of the omnidirectionnal wheel\n</description>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;youBot subwheel&quot;</parameters>
	</proto>
	<proto>
		<name>FingerMesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/FingerMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>finger lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>WheelMesh</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/WheelMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>wheel lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>KukaAlphaAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/KukaAlphaAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>kuka logo on a transparent background appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>KukaBlackAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/KukaBlackAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>kuka logo on a black background appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>OrangeAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/OrangeAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>plastic orange appearance\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Arm1Mesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/Arm1Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>arm1 lowpoly mesh\ncreated from the CAD files of the youBot using Blender\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>KukaBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/KukaBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A small metal box.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Kuka box&quot;\nfield SFColor color 0.5 0.5 0.5\nfield SFVec3f size 0.025 0.025 0.025\nfield SFString contactMaterial &quot;default&quot;\nfield SFNode physics Physics { density 2700 } # Default to aluminium density.</parameters>
	</proto>
	<proto>
		<name>InteriorWheel</name>
		<base-type>HingeJoint</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/InteriorWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>omnidirectionnal wheels with 2D coulomb friction\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFVec3f anchor 0 0 0\nfield SFString name &quot;wheel&quot;\nfield SFString sensorName &quot;wheel_sensor&quot;</parameters>
	</proto>
	<proto>
		<name>ExteriorWheel</name>
		<base-type>HingeJoint</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kuka/youbot/protos/ExteriorWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>omnidirectionnal wheel with 2D coulomb friction\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFVec3f anchor 0 0 0\nfield SFString name &quot;wheel&quot;\nfield SFString sensorName &quot;wheel_sensor&quot;</parameters>
	</proto>
	<proto>
		<name>QRIO</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/sony/qrio/protos/QRIO.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/qrio</documentation-url>
		<description>QRIO (&quot;Quest for cuRIOsity&quot;, originally named Sony Dream Robot or SDR) is a bipedal humanoid entertainment robot developed and marketed by Sony.\n</description>
		<parameters>field SFVec3f translation 0 0 0.42 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;QRIO&quot; # Is `Solid.name`.\nfield SFString controller &quot;qrio&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>AiboErs7</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/sony/aibo/protos/AiboErs7.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/aibo-ers7</documentation-url>
		<description>Aibo ERS7 is a four-legged dog-like robot designed by Sony Corp.\n</description>
		<parameters>field SFVec3f translation 0 0 0.143 # Is `Transform.translation`.\nfield SFRotation rotation 0 -1 0 -0.05 # Is `Transform.rotation`.\nfield SFString name &quot;ERS-7&quot; # Is `Solid.name`.\nfield SFString controller &quot;ers7&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFFloat camera_fieldOfView 0.993092 # Is `Camera.fieldOfView`.\nfield SFInt32 camera_width 208 # Is `Camera.width`.\nfield SFInt32 camera_height 160 # Is `Camera.height`.\nfield SFBool camera_antiAliasing FALSE # Is `Camera.antiAliasing`.\nfield MFNode headSlot [] # Extends the robot with new nodes located in the head.\nfield MFNode extensionSlot [] # Extends the robot with new nodes located in the body center.</parameters>
	</proto>
	<proto>
		<name>KeyPot</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/KeyPot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Nao challenge key pot\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;key pot&quot;</parameters>
	</proto>
	<proto>
		<name>NaoRightWristH21</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoRightWristH21.proto</url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;right wrist&quot;\nfield SFString version &quot;4.0&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield SFColor color 0.8 0.8 0.8\nfield MFNode handSlot []</parameters>
	</proto>
	<proto>
		<name>Nao</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Nao.proto</url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/nao</documentation-url>
		<description>Generic model of Nao robot\nModel designed by Cyberbotics Ltd. according to the online documentation provided by Aldebaran Robotics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.334 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;NAO&quot; # Is `Solid.name`.\nfield SFString{&quot;V3.3&quot;, &quot;V4 (orange)&quot;, &quot;V4 (blue)&quot;,
 &quot;V5 (red)&quot;, &quot;V5 (blue)&quot;, &quot;V5 (grey)&quot;}
 version &quot;V5 (red)&quot; # Defines the Nao version.\nfield SFInt32{21, 25} degreeOfFreedom 25 # Defines the number of degrees of freedom; either &quot;21&quot; (fixed fingers) or &quot;25&quot; (articulated fingers).\nfield MFColor customColor [] # Defines the color of the secondary plastic components.\nfield SFString controller &quot;nao_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFFloat gpsAccuracy 0.0 # Is `GPS.accuracy`.\nfield SFInt32 cameraWidth 160 # Is `Camera.width`.\nfield SFInt32 cameraHeight 120 # Is `Camera.height`.\nfield SFBool cameraAntiAliasing FALSE # Is `Camera.antiAliasing`.\nfield SFFloat cameraAmbientOcclusionRadius 0 # Is `Camera.ambientOcclusionRadius`.\nfield SFFloat cameraBloomThreshold -1 # Is `Camera.bloomThreshold`.\nfield SFNode cameraFocus NULL # Is `Camera.focus`.\nfield SFNode jersey NULL # Extends the robot with a jersey: typically NaoJersey.proto.\nfield SFInt32 channel 0 # Defines the channel for the `Emitter` and `Receiver` devices.\nfield SFString contactMaterial &quot;NAO material&quot; # Defines the `Solid.contactMaterial` for all the robot parts, except the feet and the fingers.\nfield SFString footContactMaterial &quot;NAO foot material&quot; # Defines the `Solid.contactMaterial` for the feet.\nfield SFString fingerContactMaterial &quot;NAO finger material&quot; # Defines the `Solid.contactMaterial` for the fingers.\nfield SFFloat fingerRadius 0.0055 # Defines the radius of all the fingers.\nfield SFFloat fingerTorque 10.0 # Defines the torque applied on the finger motors.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the right hand slot.</parameters>
	</proto>
	<proto>
		<name>LollipopCandy</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/LollipopCandy.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.9 0.1 0.1\nfield SFString name &quot;lollipop candy&quot;</parameters>
	</proto>
	<proto>
		<name>KeyHole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/KeyHole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Nao challenge key hole\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;key hole&quot;\nfield SFString contactMaterial &quot;default&quot;</parameters>
	</proto>
	<proto>
		<name>NaoJersey</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoJersey.proto</url>
		<description>Soccer jersey specifically designed for the Nao robot.\n\nThe appearance can be modified changing the value of the 'jerseyTexture' field,\notherwise if no texture is available the model will use the color specified in 'jerseyColor' field.\nA default set of red and blue textures with player number from 1 to 5 is provided.\n</description>
		<slot-type>nao jersey</slot-type>
		<parameters>field MFString jerseyTexture &quot;textures/nao_1_red.png&quot;\nfield SFColor jerseyColor 0.4 0.05 0.05</parameters>
	</proto>
	<proto>
		<name>Distributor</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Distributor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Nao challenge distributor\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;distributor&quot;\nfield SFString controller &quot;distributor&quot;\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.</parameters>
	</proto>
	<proto>
		<name>Cart</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Cart.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cart&quot;</parameters>
	</proto>
	<proto>
		<name>VisualArmature</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/VisualArmature.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An outline textured armature without back\nTypically useful to create a wall painting invisible from backward\n</description>
		<parameters>field SFVec3f translation 0 0 0.5\nfield SFRotation rotation 0 0 1 0\nfield SFVec3f dimension 0.05 1 1\nfield SFColor outlineColor 1 1 1\nfield MFString textureUrl &quot;textures/webots.jpg&quot;</parameters>
	</proto>
	<proto>
		<name>Tray</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Tray.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Nao challenge tray\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;tray&quot;</parameters>
	</proto>
	<proto>
		<name>Shelves</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Shelves.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;shelves&quot;</parameters>
	</proto>
	<proto>
		<name>BallCandy</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/BallCandy.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ball candy&quot;\nfield SFColor color 0.9 0.1 0.1</parameters>
	</proto>
	<proto>
		<name>NaoRightWristH25Realistic</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoRightWristH25Realistic.proto</url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;right wrist&quot;\nfield SFString version &quot;5.0&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield SFString fingerContactMaterial &quot;default&quot;\nfield SFFloat fingerRadius 0.0055\nfield SFFloat fingerTorque 10.0\nfield SFColor color 0.8 0.8 0.8\nfield MFNode handSlot []</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>NaoLeftWristH21</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoLeftWristH21.proto</url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;left wrist&quot;\nfield SFString version &quot;4.0&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield SFColor color 0.8 0.8 0.8\nfield MFNode handSlot []</parameters>
	</proto>
	<proto>
		<name>NaoChallengeRoom</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoChallengeRoom.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The room of the Nao challenge\n</description>
		<parameters>field SFString name &quot;Nao challenge room&quot;</parameters>
	</proto>
	<proto>
		<name>Key</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/Key.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Nao challenge key\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;key&quot;\nfield SFString contactMaterial &quot;default&quot;</parameters>
	</proto>
	<proto>
		<name>NaoLeftWristH25Realistic</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoLeftWristH25Realistic.proto</url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;left wrist&quot;\nfield SFString version &quot;5.0&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield SFString fingerContactMaterial &quot;default&quot;\nfield SFFloat fingerRadius 0.0055\nfield SFFloat fingerTorque 10.0\nfield SFColor color 0.8 0.8 0.8\nfield MFNode handSlot []</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>NaoRoom</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/softbank/nao/protos/NaoRoom.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The room of the Nao challenge\n</description>
		<parameters>field SFString name &quot;Nao room&quot;</parameters>
	</proto>
	<proto>
		<name>Hoap2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/fujitsu/hoap2/protos/Hoap2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/hoap2</documentation-url>
		<description>Hoap 2 - Advanced humanoid robot manufactured by Fujitsu Automation\n50 cm high, 7 kg, 25 degrees of freedom\n</description>
		<parameters>field SFVec3f translation 0 0 0.29 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;HOAP-2&quot; # Is `Solid.name`.\nfield SFString controller &quot;hoap2&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString contactMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for all the robot parts, except the feet.\nfield SFString footContactMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the feet.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Koala</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/koala/protos/Koala.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/koala</documentation-url>
		<description>The &quot;Koala&quot; robot is a six-wheeled indoor robot produced by K-Team.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Koala&quot; # Is `Solid.name`.\nfield SFString controller &quot;koala&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Khepera2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera2/protos/Khepera2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khepera2</documentation-url>
		<description>The &quot;Khepera II&quot; robot is a two-wheeled robot produced by K-Team.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Khepera II&quot; # Is `Solid.name`.\nfield SFString controller &quot;braitenberg&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Hemisson</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/hemisson/protos/Hemisson.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/hemisson</documentation-url>
		<description>The &quot;Hemisson&quot; is a two-wheeled robot designed for education and teaching developped by K-TEAM.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Hemisson&quot; # Is `Solid.name`.\nfield SFString controller &quot;hemisson&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Khepera4InfraredSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera4/protos/Khepera4InfraredSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;infrared sensor&quot;\nfield SFBool shortRange FALSE</parameters>
	</proto>
	<proto>
		<name>Khepera4</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera4/protos/Khepera4.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khepera4</documentation-url>
		<description>The &quot;Khepera IV&quot; robot is a two-wheeled robot produced by K-Team.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Khepera IV&quot; # Is `Solid.name`.\nfield SFString controller &quot;khepera4&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString bodyMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the body.\nfield SFString wheelMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the wheels.\nfield SFString casterWheelMaterial &quot;khepera4 caster wheel&quot; # Defines the `Solid.contactMaterial` for the caster wheel.\nfield SFInt32 emitterChannel 1 # Is `Emitter.channel`.\nfield SFInt32 receiverChannel 1 # Is `Receiver.channel`.\nfield MFNode turretSlot [] # Extends the robot with new nodes in the turret slot.</parameters>
	</proto>
	<proto>
		<name>Khepera1</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera1/protos/Khepera1.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khepera1</documentation-url>
		<description>The &quot;Khepera&quot; robot is a two-wheeled robot produced by K-Team.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Khepera&quot; # Is `Solid.name`.\nfield SFString controller &quot;braitenberg&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.\nfield SFBool kinematic FALSE # Defines whether the robot motion and its sensors are computed according to a 2D kinematics algorithm.</parameters>
	</proto>
	<proto>
		<name>Khepera3_Gripper</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera3/protos/Khepera3_Gripper.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Physics-based model of the Khepera III gripper (K-Team Corp.)\n</description>
		<parameters>field SFVec3f translation 0 0 0.074\nfield SFString name &quot;Khepera III gripper&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Khepera3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera3/protos/Khepera3.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/khepera3</documentation-url>
		<description>The &quot;Khepera III&quot; robot is a two-wheeled robot produced by K-Team.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Khepera III&quot; # Is `Solid.name`.\nfield SFString controller &quot;braitenberg&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString wheelMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the wheels.\nfield SFString bodyMaterial &quot;default&quot; # Defines the `Solid.contactMaterial` for the body.\nfield MFNode turretSlot [] # Extends the robot with new nodes in the turret slot.</parameters>
	</proto>
	<proto>
		<name>Khepera3_GroundSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera3/protos/Khepera3_GroundSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Ground sensor of a Khepera III robot.\nElectronic part: Vishay TCRT5000\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;</parameters>
	</proto>
	<proto>
		<name>Khepera3_DistanceSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera3/protos/Khepera3_DistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of an infra-red sensor of the Khepera III robot.\nThe lookup table was calibrated using data collected from a real Khepera III.\nMeasures were carried out between 0 and 44.5 cm using a white obstacle and a black ground.\nElectronic part: Vishay TCRT5000\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;</parameters>
	</proto>
	<proto>
		<name>Khepera3_USSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/k-team/khepera3/protos/Khepera3_USSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Ultrasound sensor of a Khepera III robot.\nElectronic parts: Midas 400ST100 (transmitter) and 400SR100 (receiver)\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;</parameters>
	</proto>
	<proto>
		<name>MindstormsRover</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/lego/mindstorms/protos/MindstormsRover.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/mindstorms</documentation-url>
		<description>Mindstorms Rover model based on Lego's Mindstorms kit.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;MindstormsRover&quot; # Is `Solid.name`.\nfield SFString controller &quot;Rover&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>TurtleBot3Burger</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/turtlebot/protos/TurtleBot3Burger.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/turtlebot3burger</documentation-url>
		<description>Burger model of the third version of the TurtleBot robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 1 0 0 # Is `Transform.rotation`.\nfield SFString name &quot;TurtleBot3Burger&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [ RobotisLds01 { } ] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>BioloidDog</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/bioloid/protos/BioloidDog.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/bioloid</documentation-url>
		<description>A dog-like robot using the ROBOTIS Bioloid kit.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;BioloidDog&quot; # Is `Solid.name`.\nfield SFString controller &quot;bioloid_dog&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>RobotisOp3BlackPaintedMetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3BlackPaintedMetalAppearance.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Darwin-opHinge2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/Darwin-opHinge2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotis-op2</documentation-url>
		<description>Robotis' DARwIn-OP is an open platform, miniature humanoid robot used for research, education and outreach.\nThe DARwIn-OP model contains principally:\n- the 20 DOF\n- LEDs\n- accelerometer\n- gyro\n- camera\n- realistic physics\n</description>
		<parameters>field SFVec3f translation 0 0 0.227 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;DARwIn-OP Hinge2&quot; # Is `Solid.name`.\nfield SFString controller &quot;motion_player&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;robotis-op2_window&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFColor plasticColor 0.301961 0.301961 0.301961 # Is `Material.plasticColor`.\nfield SFInt32 cameraWidth 160 # Is `Camera.width`.\nfield SFInt32 cameraHeight 120 # Is `Camera.height`.\nfield SFNode jersey NULL # Extends the robot with a jersey: typically RobotisJersey.proto.\nfield SFInt32 channel 0 # Defines the channel for the `Emitter` and `Receiver` devices.\nfield SFBool backlash FALSE # Enables backlash on all joints.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the right hand slot.
#protected</parameters>
	</proto>
	<proto>
		<name>RobotisJersey</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisJersey.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Soccer jersey specifically designed for the Robotis robots.\n\nThe appearance can be modified changing the value of the 'jerseyTexture' field,\notherwise if no texture is available the model will use the color specified in 'jerseyColor' field.\nA default set of red and blue textures with player number from 1 to 5 is provided.\n</description>
		<slot-type>robotis jersey</slot-type>
		<parameters>field MFString jerseyTexture &quot;textures/robotis-op2_1_red.png&quot;\nfield SFColor jerseyColor 1 1 1</parameters>
	</proto>
	<proto>
		<name>MX430RearRotorShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/MX430RearRotorShape.proto</url>
		<tags>hidden</tags>
		<parameters>field SFBool screwA FALSE\nfield SFBool screwB FALSE\nfield SFBool screwC FALSE\nfield SFBool screwD FALSE\nfield SFBool screwE FALSE\nfield SFBool screwF FALSE\nfield SFBool screwG FALSE\nfield SFBool screwH FALSE</parameters>
	</proto>
	<proto>
		<name>RobotisOp3HeadShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3HeadShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3FootShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3FootShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3SquaredFrameShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3SquaredFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MX430FrontRotorShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/MX430FrontRotorShape.proto</url>
		<tags>hidden,</tags>
		<parameters>field SFBool screwA FALSE\nfield SFBool screwB FALSE\nfield SFBool screwC FALSE\nfield SFBool screwD FALSE\nfield SFBool screwE FALSE\nfield SFBool screwF FALSE\nfield SFBool screwG FALSE\nfield SFBool screwH FALSE</parameters>
	</proto>
	<proto>
		<name>Darwin-op</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/Darwin-op.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotis-op2</documentation-url>
		<description>Robotis' DARwIn-OP is an open platform, miniature humanoid robot used for research, education and outreach.\nThe DARwIn-OP model contains principally:\n- the 20 DOF\n- LEDs\n- accelerometer\n- gyro\n- camera\n- realistic physics\n</description>
		<parameters>field SFVec3f translation 0 0 0.227 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;DARwIn-OP&quot; # Is `Solid.name`.\nfield SFString controller &quot;motion_player&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;robotis-op2_window&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFColor plasticColor 0.301961 0.301961 0.301961 # Is `Material.plasticColor`.\nfield SFInt32 cameraWidth 160 # Is `Camera.width`.\nfield SFInt32 cameraHeight 120 # Is `Camera.height`.\nfield SFNode jersey NULL # Extends the robot with a jersey: typically RobotisJersey.proto.\nfield SFInt32 channel 0 # Defines the channel for the `Emitter` and `Receiver` devices.\nfield SFBool backlash FALSE # Enables backlash on all joints.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the right hand slot.
#protected</parameters>
	</proto>
	<proto>
		<name>RobotisOp3ShinyMetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3ShinyMetalAppearance.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3ShiftedFrameShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3ShiftedFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3ArmFrameShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3ArmFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp2Hinge2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp2Hinge2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotis-op2</documentation-url>
		<description>ROBOTIS OP2 is an open platform, miniature humanoid robot used for research, education and outreach\nThe model contains principally:\n- the 20 DOF\n- LEDs\n- accelerometer\n- gyro\n- camera\n- realistic physics\n</description>
		<parameters>field SFVec3f translation 0 0 0.227 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;ROBOTIS OP2 Hinge2&quot; # Is `Solid.name`.\nfield SFString controller &quot;motion_player&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFColor plasticColor 0.8 0.8 0.8 # Is `Material.plasticColor`.\nfield SFInt32 cameraWidth 160 # Is `Camera.width`.\nfield SFInt32 cameraHeight 120 # Is `Camera.height`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield SFNode jersey NULL # Extends the robot with a jersey: typically RobotisJersey.proto.\nfield SFInt32 channel 0 # Defines the channel for the `Emitter` and `Receiver` devices.\nfield SFBool backlash FALSE # Enables backlash on all joints.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the right hand slot.</parameters>
	</proto>
	<proto>
		<name>RobotisOp3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>ROBOTIS OP3 is an open platform, miniature humanoid robot used for research, education and outreach.\nThe model contains principally:\n- the 20 DOF\n- LEDs\n- accelerometer\n- gyro\n- camera\n- realistic physics\nMore info here: http://support.robotis.com/en/product/robotis-op3/introduction/what_is_robotis_op3.htm\n</description>
		<parameters>field SFVec3f translation 0 0 0.279\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ROBOTIS OP3&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString contactMaterial &quot;ROBOTIS OP3 default material&quot; # Defines the `Solid.contactMaterial` for all the robot parts, except the feet and the hands.\nfield SFString footContactMaterial &quot;ROBOTIS OP3 foot material&quot; # Defines the `Solid.contactMaterial` for the feet.\nfield SFString handContactMaterial &quot;ROBOTIS OP3 finger material&quot; # Defines the `Solid.contactMaterial` for the hands.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFInt32 cameraWidth 1920 # Is `Camera.width`.\nfield SFInt32 cameraHeight 1080 # Is `Camera.height`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the righthand slot.</parameters>
	</proto>
	<proto>
		<name>RobotisOp3HeadLEDShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3HeadLEDShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3GrayPaintedMetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3GrayPaintedMetalAppearance.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3BrushedMetalAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3BrushedMetalAppearance.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3StraightFrameShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3StraightFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MX430ServoShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/MX430ServoShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3LongFrameShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3LongFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotis-op2</documentation-url>
		<description>ROBOTIS OP2 is an open platform, miniature humanoid robot used for research, education and outreach\nThe model contains principally:\n- the 20 DOF\n- LEDs\n- accelerometer\n- gyro\n- camera\n- realistic physics\n</description>
		<parameters>field SFVec3f translation 0 0 0.227 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;ROBOTIS OP2&quot; # Is `Solid.name`.\nfield SFString controller &quot;motion_player&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFColor plasticColor 0.8 0.8 0.8 # Is `Material.plasticColor`.\nfield SFInt32 cameraWidth 160 # Is `Camera.width`.\nfield SFInt32 cameraHeight 120 # Is `Camera.height`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield SFNode jersey NULL # Extends the robot with a jersey: typically RobotisJersey.proto.\nfield SFInt32 channel 0 # Defines the channel for the `Emitter` and `Receiver` devices.\nfield SFBool backlash FALSE # Enables backlash on all joints.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.\nfield MFNode headSlot [] # Extends the robot with new nodes in the head slot.\nfield MFNode leftFootSlot [] # Extends the robot with new nodes in the left foot slot.\nfield MFNode rightFootSlot [] # Extends the robot with new nodes in the right foot slot.\nfield MFNode leftHandSlot [] # Extends the robot with new nodes in the left hand slot.\nfield MFNode rightHandSlot [] # Extends the robot with new nodes in the right hand slot.</parameters>
	</proto>
	<proto>
		<name>RobotisOp3BodyShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3BodyShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RobotisOp3TriangleFrameShape</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotis/darwin-op/protos/RobotisOp3TriangleFrameShape.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>UR3e</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/universal_robots/protos/UR3e.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/universal_robots</documentation-url>
		<description>An Universal Robots UR3e robotic arm.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;UR3e&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision TRUE # Is `Robot.selfCollision`.\nfield MFNode toolSlot [] # Extend the robot with new nodes at the end of the arm.\nfield SFBool staticBase TRUE # Defines if the robot base should ba pinned to the static environment.</parameters>
	</proto>
	<proto>
		<name>UR5e</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/universal_robots/protos/UR5e.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/universal_robots</documentation-url>
		<description>An Universal Robots UR5e robotic arm.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;UR5e&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision TRUE # Is `Robot.selfCollision`.\nfield MFNode toolSlot [] # Extend the robot with new nodes at the end of the arm.\nfield SFBool staticBase TRUE # Defines if the robot base should ba pinned to the static environment.</parameters>
	</proto>
	<proto>
		<name>UR10e</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/universal_robots/protos/UR10e.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/universal_robots</documentation-url>
		<description>An Universal Robots UR10e robotic arm.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;UR10e&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision TRUE # Is `Robot.selfCollision`.\nfield MFNode toolSlot [] # Extend the robot with new nodes at the end of the arm.\nfield SFBool staticBase TRUE # Defines if the robot base should ba pinned to the static environment.</parameters>
	</proto>
	<proto>
		<name>Mantis</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/micromagic/mantis/protos/Mantis.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/mantis</documentation-url>
		<description>The Mantis robot is an hydraulic powered hexapod walking machine developed in 2009 by Matt Denton.\nA human can drive this robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Mantis&quot; # Is `Solid.name`.\nfield SFString controller &quot;mantis&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>FireBird6</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/nex/protos/FireBird6.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/firebird6</documentation-url>
		<description>NEX Robotics' Fire Bird 6 robot.\nMore information on this robot: http://www.nex-robotics.com/products/fire-bird-vi-robot/fire-bird-vi-robotic-research-platform.html\n</description>
		<parameters>field SFVec3f translation 0 0 0.125   # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0   # Is `Transform.rotation`.\nfield SFString name &quot;Fire Bird 6&quot;   # Is `Solid.name`.\nfield SFString controller &quot;fire_bird_6_obstacle_avoidance&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString remoteControl &quot;&lt;none&gt;&quot; # Is `Robot.remoteControl`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>Create</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/irobot/create/protos/Create.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/create</documentation-url>
		<description>iRobot Create is a hobbyist robot manufactured by iRobot that is based on the Roomba platform.\n</description>
		<parameters>field SFVec3f translation 0 0 0.044 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Create&quot; # Is `Solid.name`.\nfield SFString controller &quot;create_avoid_obstacles&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>CarbonFiberAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/CarbonFiberAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LUlegMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUlegMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_uleg.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RUlegMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUlegMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_uleg.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LClavMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LClavMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_clav.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PelvisMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/PelvisMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/pelvis.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LFarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LFarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_farm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LHandMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LHandMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_hand.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LHandSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LHandSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RTalusSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RTalusSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LUarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_uarm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RegularAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RegularAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LLglutSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLglutSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LFootSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LFootSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LUlegSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUlegSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RFootSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RFootSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RClavSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RClavSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LUglutSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUglutSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LLlegMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLlegMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_lleg.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LtorsoSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LtorsoSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>UtorsoMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/UtorsoMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/utorso.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LScapSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LScapSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RLugMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLugMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_lug.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RLarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_larm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RUarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RLlegSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLlegSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LTalusSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LTalusSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>MtorsoSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/MtorsoSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RClavMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RClavMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_clav.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LLglutMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLglutMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_lglut.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RFootMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RFootMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_foot.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LLarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_larm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MtorsoMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/MtorsoMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/mtorso.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LFarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LFarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>DarkAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/DarkAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LClavSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LClavSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RUglutMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUglutMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_uglut.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LLarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RScapMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RScapMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_scap.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LFootMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LFootMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_foot.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RLglutSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLglutSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RUlegSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUlegSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LUarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LUglutMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LUglutMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_uglut.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RFarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RFarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RFarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RFarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_farm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LScapMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LScapMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_scap.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RUglutSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUglutSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>LTalusMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LTalusMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/l_talus.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>PelvisSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/PelvisSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RHandSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RHandSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>UtorsoSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/UtorsoSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RHandMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RHandMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_hand.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RScapSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RScapSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RLglutMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLglutMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_lglut.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>HeadMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/HeadMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/head.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RLlegMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLlegMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_lleg.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LtorsoMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LtorsoMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/ltorso.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LLlegSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/LLlegSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>RLarmSolid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RLarmSolid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>Atlas</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/Atlas.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/atlas</documentation-url>
		<description>The &quot;Atlas&quot; is a humanoid robot developed by Boston Dynamics with funding and oversight from DARPA.\nExtracted from: https://bitbucket.org/osrf/drcsim/src/c69ecab26a55/ros/atlas_description/urdf/atlas_simple_shapes.urdf\n</description>
		<parameters>field SFVec3f translation 0 0 1 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Atlas&quot; # Is `Solid.name`.\nfield SFString controller &quot;hello_world_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode pelvisSlot [] # Extends the robot with new nodes in the pelvis slot.</parameters>
	</proto>
	<proto>
		<name>RTalusMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RTalusMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_talus.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RUarmMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/atlas/protos/RUarmMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Extracted from:\nhttps://bitbucket.org/osrf/drcsim/src/a43aef617288746c30be76f58afe23a4c3108b5f/ros/atlas_description/meshes/r_uarm.dae\n</description>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>SpotLeg</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/spot/protos/SpotLeg.proto</url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;leg&quot; # Is `Solid.name`.\nfield SFBool left FALSE # Define if right or left leg.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Spot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/boston_dynamics/spot/protos/Spot.proto</url>
		<license>Creative Commons 4.0</license>
		<license-url>https://creativecommons.org/licenses/by/4.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/spot</documentation-url>
		<description>The &quot;Spot&quot; is a dog robot developed by Boston Dynamics.\nOriginal model by Greg McKechnie.\n</description>
		<parameters>field SFVec3f translation 0 0 0.624 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Spot&quot; # Is `Solid.name`.\nfield SFString model &quot;Boston Dynamics - Spot&quot; # Is `Robot.model`.\nfield SFString controller &quot;spot_moving_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield MFNode frontExtension [] # Extends the robot with new nodes in the front shoulder part.\nfield MFNode middleExtension [] # Extends the robot with new nodes in the middle back part.\nfield MFNode rearExtension [] # Extends the robot with new nodes in the rear shoulder part.</parameters>
	</proto>
	<proto>
		<name>JetBotRaspberryPiCamera</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/nvidia/jetbot/protos/JetBotRaspberryPiCamera.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/jetbot</documentation-url>
		<description>Raspberry Camera v2 used by JetBot robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;camera&quot; # Is `Camera.name`.\nfield SFFloat fieldOfView 2.79253 # Is `Camera.fieldOfView`.\nfield SFInt32 width 1280 # Is `Camera.width`.\nfield SFInt32 height 720 # Is `Camera.height`.\nfield SFFloat near 0.01 # Is `Camera.near`.\nfield SFFloat far 1.0 # Is `Camera.far`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>JetBot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/nvidia/jetbot/protos/JetBot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/jetbot</documentation-url>
		<description>JetBot open source robot based on NVIDIA Jetson Nano.\nMore info here: https://jetbot.org\nSome of the meshes are taken from the original robot GitHub repository: https://github.com/NVIDIA-AI-IOT/jetbot\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;JetBot&quot; # Is `Solid.name`.\nfield SFString controller &quot;jetbot_basic_motion&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool chassis TRUE # Show robot chassis.\nfield SFColor chassis_color 0.571 0.817 0.479 # Color of the chassis.\nfield SFNode cameraSlot JetBotRaspberryPiCamera {
 rotation 0 1 0 0.316799
 } # Extends the robot with a camera on the front.\nfield MFNode extensionSlot [] # Extends the robot with new nodes.</parameters>
	</proto>
	<proto>
		<name>Rosbot</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/husarion/rosbot/protos/Rosbot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://cyberbotics.com/doc/guide/rosbot</documentation-url>
		<description>A ROS powered 4x4 drive autonomous mobile robot platform equipped with various sensors.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Rosbot&quot; # Is `Robot.name`.\nfield SFString controller &quot;rosbot&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield MFNode cameraSlot [ Astra { name &quot;camera&quot; } ] # Extends the robot with an Astra RGBD camera.\nfield MFNode lidarSlot [ RpLidarA2 { name &quot;lidar&quot; } ] # Extends the robot with a RpLidar A2 lidar.</parameters>
	</proto>
	<proto>
		<name>Portal</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/a4/portal/protos/Portal.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/portal</documentation-url>
		<description>Portal PICAXE-28X2 (A4 TECHNOLOGIE)\nThis small portal model is used for education with PICAXE programming tools\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Portal&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Irb4600-40</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/abb/irb/protos/Irb4600-40.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/irb4600-40</documentation-url>
		<description>The &quot;IRB 4600/40&quot; is a 6 DOF arm developed by ABB: https://new.abb.com/products/robotics/industrial-robots/irb-4600\nIt has a payload of 40kg.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;IRB 4600/40&quot; # Is `Solid.name`.\nfield SFString controller &quot;inverse_kinematics&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFColor color 1 0.45 0 # Is `PBRAppearance.baseColor`.\nfield MFNode handSlot [] # Extends the arm with new nodes in the hand slot.\nfield SFBool staticBase FALSE # Defines if the robot base should be pinned to the static environment.</parameters>
	</proto>
	<proto>
		<name>Mir100</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mir/mir100/protos/Mir100.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/mir100</documentation-url>
		<description>Designed by Mobile Industrial Robotics (MIR), MiR100 is a six-wheeled robot (4 caster wheels and 2 regular ones at the\ncenter). Used in industrial environments, it can carry a payload of up to 100kg.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Mir100&quot; # Is `Robot.name`.\nfield SFString controller &quot;keyboard_control&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFColor color 0 0.9 1 # Middle section color of the robot.\nfield MFNode frontLidarSlot [] # Extends the robot with a lidar sensor at the front.\nfield MFNode backLidarSlot [] # Extends the robot with a lidar sensor at the back.\nfield MFNode bodySlot [] # Extends the robot with new nodes located in the body.</parameters>
	</proto>
	<proto>
		<name>Mir100UltrasonicSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mir/mir100/protos/Mir100UltrasonicSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of a generic ultrasonic sensor used for the MiR100 robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Mir100UltrasonicSensor&quot;\nfield MFVec3f lookupTable [0.01 1000 0, 0.35 0 0] # Defines the `lookupTable` field of the `DistanceSensor`.\nfield SFBool enablePhysics TRUE # Defines whether the sensor should have physics.</parameters>
	</proto>
	<proto>
		<name>Sojourner</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/nasa/protos/Sojourner.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/sojourner</documentation-url>
		<description>Sojourner is the NASA Pathfinder robotic rover that landed on 1997 in the Ares Vallis region, and explored Mars for around three months.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Sojourner&quot; # Is `Solid.name`.\nfield SFString controller &quot;sojourner&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>Pr2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/clearpath/pr2/protos/Pr2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/pr2</documentation-url>
		<description>The Clearpath's PR2 robot is a mobile manipulation platform.\nThe robot is mounted on four directional wheels, had two articulated arms with grippers, an articulated body and head.\nIt is mounted by several sensors including cameras.\nExtracted from: pr2.urdf\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;PR2&quot; # Is `Solid.name`.\nfield SFString controller &quot;pr2_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield MFNode baseSlot [] # Extends the robot with new nodes in the base slot.</parameters>
	</proto>
	<proto>
		<name>Moose</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/clearpath/moose/protos/Moose.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/moose</documentation-url>
		<description>The Clearpath Moose robot is a large all-terrain unmanned ground vehicle.\nIt can handle tough environments with its rugged build, low ground pressure, and 8x8 traction tires, which allow effortless mobility through soft soils, vegetation, thick muds, and steep grades.\nWith a large payload mounting area and accessible power and communication ports, Moose can be easily customized with sensors, manipulators and other payloads to accommodate a wide variety of robotics applications in mining, agriculture, construction and environmental monitoring.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;moose&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;none&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFColor color 0.8 0.5 0.1 # Set the bumper color.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>MooseWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/clearpath/moose/protos/MooseWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<slot-type>vehicle wheel</slot-type>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;moose wheel&quot;</parameters>
	</proto>
	<proto>
		<name>Fabtino</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/rec/fabtino/protos/Fabtino.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/fabtino</documentation-url>
		<description>Designed by Robotics Equipment Corporation (REC) GmbH, Fabtino is a four-wheeled (mecanum) robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0.0613 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Fabtino&quot; # Is `Robot.name`.\nfield SFString controller &quot;keyboard_control&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode frontLidarSlot [] # Extends the robot with a front lidar sensor.\nfield MFNode backLidarSlot [] # Extends the robot with a back lidar sensor.\nfield MFNode bodySlot [] # Extends the robot with new nodes (such as the Robotino3Platform for example).</parameters>
	</proto>
	<proto>
		<name>Mavic2Pro</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/dji/mavic/protos/Mavic2Pro.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://cyberbotics.com/doc/guide/mavic-2-pro</documentation-url>
		<description>A quadcopter drone mounted with a motorized camera by the DJI company.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Mavic 2 PRO&quot; # Is `Solid.name`.\nfield SFString controller &quot;mavic2pro&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFFloat battery [] # Is `Robot.battery`.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the turret slot.\nfield MFNode cameraSlot [ Camera { width 400 height 240 } ] # Extends the robot with a Camera.</parameters>
	</proto>
	<proto>
		<name>Thymio2</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/surveyor</documentation-url>
		<description>Thymio II mobile robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Thymio II&quot; # Is `Solid.name`.\nfield SFString controller &quot;thymio2_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFString contactMaterial &quot;thymio body&quot; # Defines the `Solid.contactMaterial` for the body.\nfield SFBool castLight TRUE # Defines whether OpenGL lights are cerated for each LEDs.\nfield MFNode bodySlot [] # Extends the robot with new nodes in the body slot.</parameters>
	</proto>
	<proto>
		<name>Thymio2Ball</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2Ball.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Insert your Thymio II above this ball\ncf. https://aseba.wikidot.com/fr:thymioballeinverse\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Thymio II ball&quot;</parameters>
	</proto>
	<proto>
		<name>Thymio2LED</name>
		<base-type>LED</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2LED.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;led&quot;\nfield MFVec3f translations [ 0 0 0 ]\nfield MFRotation rotations [ 0 0 1 0 ]\nfield MFString textureUrls &quot;textures/thymio2_radial_flare.png&quot;\nfield MFVec2f sizes [ 0.01 0.01 ]\nfield SFFloat level 32 # 0: rgb, 1: boolean, 2: layers.\nfield SFColor color 1 0 0\nfield SFVec3f lightPosition -1 -1 -1 # default = no light.</parameters>
	</proto>
	<proto>
		<name>Thymio2DistanceSensor</name>
		<base-type>DistanceSensor</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2DistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ds&quot;\nfield SFBool isGroundSensor FALSE</parameters>
	</proto>
	<proto>
		<name>Thymio2Pen</name>
		<base-type>Pen</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2Pen.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Pen designed to be inserted directly into the Thymio II's bodySlot field\ncf. https://aseba.wikidot.com/fr:thymiodrawing\n</description>
		<parameters>field SFString name &quot;Thymio II pen&quot;\nfield SFFloat leadSize 0.003\nfield SFColor inkColor 0 0 0</parameters>
	</proto>
	<proto>
		<name>Thymio2SecondaryIndexedFaceSet</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2SecondaryIndexedFaceSet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Thymio2WheelIndexedFaceSet</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2WheelIndexedFaceSet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Thymio2MainIndexedFaceSet</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2MainIndexedFaceSet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Thymio2TireIndexedFaceSet</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/mobsya/thymio/protos/Thymio2TireIndexedFaceSet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>SurveyorSrv1</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/surveyor/protos/SurveyorSrv1.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/surveyor</documentation-url>
		<description>The Surveyor's SRV-1 is a robot with two caterpillar tracks designed for research, education, and exploration.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;SurveyorSrv1&quot; # Is `Solid.name`.\nfield SFString controller &quot;surveyor&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode extensionSlot [] # Extends the robot with new nodes in the extension slot.</parameters>
	</proto>
	<proto>
		<name>SummitXlSteel</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/robotnik/summit_xl_steel/protos/SummitXlSteel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/summit-xl-steel</documentation-url>
		<description>Designed by Robotnik, Summit-XL Steel is a four-wheeled (mecanum) robot used for logistics and indoor transport.\nIt is well-suited for industries, as its design enables it to carry a payload of up to 250 kg.\n</description>
		<parameters>field SFVec3f translation 0 0 0.118 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Summit-XL Steel&quot; # Is `Robot.name`.\nfield SFString controller &quot;keyboard_control&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode frontLidarSlot [] # Extends the robot with a front lidar sensor.\nfield MFNode backLidarSlot [] # Extends the robot with a back lidar sensor.\nfield MFNode bodySlot [] # Extends the robot with new nodes (such as the Robotino3Platform for example).</parameters>
	</proto>
	<proto>
		<name>TinkerbotsFinger</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsFinger.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: finger.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;finger&quot; # Is `Solid.name`.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsDistanceSensor</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsDistanceSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots distance sensor block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;distance sensor&quot; # Is `Solid.name`.\nfield SFInt32 numberOfRays 1 # Is `DistanceSensor.numberOfRays`.\nfield SFFloat aperture 1.5708 # Is `DistanceSensor.aperture`.\nfield SFNode upSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode upASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode leftASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode rightASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode backASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backDSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots wheel.\n</description>
		<slot-type>lego cross-</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;wheel&quot; # Is `Solid.name`.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsPlasticAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsPlasticAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFString{&quot;yellow&quot;, &quot;red&quot;, &quot;blue&quot;, &quot;black&quot;, &quot;grey&quot;} color &quot;yellow&quot;\nfield MFString occlusionMapUrl []</parameters>
	</proto>
	<proto>
		<name>TinkerbotsPivot</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsPivot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots pivot block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;pivot&quot; # Is `Solid.name`.\nfield SFNode slot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode ASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode BSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode CSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode DSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsMotor</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsMotor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots motor block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;motor&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode upASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode leftASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode rightASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubieBoxWithRoundSlots</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubieBoxWithRoundSlots.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: box with round slots.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;box with round slots cubie&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode axisSlot NULL # Mounted on an HingeJoint. Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCube</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCube.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cube block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode upASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode leftASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode rightASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode frontASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode backASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backDSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubiePyramid</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubiePyramid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: pyramid with female slots.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;pyramid cubie&quot; # Is `Solid.name`.\nfield SFString{&quot;yellow&quot;, &quot;blue&quot;} color &quot;yellow&quot; # Cubie color.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubieBoxWithCrossSlots</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubieBoxWithCrossSlots.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: box with cross slots.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;box with cross slots cubie&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsBrickAdapter</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsBrickAdapter.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots brick adapter.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;brick adapter&quot; # Is `Solid.name`.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubieMaleCube</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubieMaleCube.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: cube with female cross slots and one male cross slot.\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;male cube cubie&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;lego cross+&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsGrabber</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsGrabber.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots grabber block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;grabber&quot; # Is `Solid.name`.\nfield SFNode fingerASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode fingerBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode fingerCSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsBase</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsBase.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots base block.\nhttps://www.tinkerbots.com\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;Tinkerbots&quot; # Is `Solid.name`.\nfield SFString controller &quot;tinkerbots_demo&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;generic&gt;&quot; # Is `Robot.window`.\nfield SFString customData &quot;&quot; # Is `Robot.customData`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield SFBool selfCollision FALSE # Is `Robot.selfCollision`.\nfield SFNode upSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode upASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode downSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode downASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode downBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode downCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode downDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode leftASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode rightASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode backASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backDSlot NULL # Type: &quot;lego cross-&quot;.\nfield MFNode extensionSlot [] # Extends the robot with new nodes.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsLEDAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsLEDAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TinkerbotsAxle</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsAxle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots axle.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;axle&quot; # Is `Solid.name`.\nfield SFNode endSlot NULL # Slot at the opposite side of the axle. Type: &quot;lego cross+&quot;.\nfield SFString{&quot;2.2cm&quot;, &quot;7cm&quot;} length &quot;2.2cm&quot; # Defines the length of the axle in centimeters.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubieTriangle</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubieTriangle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: triangle with a female slot.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;triangle cubie&quot; # Is `Solid.name`.\nfield SFString{&quot;yellow&quot;, &quot;blue&quot;} color &quot;yellow&quot; # Cubie color.\nfield SFNode slot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsCubieFemaleCube</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsCubieFemaleCube.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots cubie: cube with female cross slots.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>lego cross+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;female cube cubie&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode frontSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsLightSensor</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsLightSensor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots light sensor block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;distance sensor&quot; # Is `Solid.name`.\nfield SFNode upSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode upASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode upDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode leftASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode leftDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode rightASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode rightDSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backSlot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode backASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backBSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backCSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode backDSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>TinkerbotsTwister</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/kinematics/tinkerbots/protos/TinkerbotsTwister.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tinkerbots twister block.\nhttps://www.tinkerbots.com\n</description>
		<slot-type>tinkerbots+</slot-type>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;twister&quot; # Is `Solid.name`.\nfield SFNode slot NULL # Type: &quot;tinkerbots-&quot;.\nfield SFNode ASlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode BSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode CSlot NULL # Type: &quot;lego cross-&quot;.\nfield SFNode DSlot NULL # Type: &quot;lego cross-&quot;.</parameters>
	</proto>
	<proto>
		<name>Robotino3WebcamMountingSupport</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3WebcamMountingSupport.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots of a mounting support for the robot Robotino 3 from Festo and a webcam.\nIt is a feature for Robotino 3 to fullfil your requirement.\nUse it with the &quot;cameraSlot&quot; field of the Robotino 3 robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Webcam mounting support for Robotino 3&quot;\nfield SFString model &quot;Festo - Webcam mounting support&quot;\nfield MFNode extensionSlot [] # Extends the mounting support with an object.</parameters>
	</proto>
	<proto>
		<name>Robotino3Webcam</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3Webcam.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots of a webcam for the robot Robotino 3 from Festo.\nIt is a feature for Robotino 3 to fullfil your requirement.\nThe model is based on the Logitech® HD Pro Webcam C920.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Webcam for Robotino 3&quot;\nfield SFString model &quot;Festo - Robotino's webcam&quot;\nfield SFInt32 width 640\nfield SFInt32 height 480</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Robotino3Wheel</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3Wheel.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotino3</documentation-url>
		<description>A wheel for Robotino3.proto\n</description>
		<tags>hidden</tags>
		<parameters>field SFFloat number 0</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Robotino3HokuyoMountingSupport</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3HokuyoMountingSupport.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots of a mounting support for the robot Robotino 3 from Festo and a Hokuyo's lidar.\nIt is a feature for Robotino 3 to fullfil your requirement.\nUse it with the &quot;topSlot&quot; or &quot;middleSlot&quot; field of the Robotino 3 robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Hokuyo mounting support for Robotino 3&quot;\nfield SFString model &quot;Festo - Hokuyo mounting support&quot;\nfield MFNode extensionSlot [] # Extends the mounting support with an object.</parameters>
	</proto>
	<proto>
		<name>Robotino3Platform</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3Platform.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots of a platform for the robot Robotino 3 from Festo.\nIt is a feature for Robotino 3 to fullfil your requirement.\nUse it with the &quot;bodySlot&quot; field of the Robotino 3 robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Platform for Robotino 3&quot; # Is `Solid.name`.\nfield SFString model &quot;Festo - Robotino's platform&quot; # Is `Solid.model`.\nfield MFNode extension [] # Extends the platform.\nfield SFFloat height 0.530447 # Height of the platform.</parameters>
	</proto>
	<proto>
		<name>Robotino3SickMountingSupport</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3SickMountingSupport.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<description>This is a PROTO file for Webots of a mounting support for the robot Robotino 3 from Festo and a Sick's lidar.\nIt is a feature for Robotino 3 to fullfil your requirement.\nUse it with the &quot;bottomSlot&quot; field of the Robotino 3 robot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Sick mounting support for Robotino 3&quot;\nfield SFString model &quot;Festo - Sick mounting support&quot;\nfield MFNode extensionSlot [] # Extends the mounting support with an object.</parameters>
	</proto>
	<proto>
		<name>Robotino3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/robots/festo/robotino3/protos/Robotino3.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0.</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/guide/robotino3</documentation-url>
		<description>This is a PROTO file for Webots for the robot Robotino 3 from Festo.\nchanged by Thomas Feldmeier 2020, www.servicerobotik-ulm.de\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Robotino 3&quot;\nfield SFString model &quot;Festo - Robotino 3&quot;\nfield SFString controller &quot;robotino3&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool selfCollision FALSE # Enables/disables the detection of collisions within the robot.\nfield MFNode topSlot [] # Extends the robot.\nfield MFNode bodySlot [] # Extends the robot with a platform.\nfield MFNode cameraSlot [] # Extends the robot with a camera.\nfield MFNode middleSlot [] # Extends the robot.\nfield MFNode bottomSlot [] # Extends the robot.\nfield SFString{&quot;SharpGP2D120&quot;, &quot;SharpGP2Y0A41SK0F&quot;, &quot;SharpGP2Y0A02YK0F&quot;} infraredSensorModel &quot;SharpGP2Y0A41SK0F&quot; # Extends the robot with infrared sensors.</parameters>
	</proto>
	<proto>
		<name>CorrodedMetal</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CorrodedMetal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A corroded metal material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Leather</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Leather.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A leather material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;dark&quot;, &quot;light&quot;} tone &quot;dark&quot; # Defines the tone of the leather.\nfield SFString{&quot;dollaro&quot;, &quot;grain&quot;} type &quot;dollaro&quot; # Defines the type of the leather.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ScuffedPlastic</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ScuffedPlastic.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A worn scuffed plastic material. The color can be selected using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the plastic's color.\nfield SFNode textureTransform TextureTransform { scale 4 4 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Cubemap node.</parameters>
	</proto>
	<proto>
		<name>CorrugatedPlates</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CorrugatedPlates.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A corrugated plates material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ElectricConduit</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ElectricConduit.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An electric conduit material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RoughPolymer</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RoughPolymer.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A rough polymer material.\n</description>
		<parameters>field SFColor baseColor 1 1 1 # Defines the base color of the material.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>MetalPipePaint</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/MetalPipePaint.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A worn paint layer on a metal surface. Useful with the `PipeSection` PROTO or any painted industrial surfaces.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Copper</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Copper.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A copper material.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>PerforatedMetal</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/PerforatedMetal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A perforated metal material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RoughConcrete</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RoughConcrete.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A rough concrete material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>SandyGround</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/SandyGround.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A sandy ground material. The color can be selected using the `colorOverride` field. Useful with the UnevenTerrain PROTO.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform TextureTransform { scale 4 4 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>PorcelainChevronTiles</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/PorcelainChevronTiles.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A porcelain chevron tiles material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Asphalt</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Asphalt.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An asphalt material. The color can be overridden using the `colorOverride` field. Useful with the `Road` PROTO.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>MattePaint</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/MattePaint.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A matte paint material. The color can be selected in the `baseColor` field.\n</description>
		<parameters>field SFColor baseColor 1 1 1 # Defines the paint's color.\nfield SFNode textureTransform TextureTransform { scale 10 10 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ThreadMetalPlate</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ThreadMetalPlate.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A worn paint layer on a metal surface.\nThe type of metal surface can be set using the `type` field.\n</description>
		<parameters>field SFString{&quot;oval&quot;, &quot;square&quot;} type &quot;oval&quot; # Defines the motif type on the material.\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>SolarCell</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/SolarCell.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A solar panel cell material.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>CarpetFibers</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CarpetFibers.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A woolen carpet material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;wooly&quot;, &quot;synthetic&quot;, &quot;pattern&quot;} type &quot;wooly&quot; # Defines the carpet type.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>MarbleTiles</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/MarbleTiles.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A marble tiles material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ShinyLeather</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ShinyLeather.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A shiny leather material. The color can be selected using the `colorOverride` field. Useful with any of the vehicle PROTOs.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the leather's color.\nfield SFNode textureTransform TextureTransform { scale 4 4 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Plastic</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Plastic.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A plastic material containing several types.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;rough&quot;, &quot;padded&quot;}
 type &quot;rough&quot; # Defines the plastic type.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>DamascusSteel</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/DamascusSteel.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A damascus steel material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Pavement</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Pavement.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A pavement material.\nThe type of pavement can be set using the `type` field.\nThe color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFString{&quot;black stone&quot;, &quot;braun stone&quot;, &quot;braun square stone&quot;, &quot;grid&quot;, &quot;slate&quot;, &quot;tiles&quot;}
 type &quot;braun square stone&quot; # Defines the pavement type.\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>BlanketFabric</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/BlanketFabric.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A blanket fabric material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Plaster</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Plaster.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A plaster material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RoughOak</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RoughOak.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A rough oak material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Roughcast</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Roughcast.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A rough plaster material. Useful with the `Wall` PROTO.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Soil</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Soil.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A soil material.\n</description>
		<parameters>field SFString{&quot;braun&quot;, &quot;grey&quot;} type &quot;braun&quot; # Defines the soil type.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFColor color 1 1 1 # Is `PBRAppearance.baseColor`.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>TireRubber</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/TireRubber.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A tire rubber material.\nIt can be a car tire or a bike tire.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.\nfield SFString{&quot;bike&quot;, &quot;car&quot;} type &quot;car&quot; # Defines the type of tire.</parameters>
	</proto>
	<proto>
		<name>StonePavement</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/StonePavement.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Backward compatibility with the deprecated 'StonePavement' PROTO (deprecated in Webots R2020a-rev2)\nA stone pavement material.\n</description>
		<tags>hidden</tags>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;recent&quot;, &quot;old square&quot;} type &quot;recent&quot; # Defines the pavement type.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>BrushedSteel</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/BrushedSteel.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A brushed steel material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>SlatePavement</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/SlatePavement.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Backward compatibility with the deprecated 'SlatePavement' PROTO (deprecated in Webots R2020a-rev2)\nA slate pavement material.\n</description>
		<tags>hidden</tags>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>FormedConcrete</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/FormedConcrete.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A formed concrete material.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Fabric</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Fabric.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An fabric material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the default color multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>BrushedAluminium</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/BrushedAluminium.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A brushed aluminum material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>CorrugatedPvc</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CorrugatedPvc.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A corrugated PVC material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>LedStrip</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/LedStrip.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A led strip material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.\nfield SFFloat emissiveIntensity 1 # Defines the intensity of the leds.</parameters>
	</proto>
	<proto>
		<name>RustyMetal</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RustyMetal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An old battered steel material.\nThe color can be overridden using the `colorOverride` field and the amount of rust can be set using the `rustLevel` field.\n</description>
		<parameters>field SFInt32{1, 2} rustLevel 1 # Defines how much the metal is rusted.\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ScratchedPaint</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ScratchedPaint.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A scratched paint material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.\nfield SFBool metalScratch TRUE # Defines if the scratches should uncover metal or not.</parameters>
	</proto>
	<proto>
		<name>WornBurlap</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/WornBurlap.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A worn burlap material. The color can be selected using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the burlap's color.\nfield SFNode textureTransform TextureTransform { scale 4 4 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Cubemap node.</parameters>
	</proto>
	<proto>
		<name>Pcb</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Pcb.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A PCB material.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>BakelitePlastic</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/BakelitePlastic.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A bakelite plastic.\n</description>
		<parameters>field SFString{&quot;red&quot;, &quot;braun&quot;} color &quot;red&quot; # Defines the color of the plastic.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>VarnishedPine</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/VarnishedPine.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A pine wood material covered with a layer of varnish. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 0.8039 0.6745 0.5764 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Marble</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Marble.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A beige marble material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Cardboard</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Cardboard.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A cardboard material containing several types that can make a box if combined.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;top&quot;, &quot;bottom&quot;, &quot;left&quot;, &quot;right&quot;, &quot;front&quot;, &quot;back&quot;}
 type &quot;back&quot; # Defines the cardboard face.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>OldSteel</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/OldSteel.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An old battered steel material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>CorrugatedMetal</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CorrugatedMetal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A corrugated metal material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>HammeredCopper</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/HammeredCopper.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An hammered copper steel material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ChequeredParquetry</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ChequeredParquetry.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Backward compatibility with the deprecated 'ChequeredParquetry' PROTO (deprecated in Webots R2020a-rev2)\nA wooden material in a chequered pattern covered with a layer of varnish. Useful with the `Floor` PROTO.\n</description>
		<tags>hidden</tags>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RedBricks</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RedBricks.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A tiled brick material. Useful with the `Wall` PROTO.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Parquetry</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Parquetry.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A parquetry material.\nThe type of parquetry can be set using the `type` field.\nThe color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFString{&quot;chequered&quot;, &quot;dark strip&quot;, &quot;light strip&quot;, &quot;mosaic&quot;}
 type &quot;mosaic&quot; # Defines the parquetry type.\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>OldPlywood</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/OldPlywood.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An old plywood material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>PaintedWood</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/PaintedWood.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A painted wood material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>DarkParquetry</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/DarkParquetry.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Backward compatibility with the deprecated 'DarkParquetry' PROTO (deprecated in Webots R2020a-rev2)\nA dark parquetry material.\n</description>
		<tags>hidden</tags>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>CementTiles</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/CementTiles.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A cement tiles material.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>WireFence</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/WireFence.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A wire fence material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>MetalStainlessSteelCable</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/MetalStainlessSteelCable.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A stainless steel cable appearance.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Grass</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Grass.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A grass material containing several grass types.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFString{&quot;maintained&quot;, &quot;artificial&quot;, &quot;artificial_white&quot;, &quot;prickly&quot;, &quot;mossy&quot;}
 type &quot;maintained&quot; # Defines the grass type.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ReflectiveSurface</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ReflectiveSurface.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A reflective surface material.\n</description>
		<parameters>field SFFloat metalness 0.5\nfield SFColor emissiveColor 0 0 0\nfield SFFloat emissiveIntensity 1\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFBool useBaseColorMap TRUE # Defines wheather the base color texture should be used or not.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>GalvanizedMetal</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/GalvanizedMetal.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A galvanized metal material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Sand</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Sand.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A sand material.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>FlexibleAluminiumDuct</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/FlexibleAluminiumDuct.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A flexible aluminium duct material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>DryMud</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/DryMud.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A dry mud material with cracks.\n</description>
		<parameters>field SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>Rubber</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/Rubber.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A rubber material.\nThe type of rubber can be set using the `type` field.\n</description>
		<parameters>field SFString{&quot;flat&quot;, &quot;dotted&quot;} type &quot;flat&quot; # Defines the rubber type.\nfield SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>GlossyPaint</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/GlossyPaint.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A glossy paint material. The color can be selected in the `baseColor` field.\n</description>
		<parameters>field SFColor baseColor 1 1 1 # Defines the paint's color.\nfield SFNode textureTransform TextureTransform { scale 10 10 } # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>ScrewThread</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/ScrewThread.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A screw thread material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>SquarePavement</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/SquarePavement.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Backward compatibility with the deprecated 'SquarePavement' PROTO (deprecated in Webots R2020a-rev2)\nA square pavement material.\nThe color can be overridden using the `colorOverride` field.\n</description>
		<tags>hidden</tags>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>OsbWood</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/OsbWood.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>An OSB wood material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RoughPine</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/appearances/protos/RoughPine.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A pine wood material. The color can be overridden using the `colorOverride` field.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.\nfield SFNode textureTransform NULL # Defines an optional 2d texture transform.\nfield SFFloat IBLStrength 1 # Defines the strength of ambient lighting from the Background node.</parameters>
	</proto>
	<proto>
		<name>RangeRoverSportSVRWindowsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRWindowsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRRightIndicatorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRRightIndicatorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRLeftMirrorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRLeftMirrorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRCoachworkSecondaryMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRCoachworkSecondaryMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRLeftIndicatorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRLeftIndicatorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRCoachworkPrimaryMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRCoachworkPrimaryMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVR</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVR.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of a Range Rover Sport SVR 2015\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.0 0.25 0.65\nfield SFColor secondaryColor 0.1 0.1 0.1\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString engineSound &quot;sounds/engine.wav&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool frontSpotLights FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>RangeRoverSportSVRSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of the Range Rover Sport SVR 2015 to be moved with a Supervisor.\n</description>
		<parameters>field SFVec3f translation 0 0.4 0\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.0 0.25 0.65\nfield SFColor secondaryColor 0.1 0.1 0.1\nfield MFColor recognitionColors [ 0.0 0.25 0.65, 0.1 0.1 0.1 ]\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>RangeRoverSportSVRAntifogLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRAntifogLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRBrakingLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRBrakingLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRCoachworkDetailsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRCoachworkDetailsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRFrontLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRFrontLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRRightMirrorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRRightMirrorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRBottomMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRBottomMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>RangeRoverSportSVRRearLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/range_rover/RangeRoverSportSVRRearLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MercedesBenzSprinterSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/mercedes_benz/MercedesBenzSprinterSimple.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Simple kinematic model of the Mercedes-Benz Sprinter to be moved with a Supervisor.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.98 0 0.1\nfield MFColor recognitionColors [ 0.98 0 0.1 ]\nfield SFString name &quot;Mercedes-Benz Sprinter&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>MercedesBenzSprinterInterior</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/mercedes_benz/MercedesBenzSprinterInterior.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MercedesBenzSprinter</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/mercedes_benz/MercedesBenzSprinter.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of a Mercedes-Benz Sprinter.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4445\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.98 0 0.1\nfield SFString name &quot;Mercedes-Benz Sprinter&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool interior FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>MercedesBenzSprinterLights</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/mercedes_benz/MercedesBenzSprinterLights.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MercedesBenzSprinterLogos</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/mercedes_benz/MercedesBenzSprinterLogos.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TeslaModel3Simple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3Simple.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>Simple kinematic model of the Tesla model 3 to be moved with a Supervisor.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 1 0 0\nfield MFColor recognitionColors [ 1 0 0 ]\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>TeslaModel3Wheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3Wheel.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<slot-type>vehicle wheel</slot-type>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wheel&quot;\nfield SFFloat tireRadius 0.36\nfield SFBool boundingObject TRUE\nfield SFNode physics NULL</parameters>
	</proto>
	<proto>
		<name>TeslaModel3Coachwork</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3Coachwork.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 1 0 0</parameters>
	</proto>
	<proto>
		<name>TeslaModel3Windows</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3Windows.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TeslaModel3FrontLights</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3FrontLights.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TeslaModel3Details</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3Details.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TeslaModel3</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/tesla/TeslaModel3.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of a Tesla model 3 car using the Car proto as a base.\nThe vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.\nWeight, transmission and motor properties are calibrated according to the 'Long Range Battery AWD Performance' version.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 1 1 1\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString engineSound &quot;&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool frontSpotLights FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>ToyotaPriusWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of the Toyota Prius wheels using the generic VehicleWheel proto\nincluding physic properties and textures\nThe contactMaterial is &quot;ToyotaPriusWheels&quot;\nSize: 195/65 R15\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;Toyota Prius wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>ToyotaPriusFrontLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusFrontLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>ToyotaPrius</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPrius.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of an Toyota Prius car using the Car proto as a base.\nThe contactMaterial of the wheels is &quot;ToyotaPriusWheels&quot;\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.1 0.15 0.18\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString engineSound &quot;sounds/engine.wav&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool frontSpotLights FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>ToyotaPriusRearLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusRearLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>ToyotaPriusAntiFogLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusAntiFogLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>ToyotaPriusSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of the Toyota Prius to be moved with a Supervisor.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.1 0.15 0.18\nfield MFColor recognitionColors [ 0.1 0.15 0.18 ]\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>ToyotaPriusMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.1 0.15 0.18\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;</parameters>
	</proto>
	<proto>
		<name>ToyotaPriusRightIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusRightIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>ToyotaPriusLeftIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/toyota/ToyotaPriusLeftIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of the Citroën C-Zero to be moved with a Supervisor.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.85 0.85 0.05\nfield MFColor recognitionColors [ 0.85 0.85 0.05 ]\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>CitroenCZeroMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.85 0.85 0.05\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;</parameters>
	</proto>
	<proto>
		<name>CitroenCZeroRightIndicator</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroRightIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroTailLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroTailLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroFogLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroFogLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroHeadLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroHeadLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroLeftIndicator</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroLeftIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZero</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZero.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of a Citroën C-Zero car using the Car proto as a base.\nThe vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.\nThe contactMaterial of the wheels is &quot;CitroenCZeroWheels&quot;\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.85 0.85 0.05\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString engineSound &quot;&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool frontSpotLights FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>CitroenCZeroFrontWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroFrontWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of the Citroën C-Zero front wheels using the generic VehicleWheel proto\nincluding physic properties and textures\nThe contactMaterial is &quot;CitroenCZeroWheels&quot;\nSize: 145/65/R15\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;Citroen C-Zero front wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>CitroenCZeroBrakeLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroBrakeLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>CitroenCZeroRearWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/citroen/CitroenCZeroRearWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of the Citroën C-Zero rear wheels using the generic VehicleWheel proto\nincluding physic properties and textures\nThe contactMaterial is &quot;CitroenCZeroWheels&quot;\nSize: 175/55/R15\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;Citroen C-Zero rear wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>MotorbikeSimple</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#twowheelersimple</documentation-url>
		<description>Simple non-controllable model of a generic motorbike without physics properties\n</description>
		<parameters>field SFVec3f translation 0 0 0.25\nfield SFRotation rotation 0 0 1 0\nfield SFColor primaryColor 0.153 0.004 0.004\nfield SFColor secondaryColor 0.647 0.647 0.647\nfield MFColor recognitionColors [0.153 0.004 0.004, 0.647 0.647 0.647]\nfield SFNode driver MotorbikeDriver { }\nfield SFString name &quot;vehicle&quot;\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>TractorFrontWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TractorFrontWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tractor Front Wheel\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;tractor front wheel&quot;\nfield SFFloat tireRadius 0.38\nfield SFFloat width 0.19\nfield SFInt32 subdivision 24\nfield SFBool wheelSide FALSE\nfield SFNode physics Physics { density -1 mass 30 }\nfield SFBool boundingObject TRUE</parameters>
	</proto>
	<proto>
		<name>MotorbikeBackwardsLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeBackwardsLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TruckTrailerSimple</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTrailerSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple non-controllable truck trailer model without physics properties.\n</description>
		<slot-type>truck trailer simple</slot-type>
		<parameters>field SFString name &quot;truck trailer&quot;\nfield SFNode appearance PBRAppearance { metalness 0 roughness 0.4 baseColorMap ImageTexture { url [ &quot;textures/truck_trailer_webots.jpg&quot; ] } }\nfield SFRotation rotation 0 0 1 0\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>MotorbikeDriver</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeDriver.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Motorbike driver is based on the pedestrian PROTO\n</description>
		<slot-type>motorbike driver</slot-type>
		<parameters>field SFColor shirtColor 0.404 0.329 0.255\nfield SFColor pantsColor 0.215 0.310 0.478\nfield SFColor skinColor 0.996 0.765 0.674\nfield SFColor helmetColor 0.267 0.267 0.267</parameters>
	</proto>
	<proto>
		<name>ScooterFrontLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterFrontLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BusWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/BusWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of a bus wheel using the generic VehicleWheel proto\nincluding physic properties and textures\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;bus wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>TruckFrontLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckFrontLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TruckTrailer</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTrailer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A non-controllable truck trailer model with physics properties.\nThe length and number of wheels is configurable.\n</description>
		<slot-type>truck trailer</slot-type>
		<parameters>field SFString name &quot;truck trailer&quot;\nfield SFFloat length 11.15 # Defines the total length of the trailer.\nfield SFFloat kingPinDistance 2.4 # Defines the distance (along the Z direction) between the front of the trailer and the rotation axis.\nfield SFFloat mass 5000 # Defines the mass of the trailer (wheels not included).\nfield MFFloat wheelAxles [ 7.93, 9.03, 10.13 ]\nfield SFNode appearance PBRAppearance { metalness 0 roughness 0.4 baseColorMap ImageTexture { url [ &quot;textures/truck_trailer_webots.jpg&quot; ] } }</parameters>
	</proto>
	<proto>
		<name>Truck</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/Truck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#heavy-weights</documentation-url>
		<description>A simple truck\n</description>
		<parameters>field SFVec3f translation 0 0 0.5\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.39 0 0 # Defines the main color of the truck.\nfield SFNode trailer TruckTrailer { } # Defines an optional trailer.\nfield SFFloat wheelbase 5.25 # Defines the distance between the front and rear wheels.\nfield SFFloat kingPinDistance 1.35 # Defines the distance (along the Z direction) between the rear wheel axis and the trailer rotation axis.\nfield SFFloat mass 8000 # Defines the mass of the truck (trailer not included).\nfield SFString name &quot;vehicle&quot; # Is `Solid.name`.\nfield SFString controller &quot;&lt;generic&gt;&quot; # Is `Robot.controller`.\nfield MFString controllerArgs [ ] # Is `Robot.controllerArgs`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFBool synchronization TRUE # Is `Robot.synchronization`.\nfield MFNode sensorsSlotFront [ ] # Extends the truck with new nodes in the front slot.\nfield MFNode sensorsSlotRear [ ] # Extends the truck with new nodes in the rear slot.\nfield MFNode sensorsSlotTop [ ] # Extends the truck with new nodes in the top slot.\nfield MFNode sensorsSlotCenter [ ] # Extends the truck with new nodes in the center slot.\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>MotorbikeLeftIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeLeftIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>Bus</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/Bus.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#heavy-weights</documentation-url>
		<description>A simple bus.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.55\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.03 0.12 0.42\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>MotorbikeRightIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeRightIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BusShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/BusShape.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The original blender model was made by SONGKRO (http://www.blendswap.com/blends/view/46384)\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.03 0.12 0.42</parameters>
	</proto>
	<proto>
		<name>MotorbikeFrontLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeFrontLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TruckTankMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTankMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.66 0.66 0.66</parameters>
	</proto>
	<proto>
		<name>TruckRearLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckRearLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>MotorbikeWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;motorbike wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE</parameters>
	</proto>
	<proto>
		<name>Tractor</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/Tractor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>A simple tractor.\n</description>
		<parameters>field SFVec3f translation 0 0 0.6\nfield SFRotation rotation 0 1 0 0.13\nfield SFColor color 0.24 0.53 0.79\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorSlot [ ]\nfield SFString window &quot;automobile&quot;\nfield MFColor recognitionColors []</parameters>
	</proto>
	<proto>
		<name>TruckSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of truck to be moved with a Supervisor.\n</description>
		<parameters>field SFVec3f translation 0 0.5 0\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.39 0 0\nfield MFColor recognitionColors [ 0.39 0 0 ]\nfield SFNode trailer TruckTrailerSimple { }\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>ScooterWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;scooter wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE</parameters>
	</proto>
	<proto>
		<name>TruckTankSimple</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTankSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple non-controllable truck tank model without physics properties.\n</description>
		<slot-type>truck trailer simple</slot-type>
		<parameters>field SFString name &quot;truck tank&quot;\nfield SFColor color 0.66 0.66 0.66\nfield SFRotation rotation 0 0 1 0\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>ScooterBackwardsLight</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterBackwardsLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TruckTank</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTank.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A non-controllable truck tank model with physics properties.\n</description>
		<slot-type>truck trailer</slot-type>
		<parameters>field SFString name &quot;truck tank&quot;\nfield SFColor color 0.66 0.66 0.66</parameters>
	</proto>
	<proto>
		<name>BusSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/BusSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of bus to be moved with a Supervisor.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.55\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.03 0.12 0.42\nfield MFColor recognitionColors [ 0.03 0.12 0.42 ]\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>MotorbikeMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/MotorbikeMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor primaryColor 0.153 0.004 0.004\nfield SFColor secondaryColor 0.647 0.647 0.647</parameters>
	</proto>
	<proto>
		<name>ScooterDriver</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterDriver.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Scooter driver is based on the pedestrian PROTO\n</description>
		<slot-type>scooter driver</slot-type>
		<parameters>field SFColor shirtColor 0.40 0.33 0.25\nfield SFColor pantsColor 0.22 0.31 0.48\nfield SFColor skinColor 0.99 0.76 0.67\nfield SFColor helmetColor 0.27 0.27 0.27</parameters>
	</proto>
	<proto>
		<name>TractorRearWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TractorRearWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Tractor Rear Wheel\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;tractor rear wheel&quot;\nfield SFFloat tireRadius 0.6\nfield SFFloat width 0.37\nfield SFInt32 subdivision 24\nfield SFBool wheelSide FALSE\nfield SFNode physics Physics { density -1 mass 60 }\nfield SFBool boundingObject TRUE</parameters>
	</proto>
	<proto>
		<name>ScooterMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor primaryColor 0.43 0.11 0.1\nfield SFColor secondaryColor 0.61 0.7 0.78</parameters>
	</proto>
	<proto>
		<name>ScooterSimple</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#twowheelersimple</documentation-url>
		<description>Simple non-controllable model of a generic scooter without physics properties\n</description>
		<parameters>field SFVec3f translation 0 0 0.23\nfield SFRotation rotation 0 0 1 0\nfield SFColor primaryColor 0.43 0.11 0.1\nfield SFColor secondaryColor 0.69 0.43 0.43\nfield MFColor recognitionColors [ 0.43 0.11 0.1, 0.69 0.43 0.43 ]\nfield SFNode driver ScooterDriver { }\nfield SFString name &quot;vehicle&quot;\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>TruckWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of a truck wheel using the generic VehicleWheel proto\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;truck wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>ScooterLeftIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterLeftIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TruckCab</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckCab.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.39 0 0\nfield SFFloat sizeRatio 1.0</parameters>
	</proto>
	<proto>
		<name>TruckTrailerMesh</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/TruckTrailerMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFNode appearance PBRAppearance { metalness 0 roughness 0.4 baseColorMap ImageTexture { url [ &quot;textures/truck_trailer_webots.jpg&quot; ] } }\nfield SFVec3f translation 0 0 0</parameters>
	</proto>
	<proto>
		<name>ScooterRightIndicator</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/generic/ScooterRightIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZ</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZ.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of a Lincoln MKZ 2017\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.541 0.541 0.541\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString engineSound &quot;sounds/engine.wav&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool frontSpotLights FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>LincolnMKZLeftTurnSignalMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZLeftTurnSignalMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZRightTurnSignalMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZRightTurnSignalMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZBackLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZBackLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZRearAntifogLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZRearAntifogLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZBrakingLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZBrakingLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZPlatesMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZPlatesMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZBackLogoMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZBackLogoMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZRightSideMirrorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZRightSideMirrorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZLeftSideMirrorMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZLeftSideMirrorMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZTailLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZTailLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZWindowsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZWindowsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZFrontLightsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZFrontLightsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZCoachworkMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZCoachworkMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>LincolnMKZSimple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZSimple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of the Lincoln MKZ 2017 to be moved with a Supervisor.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.541 0.541 0.541\nfield MFColor recognitionColors [ 0.541 0.541 0.541 ]\nfield MFString plate &quot;webots://projects/vehicles/protos/textures/plate.jpg&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>LincolnMKZDetailsMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/lincoln/LincolnMKZDetailsMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>VehicleLights</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/VehicleLights.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Set of lights found in a standard vehicle: front, right and left indicators, antifog, braking, rear and backwards\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field MFNode front [ ]\nfield MFColor frontColor [ 0.5 0.5 0.5 ]\nfield MFNode rightIndicator [ ]\nfield MFNode leftIndicator [ ]\nfield MFColor indicatorColor [ 0.8 0.35 0 ]\nfield MFNode antifog [ ]\nfield MFColor antifogColor [ 0.8 0.8 0.8 ]\nfield MFNode braking [ ]\nfield MFColor brakingColor [ 0.3 0 0 ]\nfield MFNode rear [ ]\nfield MFColor rearColor [ 0.3 0 0 ]\nfield MFNode backwards [ ]\nfield MFColor backwardsColor [ 0.5 0.5 0.5 ]</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Car</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/Car.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Generic model of Car using the AckermanVehicle proto.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;vehicle&quot;\nfield SFString model &quot;car&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFFloat trackFront 1.7\nfield SFFloat trackRear 1.7\nfield SFFloat wheelbase 4.0\nfield SFFloat minSteeringAngle -1\nfield SFFloat maxSteeringAngle 1\nfield SFFloat suspensionFrontSpringConstant 100000\nfield SFFloat suspensionFrontDampingConstant 4000\nfield SFFloat suspensionRearSpringConstant 100000\nfield SFFloat suspensionRearDampingConstant 4000\nfield SFFloat wheelsDampingConstant 5\nfield SFFloat maxSteeringTorque 10000\nfield MFNode extensionSlot [ VehicleLights { } ]\nfield SFNode boundingObject NULL\nfield SFNode physics NULL\nfield SFFloat radarCrossSection 100\nfield MFColor recognitionColors []\nfield SFNode wheelFrontRight VehicleWheel { name &quot;front right wheel&quot; }\nfield SFNode wheelFrontLeft VehicleWheel { name &quot;front left wheel&quot; wheelSide TRUE}\nfield SFNode wheelRearRight VehicleWheel { name &quot;rear right wheel&quot; }\nfield SFNode wheelRearLeft VehicleWheel { name &quot;rear left wheel&quot; wheelSide TRUE}
#fields specific to Car\nfield SFString{&quot;traction&quot;, &quot;propulsion&quot;, &quot;4x4&quot;}
 type &quot;traction&quot;\nfield SFString{&quot;combustion&quot;, &quot;electric&quot;, &quot;parallel hybrid&quot;, &quot;power-split hybrid&quot;}
 engineType &quot;combustion&quot;\nfield SFString engineSound &quot;sounds/engine.wav&quot;\nfield SFFloat engineSoundRpmReference 1000\nfield SFFloat brakeCoefficient 700\nfield SFFloat time0To100 10.0 # Defines the acceleration of the car.\nfield SFFloat maxVelocity 50 # Defines the maximum velocity [m/s] of the car.\nfield SFFloat engineMaxTorque 250 # Defines the maximum torque of the motor [Nm] used to compute the electric engine torque.\nfield SFFloat engineMaxPower 50000 # Defines the maximum power of the motor [W] used to compute the electric engine torque.\nfield SFFloat engineMinRPM 1000 # Defines the minimum RPM of the motor (only used in the case of combustion engine).\nfield SFFloat engineMaxRPM 4500\nfield SFVec3f engineFunctionCoefficients 150 0.1 0 # Defines the engine coefficients used to compute the combustion engine torque.\nfield MFFloat gearRatio [-12 10 6.5 4.5 3.5 2.75]\nfield SFFloat hybridPowerSplitRatio 0.25 # Defines power split ratio (only used in the case of 'power-split hybrid' engineType).\nfield SFFloat hybridPowerSplitRPM 3000 # Defines the power split RPM (only used in the case of 'power-split hybrid' engineType).\nfield SFString window &quot;automobile&quot;
 # Deprecated in R2020b</parameters>
	</proto>
	<proto>
		<name>FanatecCslEliteSteeringWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/FanatecCslEliteSteeringWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A model of the Fanatec CSL Elite Racing Wheel to insert in the 'steeringWheel' field of some vehicles.\n</description>
		<slot-type>vehicle steering wheel</slot-type>
		<parameters>field SFString name &quot;Fanatec CSL Elite steering wheel&quot;</parameters>
	</proto>
	<proto>
		<name>VehicleWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/VehicleWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/vehiclewheel</documentation-url>
		<description>Generic model of a vehicle wheel implemented at the Solid-node level.\nThe dimensions of the wheel can be set with the parmameters 'thickness' and 'tireRadius'.\nThe quality of the cylinder approximation can be set with the parameter 'subdivision'.\nThe subdivision and size of the round edges of the tire can be set with the parameters 'curvatureFactor' and 'edgeSubdivision'.\nThe size, shape and position of the rim can be set with the parameters 'rimRadius' 'rimBeamNumber' 'rimBeamWidth' 'rimBeamThickness' 'rimBeamOffset'.\nFinally the size of the central part of the rim can be set with the parameters 'centralInnerRadius' and 'centralOuterRadius'.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;vehicle wheel&quot;\nfield SFFloat thickness 0.3\nfield SFFloat tireRadius 0.4\nfield SFInt32 subdivision 36\nfield SFFloat curvatureFactor 0.35\nfield SFInt32 edgeSubdivision 3\nfield SFFloat rimRadius 0.28\nfield SFInt32 rimBeamNumber 5\nfield SFFloat rimBeamWidth 0.1\nfield SFFloat centralInnerRadius 0.09\nfield SFFloat centralOuterRadius 0.13\nfield SFFloat rimBeamThickness 0.2\nfield SFFloat rimBeamOffset 0.03\nfield SFString contactMaterial &quot;default&quot;\nfield SFNode tireAppearance GenericTireAppearance {}\nfield SFNode rimAppearance PBRAppearance { roughness 0.4 }\nfield SFNode physics Physics {}\nfield SFBool boundingObject TRUE\nfield MFNode logoSlot []\nfield SFBool wheelSide FALSE #TRUE for wheels on the left side of the vehicle, FALSE otherwise.</parameters>
	</proto>
	<proto>
		<name>GenericTireAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/GenericTireAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A generic car tire appearance. Useful with the &quot;VehicleWheel&quot; PROTO.\n</description>
	</proto>
	<proto>
		<name>SimpleVehicle</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/SimpleVehicle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Simple example shwoing how to inherit from AckermannVehicle to build any other vehicle.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFFloat trackFront 1.7\nfield SFFloat trackRear 1.7\nfield SFFloat wheelbase 4.0\nfield SFFloat suspensionFrontSpringConstant 100000\nfield SFFloat suspensionFrontDampingConstant 4000\nfield SFFloat suspensionRearSpringConstant 100000\nfield SFFloat suspensionRearDampingConstant 4000\nfield SFFloat minSteeringAngle -0.5\nfield SFFloat maxSteeringAngle 0.5\nfield MFNode sensorsSlot []\nfield SFNode boundingObject NULL\nfield SFNode physics NULL</parameters>
	</proto>
	<proto>
		<name>CarSteeringWheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/CarSteeringWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A generic steering wheel to insert in the 'steeringWheel' field of some vehicles.\n</description>
		<slot-type>vehicle steering wheel</slot-type>
		<parameters>field SFString name &quot;vehicle steering wheel&quot;</parameters>
	</proto>
	<proto>
		<name>AckermannVehicle</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/abstract/AckermannVehicle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/ackermannvehicle</documentation-url>
		<description>Generic model of an Ackerman vehicle. Positions and joints of the wheels are set automatically\nusing 'trackFont', 'trackRear' and 'wheelbase' fields\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;vehicle&quot;\nfield SFString model &quot;Ackermann vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFFloat trackFront 1.7\nfield SFFloat trackRear 1.7\nfield SFFloat wheelbase 4.0\nfield SFFloat minSteeringAngle -1\nfield SFFloat maxSteeringAngle 1\nfield SFFloat suspensionFrontSpringConstant 100000\nfield SFFloat suspensionFrontDampingConstant 4000\nfield SFFloat suspensionRearSpringConstant 100000\nfield SFFloat suspensionRearDampingConstant 4000\nfield SFFloat wheelsDampingConstant 5\nfield SFFloat maxSteeringTorque 10000\nfield MFNode extensionSlot []\nfield SFNode boundingObject NULL\nfield SFNode physics NULL\nfield SFFloat radarCrossSection 100\nfield MFColor recognitionColors []\nfield SFNode wheelFrontRight VehicleWheel { name &quot;front right wheel&quot; }\nfield SFNode wheelFrontLeft VehicleWheel { name &quot;front left wheel&quot; wheelSide TRUE }\nfield SFNode wheelRearRight VehicleWheel { name &quot;rear right wheel&quot; }\nfield SFNode wheelRearLeft VehicleWheel { name &quot;rear left wheel&quot; wheelSide TRUE }\nfield MFNode axisDevicesFrontRight []\nfield MFNode axisDevicesFrontLeft []\nfield MFNode axisDevicesRearRight []\nfield MFNode axisDevicesRearLeft []\nfield SFString customData &quot;&quot;\nfield SFString window &quot;&lt;generic&gt;&quot;</parameters>
	</proto>
	<proto>
		<name>BmwX5AntiFogLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5AntiFogLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5RearInterior</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5RearInterior.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFBool shifter TRUE</parameters>
	</proto>
	<proto>
		<name>BmwX5Simple</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5Simple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car#simple-vehicles</documentation-url>
		<description>Simple kinematic model of the BMW X5 to be moved with a Supervisor.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.43 0.11 0.1\nfield MFColor recognitionColors [ 0.43 0.11 0.1 ]\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;none&gt;&quot;\nfield MFString controllerArgs [ ]\nfield SFString window &quot;&lt;none&gt;&quot;\nfield MFNode sensorsSlotFront [ ]\nfield MFNode sensorsSlotRear [ ]\nfield MFNode sensorsSlotTop [ ]\nfield MFNode sensorsSlotCenter [ ]\nfield SFBool wheelBoundingObject FALSE</parameters>
	</proto>
	<proto>
		<name>BmwX5RightWingMirror</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5RightWingMirror.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5CentralMirrorFrame</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5CentralMirrorFrame.proto</url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5RightIndicator</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5RightIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5Mesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5Mesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFColor color 0.43 0.11 0.1\nfield SFFloat outerWindowTransparency 0</parameters>
	</proto>
	<proto>
		<name>BmwX5BackwardsLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5BackwardsLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/car</documentation-url>
		<description>Model of an BMW X5 car using the Car proto as a base.\nThe vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\nFor the last 6 fields to have any effect, the 'interior' has to be enabled.\n</description>
		<parameters>field SFVec3f translation 0 0 0.4\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0.43 0.11 0.1\nfield SFString engineSound &quot;sounds/engine.wav&quot;\nfield SFString name &quot;vehicle&quot;\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield SFBool windshieldWipers TRUE\nfield SFBool frontSpotLights FALSE\nfield SFBool rearMirror FALSE\nfield SFBool leftWingMirror FALSE\nfield SFBool rightWingMirror FALSE\nfield SFFloat mirrorFar 200.0\nfield MFNode sensorsSlotFront []\nfield MFNode sensorsSlotRear []\nfield MFNode sensorsSlotTop []\nfield MFNode sensorsSlotCenter []\nfield SFBool interior TRUE\nfield SFBool dynamicSpeedDisplay TRUE\nfield SFBool indicatorLevers TRUE\nfield SFNode steeringWheel CarSteeringWheel {}\nfield SFBool completeInterior TRUE\nfield SFBool shifter TRUE\nfield SFFloat outerWindowTransparency 0.4\nfield SFFloat innerWindowTransparency 0.7\nfield SFBool innerWindowDust FALSE\nfield SFString window &quot;automobile&quot;</parameters>
	</proto>
	<proto>
		<name>BmwX5CentralMirror</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5CentralMirror.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5FrontLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5FrontLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5Wheel</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5Wheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Model of the BMW X5 wheels using the generic VehicleWheel proto\nincluding physic properties and baseColorMaps\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<slot-type>vehicle wheel</slot-type>
		<parameters>field SFString name &quot;BMW X5 wheel&quot;\nfield SFNode physics NULL\nfield SFBool boundingObject TRUE\nfield SFBool wheelSide FALSE</parameters>
	</proto>
	<proto>
		<name>BmwX5LeftWiper</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5LeftWiper.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFBool castShadows FALSE</parameters>
	</proto>
	<proto>
		<name>BmwX5RightWiper</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5RightWiper.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFBool castShadows FALSE</parameters>
	</proto>
	<proto>
		<name>BmwX5InnerWindow</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5InnerWindow.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFFloat innerWindowTransparency 1\nfield SFBool innerWindowDust FALSE</parameters>
	</proto>
	<proto>
		<name>BmwX5RearLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5RearLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5LeftWingMirror</name>
		<base-type>Shape</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5LeftWingMirror.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5LeftIndicator</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5LeftIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5BrakingLight</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5BrakingLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BmwX5Interior</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/vehicles/protos/bmw/BmwX5Interior.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field MFString baseColorMap &quot;textures/bmw_interior_speedometer.jpg&quot;\nfield SFBool indicatorLevers TRUE</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>LargeValve</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/valves/protos/LargeValve.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Large Wheel-based valve. Handle can be moved in either direction by the angle (radians) in the &quot;absolute stop&quot; field.\n</description>
		<parameters>field SFVec3f translation 0 0 0.106\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;large valve&quot;\nfield SFFloat jointFriction 0.5 # Defines the static friction of the valve joint.\nfield SFString controller &quot;valve_turner&quot; # Defines the controller of the valve which is used to limit its rotation.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield MFString absoluteStop &quot;15.7079632679&quot; # Defines the maximum rotational angle in radians. This value is sent to the controller using the controllerArgs field.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>SmallValve</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/valves/protos/SmallValve.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Small Wheel-based valve. Handle can be moved in either direction by the angle (radians) in the &quot;absolute stop&quot; field.\n</description>
		<parameters>field SFVec3f translation 0 0 0.077\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;small valve&quot;\nfield SFFloat jointFriction 0.1 # Defines the static friction of the valve joint.\nfield SFString controller &quot;valve_turner&quot; # Defines the controller of the valve which is used to limit its rotation.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield MFString absoluteStop &quot;15.7079632679&quot; # Defines the maximum rotational angle in radians. This value is sent to the controller using the controllerArgs field.</parameters>
	</proto>
	<proto>
		<name>LeverValve</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/valves/protos/LeverValve.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Lever-based valve. Handle can be moved in either direction (from up) of 45 degrees.\n</description>
		<parameters>field SFVec3f translation 0 0 0.142\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;lever valve&quot;\nfield SFFloat jointFriction 1 # Defines the static friction of the valve joint.\nfield SFVec3f scale 0.7 0.7 0.7</parameters>
	</proto>
	<proto>
		<name>FireExtinguisher</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/fire_extinguisher/protos/FireExtinguisher.proto</url>
		<license>Attribution-NonCommercial 4.0 International (original model by 3DHaupt)</license>
		<license-url>https://creativecommons.org/licenses/by-nc/4.0</license-url>
		<description>A simple fire extinguisher with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fire extinguisher&quot;\nfield SFBool enablePhysics TRUE # Defines whether the fire extinguisher should have physics.</parameters>
	</proto>
	<proto>
		<name>SquareManhole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/manhole/protos/SquareManhole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple square manhole.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;manhole&quot;\nfield SFVec3f size 1 1 0.1 # Defines the size of the manhole.\nfield SFBool enableBoundingObject TRUE # Defines whether the manhole should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ConveyorPlatform</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/conveyors/protos/ConveyorPlatform.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A controllable conveyor platform.\nThe default controller makes it move at a constant speed for a configurable amount of time.\nThe conveyor contains 3 controllable LEDs.\n</description>
		<parameters>field SFVec3f translation 0 0 0.065\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Conveyor platform&quot; # Is `Solid.name`.\nfield SFString model &quot;Conveyor platform&quot; # Is `Solid.model`.\nfield SFString controller &quot;conveyor_belt&quot; # Is `Robot.controller`.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFFloat speed 0.3 # Defines the rubber band speed in meters per second.\nfield SFFloat acceleration -1 # Defines the acceleration of the conveyor belt.\nfield SFFloat timer 0.0 # Defines for how long the conveyor belt should move (it will move forever if set to 0).\nfield SFFloat textureAnimation 0.5 # Defines the speed of the texture animation.</parameters>
	</proto>
	<proto>
		<name>ConveyorBelt</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/conveyors/protos/ConveyorBelt.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable conveyor belt moving at a constant speed.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;conveyor belt&quot;\nfield SFString window &quot;&lt;none&gt;&quot;\nfield SFVec3f size 1.5 0.5 0.6\nfield SFNode appearance CorrugatedMetal { textureTransform TextureTransform { scale 2 2 } } # Defines the appearance of the conveyor belt.\nfield SFFloat borderThickness 0.03 # Defines the thickness of the metal part around the conveyor belt.\nfield SFFloat borderHeight 0.01 # Defines the height of the border around the conveyor.\nfield SFFloat speed 0.5 # Defines the rubber band speed in meters per second.\nfield SFFloat acceleration -1 # Defines the acceleration of the conveyor belt.\nfield SFFloat timer 0.0 # Defines for how long the conveyor belt should move (it will move forever if set to 0).</parameters>
	</proto>
	<proto>
		<name>MetalStorageBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/containers/protos/MetalStorageBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A metal storage box.\n</description>
		<parameters>field SFString name &quot;metal storage box&quot;\nfield SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat mass 0</parameters>
	</proto>
	<proto>
		<name>WoodenBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/containers/protos/WoodenBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A wooden box.\n</description>
		<parameters>field SFVec3f translation 0 0 0.3\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wooden box&quot;\nfield SFVec3f size 0.6 0.6 0.6 # Defines the size of the wooden box.\nfield SFFloat mass 0 # Defines the mass of the wooden box in kg. A value smaller or equal to 0 remove the physics of the wooden box.\nfield MFNode immersionProperties [] # Is `Solid.immersionProperties`.\nfield SFBool locked FALSE # Is `Solid.locked`.</parameters>
	</proto>
	<proto>
		<name>PlasticCrate</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/containers/protos/PlasticCrate.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A plastic crate.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;plastic crate&quot;\nfield SFVec3f size 0.6 0.6 0.6\nfield SFColor color 0.9 0.2 0.2\nfield SFFloat mass 0</parameters>
	</proto>
	<proto>
		<name>CardboardBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/containers/protos/CardboardBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A cardboard box.\n</description>
		<parameters>field SFVec3f translation 0 0 0.3\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cardboard box&quot;\nfield SFVec3f size 0.6 0.6 0.6 # Defines the size of the cardboard box.\nfield SFFloat mass 0 # Defines the mass of the cardboard box in kg. A value smaller or equal to 0 remove the physics of the cardboard box.\nfield SFBool locked FALSE # Is `Solid.locked`.\nfield SFFloat lidAngle 0 # Defines the opening of the cardboard box in radians. A value equal to 0 closes the box and uses a simple box for the bounding object, preventing it from containing objects.</parameters>
	</proto>
	<proto>
		<name>PlasticFruitBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/containers/protos/PlasticFruitBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A plastic box.\n</description>
		<parameters>field SFString name &quot;plastic fruit box&quot;\nfield SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFColor color 0 1 0.5\nfield SFFloat mass 0</parameters>
	</proto>
	<proto>
		<name>Washer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Washer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A washer with variable radius and thickness.\n</description>
		<parameters>field SFVec3f translation 0 0 0.016\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;washer&quot;\nfield SFNode appearance OldSteel {} # Defines the appearance of the washer.\nfield SFFloat innerRadius 0.006 # Defines the inner radius of the washer.\nfield SFFloat thickness 0.0017 # Defines the thickness of the washer.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool enablePhysics TRUE # Defines whether the washer should have physics.</parameters>
	</proto>
	<proto>
		<name>Wrench</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Wrench.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A 15cm Open-End wrench.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wrench&quot;\nfield SFNode appearance OldSteel {} # Defines the appearance of the wrench.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>ElectricalPlug</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/ElectricalPlug.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An electrical plug with a cable of variable path.\nThe bounding object and physics are optional.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;electrical plug&quot;\nfield SFColor color 1 1 1 # Defines the color of the plug.\nfield MFVec3f cablePath [0 0 0, -0.03 0 0, -0.03 0 -0.1] # Defines the path followed by the cable.\nfield SFBool enablePhysics TRUE # Defines whether the plug should have physics.\nfield SFBool enableBoundingObject TRUE # Defines whether the plug should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>EmergencyButton</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/EmergencyButton.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An emergency button with an optional position sensor.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;emergency button&quot;\nfield SFBool includePositionSensor FALSE # Defines if a PositionSensor node should be included to retrieve the button position.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>Nut</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Nut.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A hexagonal nut.\n</description>
		<parameters>field SFVec3f translation 0 0 0.012\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;nut&quot;\nfield SFNode appearance OldSteel {} # Defines the appearance of the nut.\nfield SFFloat innerRadius 0.006 # Defines the inner radius of the nut.\nfield SFFloat thickness 0.007 # Defines the thickness of the nut.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool enablePhysics TRUE # Defines whether the nut should have physics.</parameters>
	</proto>
	<proto>
		<name>ScrewHole</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/ScrewHole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A screw hole with variable radius and depth.\n</description>
		<parameters>field SFVec3f translation 0 0 0.2\nfield SFRotation rotation 0 0 1 0\nfield SFFloat radius 0.06 # Defines the radius of the screw hole.\nfield SFFloat depth 0.1 # Defines the depth of the screw hole.\nfield SFNode appearance OldSteel {} # Defines the appearance of the screw hole.</parameters>
	</proto>
	<proto>
		<name>Screwdriver</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Screwdriver.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A Philips screwdriver. The blade and handle are balanced.\n</description>
		<parameters>field SFVec3f translation 0 0 0.012\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;screwdriver&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>PaintBucket</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/PaintBucket.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A 4kg bucket of paint, with HingeJoint-based handle.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;paint bucket&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>EyeScrew</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/EyeScrew.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An eye screw with variable radius and length.\n</description>
		<parameters>field SFVec3f translation 0 0 0.01\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;eye screw&quot;\nfield SFNode appearance OldSteel { colorOverride 0.73 0.74 0.71 } # Defines the appearance of the screw.\nfield SFFloat screwRadius 0.006 # Defines the radius of the screw.\nfield SFFloat screwLength 0.05 # Defines the length of the screw.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool enablePhysics TRUE # Defines whether the eye screw should have physics.</parameters>
	</proto>
	<proto>
		<name>PlatformCart</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/PlatformCart.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A platform cart with overall dimensions 90Lx50Wx85H cm.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;platform cart&quot;\nfield MFNode slot [] # Extends the cart with new nodes in the slot.\nfield SFNode physics Physics {} # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Hammer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Hammer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A 25cm asymmetric club hammer.\n</description>
		<parameters>field SFVec3f translation 0 0 0.014\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hammer&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>CapScrew</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/CapScrew.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A cap screw with variable radius and length.\n</description>
		<parameters>field SFVec3f translation 0 0 0.01\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cap screw&quot;\nfield SFNode appearance OldSteel {} # Defines the appearance of the screw.\nfield SFFloat screwRadius 0.006 # Defines the radius of the screw.\nfield SFFloat screwLength 0.05 # Defines the length of the screw.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool enablePhysics TRUE # Defines whether the screw should have physics.\nfield SFBool enableBoundingObject TRUE # Defines whether the screw should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Bolt</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/tools/protos/Bolt.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A threaded bolt with variable radius and length.\n</description>
		<parameters>field SFVec3f translation 0 0 0.013\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bolt&quot;\nfield SFNode appearance OldSteel {} # Defines the appearance of the bolt.\nfield SFFloat screwRadius 0.0055 # Defines the radius of the screw.\nfield SFFloat screwLength 0.035 # Defines the length of the screw.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool enablePhysics TRUE # Defines whether the bolt should have physics.</parameters>
	</proto>
	<proto>
		<name>GasCanister</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/gas_canister/protos/GasCanister.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple gas canister with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;gas canister&quot;\nfield SFBool enablePhysics TRUE # Defines whether the fire extinguisher should have physics.</parameters>
	</proto>
	<proto>
		<name>Forklift</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/forklift/protos/Forklift.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple forklift with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0.81\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;forklift&quot;\nfield SFBool enablePhysics TRUE # Defines whether the forklift should have physics.</parameters>
	</proto>
	<proto>
		<name>TJoint</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/pipes/protos/TJoint.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>3-slot T-joint for connecting pipes.\n</description>
		<parameters>field SFVec3f translation 0 0 0.07\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;T joint pipe&quot;\nfield SFVec3f scale 1 1 1\nfield SFNode appearance OldSteel { textureTransform TextureTransform { scale 3 3 } } # Defines the appearance of the pipe.</parameters>
	</proto>
	<proto>
		<name>PipeSection</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/pipes/protos/PipeSection.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A section of pipe.\n</description>
		<parameters>field SFVec3f translation 0 0 0.25\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pipe section&quot;\nfield SFFloat height 0.5 # Defines the height of the pipe.\nfield SFFloat radius 0.03 # Defines the radius of the pipe.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the pipe cylinder and so its resolution.\nfield SFNode appearance MetalPipePaint { textureTransform TextureTransform { scale 1 1.5 } } # Defines the appearance of the pipe.</parameters>
	</proto>
	<proto>
		<name>LJoint</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/pipes/protos/LJoint.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>90-degree L-joint for connecting pipes.\n</description>
		<parameters>field SFVec3f translation 0 0 0.08\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;L joint pipe&quot;\nfield SFVec3f scale 1 1 1\nfield SFNode appearance OldSteel { textureTransform TextureTransform { rotation 0.78 scale 2 2 } } # Defines the appearance of the pipe.</parameters>
	</proto>
	<proto>
		<name>WoodenPallet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/pallet/protos/WoodenPallet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Simple and configurable wooden pallet.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wooden pallet&quot;\nfield SFVec3f size 1.2 0.8 0.14 # Defines the size of the pallet.\nfield SFInt32 lathNumber 6 # Defines the number of lath of the pallet.\nfield SFFloat lathWidth 0.08 # Defines the width of one lath.\nfield SFFloat mass 0 # Defines the mass of the pallet in kg. A value smaller or equal to 0 remove the physics of the pallet.\nfield SFBool boundingObject TRUE # Defines whether the bounding object should be enabled.\nfield SFBool locked FALSE # Is `Solid.locked`.</parameters>
	</proto>
	<proto>
		<name>WoodenPalletStack</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/factory/pallet/protos/WoodenPalletStack.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Simple and configurable wooden pallet stack.\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wooden pallet stack&quot;\nfield SFInt32 palletNumber 8 # Defines the number of pallet in the stack (vertically).\nfield SFVec3f palletSize 1.2 0.8 0.14 # Defines the size of one pallet.\nfield SFInt32 palletLathNumber 6 # Defines the number of lath of each pallets.\nfield SFFloat palletLathWidth 0.08 # Defines the width of the pallet laths.\nfield SFFloat lateralMisalignment 0.1 # Defines the maximum lateral misalignment between two pallets.\nfield SFFloat longitudinalMisalignment 0.05 # Defines the maximum longitudinal misalignment between two pallets.\nfield SFFloat palletMass 0 # Defines the mass of one pallet in kg. A value smaller or equal to 0 remove the physics of the stack.\nfield SFBool boundingObject TRUE # Defines whether the bounding object should be enabled.\nfield SFBool locked FALSE # Is `Solid.locked`.</parameters>
	</proto>
	<proto>
		<name>HelicoidalRoadSegment</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/HelicoidalRoadSegment.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple and configurable helicoidal road showing how to use the Road PROTO in order to create 3D roads.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the road name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield SFString startJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the first Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFString endJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the last Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes (used for the texture mapping).\nfield SFInt32 numberOfForwardLanes 1 # Defines the number of forward lanes. (this is an information with no impact on the graphical shape).\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield MFFloat roadBorderWidth [ 0.8 ] # Defines the width of the sidewalk.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield SFFloat height 20 # Defines the height of the helicoid.\nfield SFFloat radius 15 # Defines the radius of the helicoid.\nfield SFFloat heigthStep 5 # Defines the vertical step of the helicoid.\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFFloat subdivision 64 # Defines the subdivision of the helicoid.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>RoadLine</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/RoadLine.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Defines the properties of a road line.\nThis node should be used in the `lines` field of a road node.\n</description>
	</proto>
	<proto>
		<name>RoadPillars</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/RoadPillars.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic and customizable road pillars which can be used for easily creating bridges or elevated roads.\nThe boundingObject can be optionally enable or not.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road pillar&quot;\nfield SFFloat height 5 # Defines the height of the pillar.\nfield SFFloat width 8 # Defines the width of the pillar.\nfield SFFloat depth 2 # Defines the depth of the pillar.\nfield SFFloat pylonsRadius 0.6 # Defines the radius of the two pylons.\nfield SFFloat pylonsDistance 6 # Defines the distance between the two pylons (should be smaller than the width).\nfield SFFloat pylonsInclination 0.1 # Defines the inclination angle of the pylons.\nfield SFFloat upperTilt 0 # Defines the tilt of the upper support.\nfield SFNode appearance RoughConcrete { textureTransform TextureTransform { scale 4 1} } # Defines the appearance of the pillar.\nfield SFBool boundingObject TRUE # Defines whether the pillar should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>AddLanesRoadSegment</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/AddLanesRoadSegment.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple segment of road allowing to add (or remove) several lanes to the road.\nThe side where the new lanes are added is configurable as well as a lot of others parameters of a regular road.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the junction name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFFloat length 20 # Defines the total length of the segment.\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes before addition of the new one(s) (used for the texture mapping).\nfield SFInt32 numberOfNewLanes 2 # Defines the number of lanes to add.\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield SFBool newLaneLeft TRUE # Defines on which side are added the new lanes.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield SFFloat roadBorderWidth 0.8 # Defines the width of the sidewalk.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>StraightRoadSegment</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/StraightRoadSegment.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple straight road, the number of lanes and the dimensions are configurable.\nFurthermore, an optional border can be enabled.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the road name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield SFString startJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the first Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFString endJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the last Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes (used for the texture mapping).\nfield SFInt32 numberOfForwardLanes 1 # Defines the number of forward lanes. (this is an information with no impact on the graphical shape).\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield SFFloat startingRoadBorderWidth 0.8 # Defines the width of the sidewalk at the start.\nfield SFFloat endingRoadBorderWidth 0.8 # Defines the width of the sidewalk at the end.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield SFFloat length 10 # Defines the length of the road.\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFFloat startingRoadTilt 0 # Defines the tilt of the road at the beginning.\nfield SFFloat endingRoadTilt 0 # Defines the tilt of the road at the end.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>Crossroad</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/Crossroad.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable crossroad which can contain optionally references to its connected roads and a shape.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;crossroad&quot; # Defines the the crossroad name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield MFVec3f shape [ 0 0 0, 0 1 0, 1 0 0 ] # Defines the shape of the crossroad.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFBool boundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>Road</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/Road.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A fully customizable road, the number of lanes, the dimensions and the path of the road is configurable.\nFor each line separating two lanes it is possible to configure if this one is continuous or dashed.\nB-Spline can be used in order to interpolate the path of the road and an optional border can be enable.\nThe boundingObject of each border and the road itself can be independently enable or disable.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Optionally defines the street name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield SFString startJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the first Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFString endJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the last Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes (used for the texture mapping).\nfield SFInt32 numberOfForwardLanes 1 # Defines the number of forward lanes. (this is an information with no impact on the graphical shape).\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield MFFloat roadBorderWidth [ 0.8 ] # Defines the width of the sidewalk associated to each way-point (if there are less values than way-points, the last value is used for the last remaining way-points).\nfield SFBool road TRUE # Defines the width of the sidewalk associated to each way-point (if there are less values than way-points, the last value is used for the last remaining way-points).\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield MFVec3f wayPoints [ 0 0 0, 1 0 0 ] # Defines the path of the road.\nfield MFFloat roadTilt [ 0, 0] # Defines the tilting angle corresponding to each way-point (if there are less values than way-points, 0 is used for the last remaining way-points).\nfield MFFloat startingAngle [] # Optionally defines the angle of the road at the first way-point.\nfield MFFloat endingAngle [] # Optionally defines the angle of the road at the lasst way-point.\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFInt32 splineSubdivision 4 # Defines the degree of interpolation using B-Splines (if the value is lower than 0, the interpolation is disabled).\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFString turnLanesForward &quot;&quot; # Defines painted arrows before the end of the lanes using the same format as the OSM &quot;turn:lanes:forward&quot; key (e.g. &quot;through|left;through|none&quot;). Please refer to the corresponding OSM tag: http://wiki.openstreetmap.org/wiki/Key:turn.\nfield SFString turnLanesBackward &quot;&quot; # Same as `turnLanesForward` but for the OSM &quot;turn:lanes:backward&quot; key.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>CurvedRoadSegment</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/CurvedRoadSegment.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple curved road, the number of lanes, the curvature and the dimensions are configurable, an optional border can be enable.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the road name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield SFString startJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the first Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFString endJunction &quot;&quot; # Optionally defines a reference to the Crossroad connected at the last Road waypoint. Setting correctly this field is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes (used for the texture mapping).\nfield SFInt32 numberOfForwardLanes 1 # Defines the number of forward lanes. (this is an information with no impact on the graphical shape).\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield MFFloat roadBorderWidth [ 0.8 ] # Defines the width of the sidewalk.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield SFFloat curvatureRadius 10 # Defines the radius of the curve.\nfield SFFloat totalAngle 1.5708 # Defines the angle covered by the road (length = totalAngle * curvatureRadius).\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFInt32 subdivision 16 # Defines the degree of interpolation using B-Splines (if the value is lower than 0, the interpolation is disabled).\nfield SFFloat tilt 0 # Defines the maximum tilt of the road.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>Roundabout</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/Roundabout.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple and customizable roundabout, all the roads are equally separated in orientation.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;roundabout&quot; # Defines the roundabout name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFInt32 subdivision 16\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield SFBool border TRUE # Defines whether the roundabout should have sidewalks.\nfield SFFloat borderWidth 0.8 # Defines the width of the sidewalks.\nfield SFFloat borderHeight 0.2 # Defines the height of the sidewalks.\nfield SFFloat innerRadius 4 # Defines the inner radius of the roundabout.\nfield SFFloat outerRadius 8 # Defines the outer radius of the roundabout.\nfield SFBool center TRUE # Defines whether the roundabout should have a central sidewalk.\nfield MFString centerTexture &quot;webots://projects/default/worlds/textures/grass.jpg&quot; # Defines the texture to be used for the central part of the roundabout.\nfield SFVec2f centerTextureScale 4 4 # Defines the scale of the texture used for the central part of the roundabout.\nfield SFInt32 roadNumber 4 # Defines the number of roads connected to the roundabout.\nfield MFFloat startRoadsLength [5] # Defines the length of the roads connected to the roundabout. The same length is used for all the roads if this field has only one item.\nfield SFFloat startRoadsWidth 7 # Defines the width of the roads connected to the roundabout.\nfield SFInt32 startRoadsNumberOfLanes 2 # Defines the number of lanes of the roads (used for the texture mapping).\nfield MFString startRoadsStartLine [ &quot;textures/road_line_dashed.png&quot;, # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.
 &quot;textures/road_line_triangle.png&quot; ]\nfield MFString startRoadsEndLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield MFNode{RoadLine {}} startRoadsLine [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool borderBoundingObject FALSE # Defines whether the outer sidewalks should have a bounding object.\nfield SFBool centerBoundingObject FALSE # Defines whether the central sidewalk should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.</parameters>
	</proto>
	<proto>
		<name>LaneSeparation</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/LaneSeparation.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple segment of road allowing to divide a road into two smaller ones (or to assemble two roads into a bigger one).\nThe number of lanes of each of the two smaller roads is independently configurable as well as a lot of others parameters of a regular road.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the junction name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFFloat width 14 # Defines the total width of the road (excluding sidewalk).\nfield SFFloat length 5 # Defines the length of the segment.\nfield SFInt32 numberOfLanes 4 # Defines the total number of lanes (used for the texture mapping).\nfield SFInt32 numberOfleavingLanes 2 # Defines the number of lanes leaving the road.\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield SFBool newLaneLeft TRUE # Defines on which sied the lanes are leaving the road.\nfield MFNode{RoadLine {}} lines [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield SFFloat roadBorderWidth 0.8 # Defines the width of the sidewalk.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool centralBorder TRUE # Defines whether the road should have a central sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool centralBorderBoundingObject FALSE # Defines whether the central sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>AddLaneRoadSegment</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/AddLaneRoadSegment.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple segment of road allowing to add (or remove) one lane to the road.\nThe side where the new lane is added is configurable as well as a lot of others parameters of a regular road.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road&quot; # Defines the junction name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFFloat width 7 # Defines the total width of the road (excluding sidewalk).\nfield SFFloat length 20 # Defines the total length of the segment.\nfield SFInt32 numberOfLanes 2 # Defines the number of lanes before addition of the new one (used for the texture mapping).\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield SFBool newLaneLeft TRUE # Defines on which side is added the new lane.\nfield MFNode{RoadLine {}} lines [ RoadLine { }, RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFFloat roadBorderHeight 0.15 # Defines the height of the sidewalk.\nfield SFFloat roadBorderWidth 0.8 # Defines the width of the sidewalk.\nfield SFBool rightBorder TRUE # Defines whether the road should have a right sidewalk.\nfield SFBool leftBorder TRUE # Defines whether the road should have a left sidewalk.\nfield SFBool rightBarrier FALSE # Defines whether the road should have a right barrier.\nfield SFBool leftBarrier FALSE # Defines whether the road should have a left barrier.\nfield SFBool bottom FALSE # Defines whether the road bottom should be displayed (useful in case of bridge).\nfield MFString startLine [] # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.\nfield MFString endLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.\nfield SFNode pavementAppearance Pavement { } # Defines the appearance of the sidewalk.\nfield MFString bottomTexture [] # Defines the texture to be used for the bottom of the road.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool roadBoundingObject FALSE # Defines whether the road should have a bounding object.\nfield SFBool rightBorderBoundingObject FALSE # Defines whether the right sidewalk should have a bounding object.\nfield SFBool leftBorderBoundingObject FALSE # Defines whether the left sidewalk should have a bounding object.\nfield SFBool rightBarrierBoundingObject TRUE # Defines whether the right crash barrier (if any) should have a bounding object.\nfield SFBool leftBarrierBoundingObject TRUE # Defines whether the left crash barrier (if any) should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the road should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>CrashBarrier</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/CrashBarrier.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable crash barrier.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;crash barrier&quot;\nfield SFFloat poleGap 2 # Defines the gap between two consecutive poles.\nfield SFNode poleAppearance PBRAppearance { roughness 0.7 } # Defines the appearance of the poles.\nfield MFVec3f path [0 0 0, 5 0 0] # Defines the 3D path of the crash barrier.\nfield SFBool barrierOnRightSide TRUE # Defines the side of the barrier.\nfield SFInt32 subdivision -1 # Defines the degree of interpolation using B-Splines (if the value is lower than 0, the interpolation is disabled).\nfield SFBool enableBoundingObject FALSE # Defines whether the crash barrier should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>RoadIntersection</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/road/protos/RoadIntersection.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple and customizable roads intersection, all the road are crossing at the same point and equally separated in orientation.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;road intersection&quot; # Defines the intersection name.\nfield SFString id &quot;&quot; # Optionally defines a unique ID. A unique ID is required to use the SUMO exporter.\nfield MFString connectedRoadIDs [] # Optionally defines a list of the identifiers of the connected Road. This is required to use the SUMO exporter.\nfield SFInt32 roadNumber 4 # Defines the number of intersecting roads.\nfield SFFloat roadsWidth 7 # Defines the width of the intersecting roads.\nfield SFFloat speedLimit -1.0 # Optionally defines the speed limit. The recommended unit is meter per seconds.\nfield SFBool startRoads TRUE # Defines if the beginning of each roads should be included or not.\nfield MFFloat startRoadsLength [5] # Defines the length of the intersecting roads. The same length is used for all the roads if this field has only one item.\nfield SFInt32 startRoadsNumberOfLanes 2 # Defines the number of lanes of the roads(used for the texture mapping).\nfield MFString startRoadsStartLine [ &quot;textures/road_line_dashed.png&quot;, # Optionally defines the texture used for the road line at the first way-point for each lane. If the string is empty, no road line will be added for the corresponding lane. The two textures `textures/road_line_dashed.png` and `textures/road_line_triangle.png` may be used in this field.
 &quot;textures/road_line_triangle.png&quot; ]\nfield MFString startRoadsEndLine [] # Optionally defines the texture used for the road line at the last way-point for each lane. If the string is empty, no road line will be added for the corresponding lane.\nfield MFNode{RoadLine {}} startRoadsLine [ RoadLine { } ] # Defines the property of each line separating two lanes.\nfield SFBool startRoadBorder TRUE # Defines whether the intersecting road should have a sidewalks.\nfield SFFloat startRoadBorderHeight 0.15 # Defines the width of the intersecting road sidewalks.\nfield SFFloat startRoadBorderWidth 0.8 # Defines the height of the intersecting road sidewalks.\nfield SFBool startRoadBorderboundingObject FALSE # Defines whether the sidewalks should have a bounding object.\nfield SFBool boundingObject FALSE # Defines whether the intersecting roads should have a bounding object.\nfield SFBool castShadows FALSE # Defines whether the intersection should cast shadows.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFBool bottom FALSE # Defines whether the intersection bottom should be displayed (useful in case of bridge).\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFNode appearance Asphalt { } # Defines the appearance of the road.</parameters>
	</proto>
	<proto>
		<name>Toilet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bathroom/protos/Toilet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A toilet.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;toilet&quot;\nfield SFColor lidColor 0.45 0.62 0.81 # Defines the color of the lid.</parameters>
	</proto>
	<proto>
		<name>WashingMachine</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bathroom/protos/WashingMachine.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A washing machine.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;whashing machine&quot;</parameters>
	</proto>
	<proto>
		<name>BathroomSink</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bathroom/protos/BathroomSink.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A small sink for bathrooms.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sink&quot;\nfield SFNode upperAppearance VarnishedPine { } # Defines the appearance of the upper plate.\nfield SFNode bottomAppearance MarbleTiles { } # Defines the appearance of the upper plate.</parameters>
	</proto>
	<proto>
		<name>Bathtube</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bathroom/protos/Bathtube.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A bathtube.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bathtube&quot;</parameters>
	</proto>
	<proto>
		<name>Television</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/television/protos/Television.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A television (1 x 0.6 x 0.1 m).\n</description>
		<parameters>field SFVec3f translation 0 0.3 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;television&quot;\nfield SFColor color 1 1 1 # Defines the color of the television.\nfield MFString textureUrl &quot;textures/television.jpg&quot; # Defines the texture used for the television.\nfield SFInt32 displayWidth 128 # Defines the width of the internal Display device.\nfield SFInt32 displayHeight 64 # Defines the height of the internal Display device.\nfield SFString controller &quot;television_switch_on&quot; # Defines the controller used to display images using the internal Display device.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.</parameters>
	</proto>
	<proto>
		<name>StraightStairs</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/stairs/protos/StraightStairs.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic and customizable stairs model.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;straight stairs&quot;\nfield SFVec3f stepSize 0.4 1.27 0.03 # Defines the size of one step.\nfield SFFloat stepRise 0.15 # Defines the height difference between two consecutives steps.\nfield SFInt32 nSteps 5 # Defines the number of steps.\nfield SFFloat stringerWidth 0.02 # Defines the width of the stringers.\nfield SFNode stepAppearance VarnishedPine { textureTransform TextureTransform { scale 4 4 } } # Defines the appearance of the steps.\nfield SFNode stringerAppearance VarnishedPine { textureTransform TextureTransform { scale 4 4 } } # Defines the appearance of the stringers.\nfield MFNode leftRail StraightStairsRail {} # Defines the left rail.\nfield MFNode rightRail StraightStairsRail {} # Defines the right rail.\nfield SFBool startingStairs TRUE # Defines whether the bottom part of the stairs should be flat.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>StraightStairsLanding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/stairs/protos/StraightStairsLanding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic and customizable landing model for straight stairs.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;straight stairs landing&quot;\nfield SFVec3f landingSize 0.4 1.27 0.03 # Defines the size of the landing.\nfield SFFloat height 2.0 # Defines the height of the landing.\nfield SFVec2f stringerSize 0.3 0.02 # Defines the height and width of the stringer.\nfield SFBool stringerLeft TRUE # Defines whether the left part of the stringer should be included.\nfield SFBool stringerRight TRUE # Defines whether the right part of the stringer should be included.\nfield SFBool stringerBack FALSE # Defines whether the back part of the stringer should be included.\nfield SFVec2f supportPoleSize 0.05 0.05 # Defines the size of the support poles.\nfield SFNode appearance VarnishedPine { textureTransform TextureTransform { scale 4 4 } } # Defines the main appearance.\nfield SFNode floorAppearance Parquetry {} # Defines the floor appearance.\nfield MFNode rail [] # Defines the rail.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>StraightStairsRail</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/stairs/protos/StraightStairsRail.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Default stairs handrail.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;straight stairs rail&quot;\nfield SFFloat run 2.0 # Defines the horizontal lenght of the rail.\nfield SFFloat rise 0.75 # Defines the vertical lenght of the rail.\nfield SFFloat width 0.04 # Defines the width of the rail.\nfield SFFloat newelHeight 0.93 # Defines the height of the top bar.\nfield SFFloat balusterHeight 0.8 # Defines the height of the balusters.\nfield SFFloat balusterRadius 0.01 # Defines the radius of the balusters.\nfield SFInt32 nBalusters 20 # Defines the number of balusters.\nfield SFNode appearance VarnishedPine { textureTransform TextureTransform { scale 4 4 } } # Defines the appearance of the rail.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>SimpleTree</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/SimpleTree.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Efficient (with only 8 polygones) and customizable outdoor tree.\nTree types are:\n- 'oak tree'\n- 'crab apple tree'\n- 'cherry tree'\n- 'birch tree'\n- 'palm tree'\n- 'spruce'\n- 'white pine'\n- 'hackberry tree'\n- 'hazel tree'\n\nThe 'random' type choose randomly a tree type each time the node is regenerated.\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;tree&quot; # Defines the name of the tree.\nfield SFString{&quot;random&quot;, &quot;oak tree&quot;, &quot;crab apple tree&quot;, &quot;cherry tree&quot;, &quot;birch tree&quot;, &quot;palm tree&quot;, &quot;spruce&quot;, &quot;white pine&quot;, &quot;hackberry tree&quot;, &quot;hazel tree&quot;}
 type &quot;cherry tree&quot; # Defines the texture to be used. If set to `random`, a type will be randomly selected in the list.\nfield SFBool withSnow FALSE # Defines if the texture used should have snow on top.\nfield SFFloat height 4 # Defines the height of the tree.\nfield SFFloat radius 2 # Defines the radius of the tree.\nfield SFInt32 subdivision 2 # Defines the number of faces used to represent the tree.\nfield SFBool enableBoundingObject TRUE # Defines if the tree should have a bounding object (the bounding object is made of a simple cylinder).\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool isPickable TRUE</parameters>
	</proto>
	<proto>
		<name>Oak</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Oak.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A oak tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;oak tree&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>BigSassafras</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/BigSassafras.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A big sassafras tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sassafras tree&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Tree</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Tree.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Efficient (with only 8 polygons) and fast to load tree.\nThis PROTO is less configurable than `SimpleTree` but way faster to load.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;tree&quot; # Defines the name of the tree.\nfield SFVec3f scale 1 1 4 # The first and middle components of the scale define the radius of the tree and the last one defines it's height.\nfield MFString texture &quot;textures/cherry_tree.png&quot; # Defines the texture used for the tree.\nfield SFNode boundingObject NULL # Is `Solid.boundingObject`.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool isPickable TRUE</parameters>
	</proto>
	<proto>
		<name>PalmTree</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/PalmTree.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A palm tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;palm tree&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Sassafras</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Sassafras.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A sassafras tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sassafras tree&quot;\nfield SFBool burnt FALSE # Defines whether the tree is burnt (after a wildfire).\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Pine</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Pine.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A pine tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pine tree&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Forest</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Forest.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Efficient and customizable forest.\nTree types are:\n- 'oak tree'\n- 'crab apple tree'\n- 'cherry tree'\n- 'birch tree'\n- 'palm tree'\n- 'spruce'\n- 'white pine'\n- 'hackberry tree'\n- 'hazel tree'\n\nThe 'random' type choose randomly a tree type each time the node is regenerated.\nThe shape of the forest can either be defined using the 'shape' and 'density' fields or the coordinate of each tree can be defined in external files ( X,Y,Z per tree, one tree per line).\nThe path to those files must be defined with respect to the world file.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield MFString treesFiles [] # Can be used to define the paths to several files in which are defined the positions of the trees (one tree per line, using the format 'X, Y, Z'). The path to these files must be defined with respect to the world file.\nfield MFVec2f shape [-20 -10, 20 -10, 0 25] # Alternatively, the position of each trees can be defined using the shape field. This field defines the shape of the forest, in that case the position of the trees is randomly generated from this shape.\nfield SFFloat density 0.2 # If the forest is defined using the `shape` field, this field defines the density of three to be generated (in trees per meter square).\nfield SFString{&quot;random&quot;, &quot;oak tree&quot;, &quot;crab apple tree&quot;, &quot;cherry tree&quot;, &quot;birch tree&quot;, &quot;palm tree&quot;, &quot;spruce&quot;, &quot;white pine&quot;, &quot;hackberry tree&quot;, &quot;hazel tree&quot;}
 type &quot;random&quot; # Defines the type of threes, in case of `random` type, the forest will be mixed.\nfield SFInt32 randomSeed 0 # Defines the seed of the random number generator. A value of 0 sets the seed to the node id and a value smaller than 0 sets a time based random seed.\nfield MFString groundTexture &quot;textures/dry_leaf.jpg&quot; # Defines the texture of the forest ground. If this field is empty the forest ground is not displayed.\nfield SFBool withSnow FALSE # Defines whether the texture used should have snow on top.\nfield SFFloat maxHeight 6 # Defines the maximum height of the trees.\nfield SFFloat minHeight 2 # Defines the minimum height of the trees.\nfield SFFloat maxRadius 3 # Defines the maximum radius of the trees.\nfield SFFloat minRadius 1 # Defines the minimum radius of the trees.</parameters>
	</proto>
	<proto>
		<name>Cypress</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/trees/protos/Cypress.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A cypress tree with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cypress tree&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the tree should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Sink</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/components/protos/Sink.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A sink.\n</description>
		<parameters>field SFVec3f translation 0 0 0.72\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sink&quot;\nfield MFString textureUrl &quot;textures/components.jpg&quot; # Defines the texture used for the sink.</parameters>
	</proto>
	<proto>
		<name>Worktop</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/components/protos/Worktop.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable worktop.\n</description>
		<parameters>field SFVec3f translation 0 0 0.71\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;worktop&quot;\nfield SFVec3f size 0.7 0.44 0.06 # Defines the size of the worktop.\nfield SFNode appearance Marble { } # Defines the appearance.</parameters>
	</proto>
	<proto>
		<name>HotPlate</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/components/protos/HotPlate.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An hot plate.\n</description>
		<parameters>field SFVec3f translation 0 0 0.71\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hot plate&quot;\nfield MFString textureUrl &quot;textures/components.jpg&quot; # Defines the texture used for the hot plate.</parameters>
	</proto>
	<proto>
		<name>Plate</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Plate.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable (dimensions, texture, etc. ) plate.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;plate&quot;\nfield MFString textureUrl &quot;textures/floral_plate.jpg&quot; # Defines the textures used for of the plate.\nfield SFFloat height 0.01 # Defines the height of the plate.\nfield SFFloat radius 0.11 # Defines the radius of the plate.\nfield SFFloat mass 0.3 # Defines the mass of the plate in kg.</parameters>
	</proto>
	<proto>
		<name>Lid</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Lid.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A lid.\n</description>
		<parameters>field SFVec3f translation 0 0.068 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;lid&quot;\nfield SFColor color 0.7 0.7 0.7 # Defines the color of the lid.\nfield SFFloat mass 0.19 # Defines the mass of the lid in kg.</parameters>
	</proto>
	<proto>
		<name>WoodenSpoon</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/WoodenSpoon.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A wooden spoon.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wooden spoon&quot;\nfield MFString textureUrl &quot;textures/wooden_spoon.jpg&quot; # Defines the texture used for the spoon.</parameters>
	</proto>
	<proto>
		<name>Fork</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Fork.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A fork.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fork&quot;\nfield SFColor color 0.75 0.75 0.75 # Defines the color of the fork.</parameters>
	</proto>
	<proto>
		<name>Wineglass</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Wineglass.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A wine glass.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wine glass&quot;\nfield SFFloat mass 0.2 # Defines the mass of the wine glass in kg.</parameters>
	</proto>
	<proto>
		<name>Glass</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Glass.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A glass.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;glass&quot;\nfield SFFloat mass 0.17 # Defines the mass of the glass in kg.</parameters>
	</proto>
	<proto>
		<name>Knife</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Knife.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A knife.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;knife&quot;\nfield SFColor color 0.75 0.75 0.75 # Defines the color of the knife.</parameters>
	</proto>
	<proto>
		<name>Carafe</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Carafe.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A carafe.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;carafe&quot;\nfield SFFloat mass 1 # Defines the mass of the carafe in kg.</parameters>
	</proto>
	<proto>
		<name>Cookware</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Cookware.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A cookware.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cookware&quot;\nfield SFColor color 0.7 0.7 0.7 # Defines the color of the cookware.\nfield SFFloat mass 0.7 # Defines the mass of the cookware in kg.</parameters>
	</proto>
	<proto>
		<name>Spoon</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/utensils/protos/Spoon.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A spoon.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;spoon&quot;\nfield SFColor color 0.75 0.75 0.75 # Defines the color of the spoon.\nfield SFString type &quot;table&quot; # Defines the type of spoon. The value should be either `table` or `tea`.</parameters>
	</proto>
	<proto>
		<name>HoneyJar</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/breakfast/protos/HoneyJar.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A honey jar.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;honey jar&quot;\nfield MFString textureLidUrl &quot;textures/bee_lid.jpg&quot; # Defines the texture used for the lid of the jar.\nfield SFFloat mass 0.5 # Defines the mass of the jar in kg.\nfield SFColor color 0.839216 0.572549 0.105882 # Defines the color of the jar.</parameters>
	</proto>
	<proto>
		<name>CerealBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/breakfast/protos/CerealBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable (size, texture, etc.) cereal box.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cereal box&quot;\nfield SFVec3f size 0.08 0.2 0.3 # Defines the size of the box.\nfield MFString textureUrl &quot;textures/cereal_box_2.jpg&quot; # Defines the texture used for the box.\nfield SFFloat mass 1 # Defines the mass of the box in kg.</parameters>
	</proto>
	<proto>
		<name>JamJar</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/breakfast/protos/JamJar.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A jam jar.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;jam jar&quot;\nfield MFString textureLidUrl &quot;textures/blue_jar_lid.jpg&quot; # Defines the texture used for the lid of the jar.\nfield SFFloat mass 0.5 # Defines the mass of the jar in kg.</parameters>
	</proto>
	<proto>
		<name>BiscuitBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/breakfast/protos/BiscuitBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable (size, texture, etc.) biscuit box.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;biscuit box&quot;\nfield SFVec3f size 0.08 0.24 0.04 # Defines the size of the box.\nfield MFString textureUrl &quot;textures/biscuit_box.jpg&quot; # Defines the texture used for the box.\nfield SFFloat mass 0.4 # Defines the mass of the box in kg.</parameters>
	</proto>
	<proto>
		<name>Fridge</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/fridge/protos/Fridge.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A fridge with 2 doors (0.7 x 0.7 x 1.8 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fridge&quot;\nfield SFColor mainColor 1 1 1 # Defines the color of the fridge.</parameters>
	</proto>
	<proto>
		<name>Oven</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/kitchen/oven/protos/Oven.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An oven (0.5 x 0.44 x 0.68 m) or a microwave (0.25 x 0.528 x 0.272 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;oven&quot;\nfield SFColor mainColor 1 1 1 # Defines the color of the oven.\nfield SFString type &quot;oven&quot; # Either &quot;oven&quot; or &quot;microwave&quot;.</parameters>
	</proto>
	<proto>
		<name>Floor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/floors/protos/Floor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Configurable standard flat floor.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;floor&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFVec2f size 10 10 # Defines the size of the floor.\nfield SFVec2f tileSize 0.5 0.5 # Defines the size of texture used for the floor.\nfield SFNode appearance Parquetry { type &quot;chequered&quot; } # Defines the appearance of the floor.</parameters>
	</proto>
	<proto>
		<name>CircleArena</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/floors/protos/CircleArena.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A configurable circle arena composed of floor surrounded by wall.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;circle arena&quot;\nfield SFFloat radius 1.0 # Defines the radius of the arena.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFNode floorAppearance Parquetry { type &quot;chequered&quot; } # Defines the appearance of the floor.\nfield SFVec2f floorTileSize 0.5 0.5 # Defines the size of the texture used for the floor.\nfield SFFloat wallThickness 0.01 # Defines the thickness of the wall.\nfield SFFloat wallHeight 0.1 # Defines the height of the wall.\nfield SFNode wallAppearance BrushedAluminium {} # Defines the appearance of the wall.\nfield SFInt32 subdivision 48 # Defines the subdivision of the wall cylinder.</parameters>
	</proto>
	<proto>
		<name>RectangleArena</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/floors/protos/RectangleArena.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A configurable rectangle arena composed of a floor surrounded by walls.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rectangle arena&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFVec2f floorSize 1 1 # Defines the size of the floor.\nfield SFVec2f floorTileSize 0.5 0.5 # Defines the size of the texture used for the floor.\nfield SFNode floorAppearance Parquetry { type &quot;chequered&quot; } # Defines the appearance of the floor.\nfield SFFloat wallThickness 0.01 # Defines the thickness of the walls.\nfield SFFloat wallHeight 0.1 # Defines the height of the walls.\nfield SFNode wallAppearance BrushedAluminium {} # Defines the appearance of the wall.</parameters>
	</proto>
	<proto>
		<name>UnevenTerrain</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/floors/protos/UnevenTerrain.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Randomly generated uneven terrain based on Perlin noise.\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;uneven terrain&quot;\nfield SFVec3f size 50 50 5 # Defines the size of the terrain.\nfield SFInt32 xDimension 50 # Defines the number of points in the grid height array in the x direction.\nfield SFInt32 yDimension 50 # Defines the number of points in the grid height array in the y direction.\nfield SFNode appearance SandyGround { textureTransform TextureTransform { scale 50 50 } } # Defines the appearance of the terrain.\nfield SFInt32 randomSeed 1 # Defines the seed of the random number generator. A value smaller or equal to 0 sets a random seed.\nfield SFBool flatCenter FALSE # Defines whether the center of the terrain should be flat.\nfield SFBool flatBounds FALSE # Defines whether the bounds of the terrain should be flat.\nfield SFInt32 perlinNOctaves 3 # Defines the number of octaves of the perlin noise.</parameters>
	</proto>
	<proto>
		<name>Rock10cm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/rocks/protos/Rock10cm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A rock (10 cm).\n</description>
		<parameters>field SFVec3f translation 0 0 0.05\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rock 10 cm&quot;\nfield MFString texture &quot;webots://projects/default/worlds/textures/rock.jpg&quot; # Defines the texture used for the rock.\nfield SFColor color 1 1 1 # Defines the base color of the rock.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool locked FALSE # Is `Solid.locked`.</parameters>
	</proto>
	<proto>
		<name>Rock17cm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/rocks/protos/Rock17cm.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A rock (17 cm).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rock 17 cm&quot;\nfield MFString texture &quot;webots://projects/default/worlds/textures/rock.jpg&quot; # Defines the texture used for the rock.\nfield SFColor color 1 1 1 # Defines the base color of the rock.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool locked FALSE # Is `Solid.locked`.</parameters>
	</proto>
	<proto>
		<name>Gear</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/gear/protos/Gear.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic gear generator, inspired by Brian Paul's glxgears demo.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFNode appearance PBRAppearance{baseColor 0.533333, 0.541176, 0.521569, roughness 0.5}\nfield SFString name &quot;gear&quot; # Defines the solid's name.\nfield SFInt32 teeth 8 # Defines number of teeth, [8, inf).\nfield SFFloat width 0.01 # Defines gear thickness, (0, inf).\nfield SFFloat innerRadius 0.01 # Defines the radius of the center hole.\nfield SFFloat pitchRadius 0.04 # Defines the radius at center of the teeth.\nfield SFFloat toothDepth 0.01 # Defines depth of tooth.\nfield SFFloat density 0.001 # Defines the density of the gear. If zero, physics is disabled.\nfield SFBool bodyBoundingObject TRUE # Enables gear body collision area (cylinder).\nfield SFBool teethBoundingObject FALSE # Enables a boundingObject on each tooth.</parameters>
	</proto>
	<proto>
		<name>Keyboard</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/computers/protos/Keyboard.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A computer keyboard.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;keyboard&quot;\nfield SFColor color 0.1 0.1 0.1 # Defines the color of the keyboard.\nfield SFFloat mass 0 # Defines the mass of the keyboard in kg. A value smaller or equal to 0 removes the physics of the keyboard.</parameters>
	</proto>
	<proto>
		<name>Laptop</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/computers/protos/Laptop.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple laptop.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;laptop&quot;\nfield SFString controller &quot;laptop_switch_on&quot; # Defines the controller of the laptop which can use the Display device to show images.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.</parameters>
	</proto>
	<proto>
		<name>DesktopComputer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/computers/protos/DesktopComputer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A computer tower.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;desktop computer&quot;\nfield SFColor powerbuttonColor 0.252903 0.263813 0.266361 # Defines the color of the computer power button.\nfield SFFloat mass 0 # Defines the mass of the computer in kg. A value smaller or equal to 0 removes the physics of the computer.</parameters>
	</proto>
	<proto>
		<name>Monitor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/computers/protos/Monitor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A computer monitor.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;monitor&quot;\nfield SFColor color 0.15 0.15 0.15 # Defines the color of the monitor.\nfield SFFloat mass 0 # Defines the mass of the monitor in kg. A value smaller or equal to 0 removes the physics of the monitor.</parameters>
	</proto>
	<proto>
		<name>ComputerMouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/computers/protos/ComputerMouse.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A computer mouse.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;computer mouse&quot;\nfield SFColor topColor 0.71 0.71 0.71 # Defines the color of the top part of the mouse.\nfield SFColor bottomColor 0.056 0.056 0.056 # Defines the color of the bottom part of the mouse.\nfield SFFloat mass 0.1 # Defines the mass of the mouse in kg. A value smaller or equal to 0 removes the physics of the mouse.</parameters>
	</proto>
	<proto>
		<name>SimpleChair</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/chairs/protos/SimpleChair.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple two-colors chair with a customizable mass, but a fixed height of 1.25 meter.\nThis object is physics-enabled so it can be pushed.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;simple chair&quot;\nfield SFColor legColor 1 1 0 # Defines the color of the legs of the chair.\nfield SFColor seatColor 1 0.65 0 # Defines the color of the body of the chair.\nfield SFFloat mass 5 # Defines the mass of the chair in kg.</parameters>
	</proto>
	<proto>
		<name>OfficeChair</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/chairs/protos/OfficeChair.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A rotating office chair with customizable appearance.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;office chair&quot;\nfield SFNode legAppearance BrushedAluminium { textureTransform TextureTransform { scale 5 5 } } # Defines the appearance of the legs of the chair.\nfield SFNode seatAppearance Leather { textureTransform TextureTransform { scale 10 10 } } # Defines the appearance of the body of the chair.\nfield SFBool enablePhysics TRUE # Defines whether the chair should have physics.</parameters>
	</proto>
	<proto>
		<name>WoodenChair</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/chairs/protos/WoodenChair.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A wooden chair (0.42 x 0.44 x 0.944 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wooden chair&quot;\nfield SFColor color 1 1 1 # Defines the color of the chair.\nfield SFNode physics NULL # Defines the physics of the chair.</parameters>
	</proto>
	<proto>
		<name>Chair</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/chairs/protos/Chair.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A chair (0.5 x 0.5 x 1 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;chair&quot;\nfield SFColor color 1 1 1 # Define the color of the chair.\nfield SFNode physics NULL # Define the physcis of the chair.</parameters>
	</proto>
	<proto>
		<name>Apple</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/fruits/protos/Apple.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An apple (0.05 x 0.05 x 0.05 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0.05\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;apple&quot;\nfield SFFloat mass 0.15 # Defines the mass of the apple in kg.\nfield MFNode immersionProperties [] # Is `Solid.immersionProperties`.</parameters>
	</proto>
	<proto>
		<name>Orange</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/fruits/protos/Orange.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An orange (0.05 x 0.05 x 0.05 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0.05\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;orange&quot;\nfield SFFloat mass 0.15 # Defines the mass of the orange in kg.</parameters>
	</proto>
	<proto>
		<name>FruitBowl</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/fruits/protos/FruitBowl.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A fruit bowl (0.146 x 0.146 x 0.146 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fruit bowl&quot;\nfield SFColor color 1 1 1 # Defines the color of the bowl.\nfield SFFloat mass 0.5 # Defines the mass of the bowl in kg.</parameters>
	</proto>
	<proto>
		<name>Rabbit</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Rabbit.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static rabbit.\nBased on the model of Nyilonelycompany (https://sketchfab.com/Nyilonelycompany).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;rabbit&quot;\nfield SFColor color 1 1 1 # Defines the color of the rabbit.</parameters>
	</proto>
	<proto>
		<name>Dog</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Dog.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static dog.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;dog&quot;\nfield SFColor color 1 1 1 # Defines the color of the dog.</parameters>
	</proto>
	<proto>
		<name>Horse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Horse.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static brown horse.\nBased on the model of BlueMesh (https://sketchfab.com/VapTor).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;horse&quot;\nfield SFColor colorBody 1 1 1 # Defines the color of the body of the horse.\nfield SFColor colorHair 1 1 1 # Defines the color of the hair of the horse.</parameters>
	</proto>
	<proto>
		<name>Deer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Deer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static female deer.\nBased on the model of Nyilonelycompany (https://sketchfab.com/Nyilonelycompany).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;deer&quot;\nfield SFColor color 1 1 1 # Defines the color of the deer.</parameters>
	</proto>
	<proto>
		<name>Sheep</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Sheep.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static white sheep.\nBased on the model of hendrikReyneke (https://sketchfab.com/hendrikReyneke).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;sheep&quot;\nfield SFColor color 1 1 1 # Defines the color of the sheep.</parameters>
	</proto>
	<proto>
		<name>Cow</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Cow.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static brown and white cow.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;cow&quot;\nfield SFColor color 1 1 1 # Defines the color of the cow.\nfield SFString{&quot;braun&quot;, &quot;black&quot;}
 patchColor &quot;braun&quot; # Define the cow type.</parameters>
	</proto>
	<proto>
		<name>Fox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Fox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static fox.\nBased on the model of AIUM2 (https://sketchfab.com/alfredonicolas).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;fox&quot;\nfield SFColor color 1 1 1 # Defines the color of the fox.</parameters>
	</proto>
	<proto>
		<name>Cat</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/animals/protos/Cat.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A static cat.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;cat&quot;\nfield SFColor color 1 1 1 # Defines the color of the cat.</parameters>
	</proto>
	<proto>
		<name>CreateWall</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/create_wall/protos/CreateWall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Virtual walls are an accessory of the IRobot Create allowing to inform the robot about areas typically for restricted access to a room.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat range 2.4384 # Defines the range of the infra-red emitter.\nfield SFFloat aperture 0.157 # Defines the aperture of the infra-red emitter.\nfield SFString controller &quot;create_wall_emit_signal&quot; # Defines the controller which is used to emit infra-red messages.\nfield MFString controllerArgs [] # Is `Robot.controllerArgs`.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFString name &quot;iRobot wall&quot;</parameters>
	</proto>
	<proto>
		<name>AdvertisingBoard</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/advertising_board/protos/AdvertisingBoard.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Double sided and adjustable advertising board with the possibility of adding up to four poles.\nThose poles can either be a `cylinder`, `box`, or an `H-shape`.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;advertising board&quot; # Defines the name of the advertising board.\nfield MFString frontTexture &quot;webots://projects/default/worlds/textures/webots_billboard.jpg&quot; # Defines the front display texture.\nfield MFString backTexture &quot;webots://projects/default/worlds/textures/webots_billboard.jpg&quot; # Defines the back display texture.\nfield MFColor recognitionColors [ 1 1 1, 0.75 0 0 ] # Is `Solid.recognitionColors`.\nfield SFBool displayBackLight FALSE # Defines wether the displays are backlit or not.\nfield SFFloat displayWidth 4 # Defines the width of the displays.\nfield SFFloat displayHeight 3 # Defines the height of the displays.\nfield SFFloat frameThickness 0.6 # Defines the thickness of the frame.\nfield SFColor frameColor 0.886275 0.886275 0.886275 # Defines the color of the outer frame of the board.\nfield SFColor poleColor 0.886275 0.886275 0.886275 # Defines the color of the pole if present.\nfield SFInt32 poleNumber 0 # Defines the number of poles. Their position is defined by the number of poles. There can be up to 4 equally spaced poles per board.\nfield SFString{&quot;cylinder&quot;, &quot;box&quot;, &quot;H-shape&quot;}
 poleType &quot;cylinder&quot; # Defines the shape and behavious of the pole(s). `box` and `cylinder` pole types are placed at the center of the board and `H-shape` is placed behind. In the case of `H-shape`, backTexture is null and a base is not defined.\nfield SFFloat poleHeight 5 # Defines the height of the pole.\nfield SFFloat poleThickness 0.4 # Defines the thickness of the pole (radius of the cylinder for `cylinder`).\nfield SFFloat baseRatio 3.2 # Defines the size of the base for `box` and `cylinder` poles. This field is based on a ratio of `poleThickness`.</parameters>
	</proto>
	<proto>
		<name>Table</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/tables/protos/Table.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable table.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;table&quot;\nfield SFVec3f size 1 1.8 0.74 # Defines the size of the table.\nfield SFVec2f feetSize 0.1 0.1 # Defines the size of the feet.\nfield SFFloat feetPadding 0 # Defines the padding of the feet.\nfield SFFloat frameThickness 0.05 # Defines the thickness of the frame.\nfield SFNode trayAppearance VarnishedPine { textureTransform TextureTransform { scale 10 10 } } # Defines the appearance of the tray.\nfield SFNode legAppearance VarnishedPine { textureTransform TextureTransform { scale 4 5 } } # Defines the appearance of the feet.</parameters>
	</proto>
	<proto>
		<name>RoundTable</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/tables/protos/RoundTable.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A round table (2 x 2 x 0.76 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;round table&quot; # Defines the color of the table.\nfield SFNode appearance VarnishedPine { textureTransform TextureTransform { scale 6 6 } } # Defines the appearance of the table.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Desk</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/tables/protos/Desk.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A desk (0.7 x 1.2 x 0.72 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;desk&quot;\nfield SFColor color 1 1 1 # Defines the color of the desk.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>RobocupSoccerBall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/balls/protos/RobocupSoccerBall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A black and white soccer ball with customizable radius and mass.\nThis object is physics-enabled so it will roll or bounce when hit.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;robocup soccer ball&quot;\nfield SFInt32{1,2,3,4,5} size 1 # Defines the ball size and mass according to FIFA standards.</parameters>
	</proto>
	<proto>
		<name>PingPongBall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/balls/protos/PingPongBall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A ping pong ball.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ping pong ball&quot;\nfield MFNode immersionProperties [] # Is `Solid.immersionProperties`.\nfield MFString textureUrl &quot;textures/pingpong_logo.jpg&quot; # Defines the texture used for the ball.</parameters>
	</proto>
	<proto>
		<name>SoccerBall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/balls/protos/SoccerBall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A black and white soccer ball with customizable radius and mass.\nThis object is physics-enabled so it will roll or bounce when hit.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;soccer ball&quot;\nfield SFFloat radius 0.113 # Defines the radius of the ball.\nfield SFFloat mass 0.6 # Defines the mass of the ball.</parameters>
	</proto>
	<proto>
		<name>Ball</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/balls/protos/Ball.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Ball's size, mass and color correspond to the soccer ball used in the Robocup SPL.\nYou can change the centerOfMass to [0 0 0] to avoid the random rolling effect.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ball&quot;\nfield SFColor color 1.0 0.54 0.08 # Defines the color of the ball.\nfield SFFloat radius 0.0325 # Defines the radius of the ball.\nfield SFFloat mass 0.055 # Defines the mass of the ball.\nfield MFVec3f centerOfMass [0 0 -0.0001] # Defines the center of mass of the ball.\nfield SFFloat linearDamping 0.17 # Defines the linear damping of the ball.\nfield SFFloat angularDamping 0.33 # Defines the angular damping of the ball.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.</parameters>
	</proto>
	<proto>
		<name>FifaSoccerBall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/balls/protos/FifaSoccerBall.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>A black and white FIFA soccer ball with customizable size.\nThis object is physics-enabled so it will roll or bounce when hit.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fifa soccer ball&quot;\nfield SFInt32{1,2,3,4,5} size 5 # Defines the ball size and mass according to FIFA standards.</parameters>
	</proto>
	<proto>
		<name>Ramp30deg</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/obstacles/protos/Ramp30deg.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple ramp made of two 30° slopes and a flat top.\nThe ramp is a static object (not physics-enabled) so it will not move when hit.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ramp 30 degrees&quot;\nfield SFColor color 0.5 0.5 0.5 # Defines the color of the ramp.</parameters>
	</proto>
	<proto>
		<name>OilBarrel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/obstacles/protos/OilBarrel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Resizable oil barrel.\n</description>
		<parameters>field SFVec3f translation 0 0 0.44\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;oil barrel&quot;\nfield SFFloat height 0.88 # Defines the height of the barrel.\nfield SFFloat radius 0.305 # Defines the radius of the barrel.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield MFNode immersionProperties [] # Is `Solid.immersionProperties`.</parameters>
	</proto>
	<proto>
		<name>Rectangle</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/geometries/protos/Rectangle.proto</url>
		<license>Apache License 2.0</license>
		<license-url>http://www.apache.org/licenses/LICENSE-2.0</license-url>
		<description>Single/double sided and adjustable rectangle shape.\n</description>
		<parameters>field SFVec2f size 0.1 0.1 # Defines the size of the rectangle shape.\nfield SFBool doubleSided TRUE # Defines whether the shape has two sides or not.</parameters>
	</proto>
	<proto>
		<name>TexturedParallelepiped</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/geometries/protos/TexturedParallelepiped.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable parallelepiped.\nThe `size` and `angles` fields specify the edges and angles of the parallelepiped:\n- `angles.x`: angle in y direction between front and back faces of the prism\n- `angles.y`: angle between base and side edges of the parallelogram face\n- `angles.z`: angle in z direction between front and back faces of the prism\nAvailable texture mappings:\n- `cube` mapping: see texture at projects/samples/geometries/worlds/textures/cube_mapping.jpg\n- `compact` cube mapping: see texture at projects/samples/geometries/worlds/textures/compact_mapping.jpg\n- `flat` mapping: projecting the texture on the front face\n- `metric` mapping: similar to default mapping but the texture is not deformed to match each face size\n- `default` mapping: same texture on all the faces\n- `none` no texture mapping\nIf a boolean field (front, back, left, right, top, bottom) is FALSE, then the corresponding face is not drawn.\nA demo of these mappings is available in projects/samples/geometries/worlds/textured_boxes.wbt.\n</description>
		<parameters>field SFVec3f size 0.1 0.1 0.1 # Defines the size of the parallelepiped.\nfield SFVec3f angles 0.0 0.7854 0.0 # Defines the angles of the parallelepiped.\nfield SFString{&quot;cube&quot;, &quot;compact&quot;, &quot;flat&quot;, &quot;metric&quot;, &quot;default&quot;, &quot;none&quot;}
 mapping &quot;flat&quot; # Defines the texture mapping.\nfield SFBool front TRUE # Defines whether the front face should be included.\nfield SFBool back TRUE # Defines whether the back face should be included.\nfield SFBool left TRUE # Defines whether the left face should be included.\nfield SFBool right TRUE # Defines whether the right face should be included.\nfield SFBool top TRUE # Defines whether the top face should be included.\nfield SFBool bottom TRUE # Defines whether the bottom face should be included.</parameters>
	</proto>
	<proto>
		<name>TexturedBox</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/geometries/protos/TexturedBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Box with customizable texture mapping.\nAvailable texture mappings:\n- `cube` mapping: see texture at projects/samples/geometries/worlds/textures/cube_mapping.jpg\n- `compact` cube mapping: see texture at projects/samples/geometries/worlds/textures/compact_mapping.jpg\n- `flat` mapping: projecting the texture on the front face\n- `metric` mapping: similar to default mapping but the texture is not deformed to match each face size\n- `default` mapping: same texture on all the faces\n- `none`: no texture mapping\nIf a boolean field (front, back, left, right, top, bottom) is FALSE, then the corresponding face is not drawn.\nA demo of these mappings is available in projects/samples/geometries/worlds/textured_boxes.wbt.\n</description>
		<parameters>field SFVec3f size 0.1 0.1 0.1 # Defines the size of the box.\nfield SFString{&quot;cube&quot;, &quot;compact&quot;, &quot;flat&quot;, &quot;metric&quot;, &quot;default&quot;, &quot;none&quot;}
 mapping &quot;flat&quot; # Defines the texture mapping.\nfield SFBool front TRUE # Defines whether the front face should be included.\nfield SFBool back TRUE # Defines whether the back face should be included.\nfield SFBool left TRUE # Defines whether the left face should be included.\nfield SFBool right TRUE # Defines whether the right face should be included.\nfield SFBool top TRUE # Defines whether the top face should be included.\nfield SFBool bottom TRUE # Defines whether the bottom face should be included.</parameters>
	</proto>
	<proto>
		<name>Extrusion</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/geometries/protos/Extrusion.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Generic extrusion geometry.\nThe shape (defined by the 'crossSection' field) is extruded along the path defined by the field 'spine'.\n</description>
		<parameters>field MFVec2f crossSection [1 1, 1 -1, -1 -1, -1 1, 1 1] # Defines the 2D cross-section of the extrusion.\nfield MFVec3f spine [0 0 0, 0 0 1] # Defines the 3D extrusion path.\nfield MFVec2f scale [1.0 1.0] # Defines the scale at each point of the spine.\nfield MFRotation orientation [0 0 1 0] # Defines the orientation of the cross-section at each point of the spine.\nfield SFBool beginCap TRUE # Defines whether the extrusion should have a cap at the begining.\nfield SFBool endCap TRUE # Defines whether the extrusion should have a cap at the end.\nfield SFBool ccw TRUE # Is `IndexedFaceSet.ccw`.\nfield SFBool solid TRUE # Is `IndexedFaceSet.solid`.\nfield SFBool convex TRUE # Is `IndexedFaceSet.convex`.\nfield SFFloat creaseAngle 0.0 # Is `IndexedFaceSet.creaseAngle`.\nfield SFInt32 splineSubdivision 4 # If bigger than 1, defines the B-Spline subdivion of the extrusion along it's path.</parameters>
	</proto>
	<proto>
		<name>TexturedBoxShape</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/shapes/protos/TexturedBoxShape.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Box with customizable texture mapping on selected faces.\nIf the boolean value associated with a face (`frontFace`, `leftFace`, etc.) is FALSE, then the uniform color specified in `faceColor` field will be applied instead of the texture.\nThis is an extension of the TexturedBox geometry PROTO.\nAvailable texture mappings:\n- `cube` mapping: see texture at projects/samples/geometries/worlds/textures/cube_mapping.jpg\n- `compact` cube mapping: see texture at projects/samples/geometries/worlds/textures/compact_mapping.jpg\n- `flat` mapping: projecting the texture on the front face.\n- `metric` mapping: similar to default mapping but the texture is not deformed to match each face size.\n- `default` mapping: same texture on all the faces.\n\nA demo of these mappings is available in projects/samples/geometries/worlds/textured_boxes.wbt.\n</description>
		<parameters>field SFVec3f size 0.1 0.1 0.1 # Defines the size of the box.\nfield MFString textureUrl &quot;webots://projects/default/worlds/textures/old_brick_wall.jpg&quot; # Defines the texture used for the box.\nfield SFInt32 textureFiltering 4 # Defines the filtering level for the texture used for the box.\nfield SFNode textureTransform NULL # Defines the texture transform for the texture used for the box.\nfield SFString{&quot;cube&quot;, &quot;compact&quot;, &quot;flat&quot;, &quot;metric&quot;, &quot;default&quot;, &quot;none&quot;}
 textureMapping &quot;flat&quot; # Defines the texture mapping.\nfield SFColor faceColor 0.8 0.8 0.8 # Defines the color of the faces of the box.\nfield SFBool frontFace TRUE # Defines whether the front face is included.\nfield SFBool backFace TRUE # Defines whether the back face is included.\nfield SFBool leftFace TRUE # Defines whether the left face is included.\nfield SFBool rightFace TRUE # Defines whether the right face is included.\nfield SFBool topFace TRUE # Defines whether the top face is included.\nfield SFBool bottomFace TRUE # Defines whether the bottom face is included.</parameters>
	</proto>
	<proto>
		<name>BeerBottle</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/drinks/protos/BeerBottle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A beer bottle.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;beer bottle&quot;\nfield SFFloat mass 0.4</parameters>
	</proto>
	<proto>
		<name>WaterBottle</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/drinks/protos/WaterBottle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A water bottle.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;water bottle&quot;\nfield MFString textureUrl &quot;textures/evian.png&quot;\nfield SFFloat mass 1</parameters>
	</proto>
	<proto>
		<name>Can</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/drinks/protos/Can.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A can (0.03175 x 0.03175 x 0.1222 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0.06\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;can&quot;\nfield SFColor color 1 1 1\nfield MFString textureUrl &quot;textures/can_base_color.jpg&quot;\nfield SFFloat mass 0.35</parameters>
	</proto>
	<proto>
		<name>ClothRecyclingContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/ClothRecyclingContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A cloth recycling container.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cloth recycling container&quot;</parameters>
	</proto>
	<proto>
		<name>UrbanFence</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/UrbanFence.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An urban fence with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;urban fence&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the fence should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>MetallicTrash</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/MetallicTrash.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A metallic trash with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;metallic trash&quot;\nfield SFBool enablePhysics FALSE # Defines whether the trash should have physics.</parameters>
	</proto>
	<proto>
		<name>Fence</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/Fence.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable fence.\nDimensions, path and appearance of the fence can be set.\nIf subdivision is bigger than 1, B-Splines are used to interpolate path of the fence.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fence&quot;\nfield SFString model &quot;fence&quot;\nfield MFColor recognitionColors [0.8 0.8 0.8]\nfield SFFloat height 1.5 # Defines the height of the fence.\nfield SFFloat poleGap 0.5 # Defines the distance between two consecutives poles.\nfield SFFloat poleRadius 0.04 # Defines the radius of the poles.\nfield SFString{&quot;cylinder&quot;, &quot;square&quot;, &quot;diamond&quot;, &quot;H&quot;}
 poleShape &quot;cylinder&quot; # Defines the shape of the poles.\nfield SFNode poleAppearance PBRAppearance {} # Defines the appearance of the poles.\nfield MFVec3f path [0 0 0, 0 5 0] # Defines the 3D path of the fence.\nfield SFInt32 subdivision -1 # Defines the degree of interpolation using B-Splines (if the value is lower than 0, the interpolation is disabled).\nfield SFInt32 horizontalBarsNumber 2 # Defines the number of horizontal bars.\nfield MFVec2f horizontalBarShape [0.02 0.06, 0.02 -0.06, -0.02 -0.06, -0.02 0.06, 0.02 0.06] # Defines the shape 2D of the horizontal bars.\nfield SFNode horizontalBarAppearance PBRAppearance {} # Defines the appearance of the horizontal bars.\nfield SFNode boundingObject NULL # Is `Solid.boundingObject`.\nfield SFFloat creaseAngle 0.3 # Defines the creaseAngle of the horizontal bar.</parameters>
	</proto>
	<proto>
		<name>PublicToilet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/PublicToilet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Resizable public toilet with two different displays.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;public toilet&quot;\nfield SFFloat height 3.2 # Defines the height of the toilet.\nfield SFFloat length 2.1 # Defines the length of the toilet.\nfield SFFloat width 3.5 # Defines the width of the toilet.\nfield MFString backDisplayTexture &quot;webots://projects/default/worlds/textures/webots_billboard.jpg&quot; # Defines the texture used on the back display.\nfield SFBool backDisplayLight FALSE # Defines whether the back display should have emissive color.\nfield MFNode frontDisplay [ # Defines the content of the front display.
 AdvertisingBoard {
 translation 0 0.1 0
 frontTexture [&quot;webots://projects/default/worlds/textures/webots_billboard.jpg&quot;]
 backTexture []
 displayBackLight FALSE
 displayWidth 0.9
 displayHeight 0.9
 frameThickness 0.1
 }
 ]</parameters>
	</proto>
	<proto>
		<name>BusStop</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/BusStop.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Simple bus stop with customizable appearance and an optional bench.\nThe original blender model was made by Ringbarkis (http://www.blendswap.com/blends/view/66783).\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bus stop&quot;\nfield SFBool bench TRUE # Defines whether the bust stop should include a bench.\nfield SFNode appearance PBRAppearance { baseColor 0.3 0.45 0.33 metalness 0 roughness 0.5 } # Defines the appearance of the bench.\nfield MFString internalAdvertisingTexture &quot;textures/cocacola_advertising.jpg&quot; # Defines the texture used for the internal advertising.\nfield MFString externalAdvertisingTexture &quot;textures/cocacola_advertising.jpg&quot; # Defines the texture used for the external advertising.\nfield SFBool advertisingLightOn TRUE # Defines whether the advertising should have an emissive color.</parameters>
	</proto>
	<proto>
		<name>StoneBench</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/StoneBench.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A simple bench made of stone.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;stone bench&quot;</parameters>
	</proto>
	<proto>
		<name>NewsStand</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/NewsStand.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A news stand.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;news stand&quot;</parameters>
	</proto>
	<proto>
		<name>SimpleBench</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/SimpleBench.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A simple bench.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;simple bench&quot;</parameters>
	</proto>
	<proto>
		<name>SnackStand</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/SnackStand.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A snack stand.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;snack stand&quot;\nfield SFString color &quot;red&quot; # Defines the color of the stand. The value should be either `red` or `green`.</parameters>
	</proto>
	<proto>
		<name>GlassRecyclingContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/GlassRecyclingContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A glass recycling container.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;glass recycling container&quot;</parameters>
	</proto>
	<proto>
		<name>UndergroundContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/UndergroundContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An underground container.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;underground container&quot;</parameters>
	</proto>
	<proto>
		<name>TrashContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/TrashContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A trash container with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;trash container&quot;\nfield SFBool enablePhysics FALSE # Defines whether the trash container should have physics.</parameters>
	</proto>
	<proto>
		<name>PhoneBooth</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/PhoneBooth.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A phone booth.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;phone booth&quot;</parameters>
	</proto>
	<proto>
		<name>ElectricalCabinet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/ElectricalCabinet.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An electrical cabinet.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;electrical cabinet&quot;</parameters>
	</proto>
	<proto>
		<name>WorkTrashContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/WorkTrashContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A work trash container.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;work trash container&quot;</parameters>
	</proto>
	<proto>
		<name>DrinkingFountain</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/DrinkingFountain.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A drinking fountain.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;drinking fountain&quot;</parameters>
	</proto>
	<proto>
		<name>SmallKiosk</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/SmallKiosk.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A small kiosk.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;small kiosk&quot;</parameters>
	</proto>
	<proto>
		<name>Atm</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/Atm.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An ATM.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ATM&quot;</parameters>
	</proto>
	<proto>
		<name>BusStopMesh</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/BusStopMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFNode appearance PBRAppearance { baseColor 0.3 0.45 0.33 metalness 0 roughness 0.6 }</parameters>
	</proto>
	<proto>
		<name>FireHydrant</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/FireHydrant.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A fire hydrant.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fire hydrant&quot;\nfield SFNode appearance PBRAppearance { baseColor 0.643 0 0 metalness 0 roughness 0.4 } # Defines the appearance of the fire hydrant.</parameters>
	</proto>
	<proto>
		<name>IceFreezerContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/IceFreezerContainer.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An ice freezer container.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ice freezer container&quot;</parameters>
	</proto>
	<proto>
		<name>PublicBin</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/PublicBin.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A public bin.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;public bin&quot;\nfield SFColor color 0.27 0.27 0.27 # Defines the color of the bin.\nfield MFColor recognitionColors [0.27 0.27 0.27] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>OldBench</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/OldBench.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An old bench.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;old bench&quot;</parameters>
	</proto>
	<proto>
		<name>BusStopBench</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/BusStopBench.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
		<parameters>field SFString name &quot;bus stop bench&quot;\nfield SFNode appearance PBRAppearance { baseColor 0.3 0.45 0.33 metalness 0 } # Defines the appreance of the bench.</parameters>
	</proto>
	<proto>
		<name>EmergencyPhone</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/EmergencyPhone.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An emergency phone.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;emergency phone&quot;\nfield SFColor poleColor 1 0.44 0 # Defines the color of the pole.\nfield MFColor recognitionColors [1 0.44 0] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>Mailbox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/Mailbox.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A mailbox.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;mailbox&quot;</parameters>
	</proto>
	<proto>
		<name>Bench</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/Bench.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A bench.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bench&quot;\nfield SFColor metalColor 1 1 1 # Defines the color of the metalic part.\nfield SFColor woodColor 0.5 0.5 0.5 # Defines the color of the wooden part.\nfield MFColor recognitionColors [0.25 0.17 0.12, 0.17 0.17 0.17] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>Fountain</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/Fountain.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A configurable fountain.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fountain&quot;\nfield SFFloat height 1.5 # Defines the height of the fountain.\nfield SFFloat radius 1 # Defines the radius of the fountain.\nfield SFInt32 subdivision 16 # Defines subdivision of the fountain cylinders.</parameters>
	</proto>
	<proto>
		<name>StoneFountain</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/StoneFountain.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A fountain made of stones.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;stone fountain&quot;</parameters>
	</proto>
	<proto>
		<name>GuardShelter</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/GuardShelter.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A guard shelter.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;guard shelter&quot;</parameters>
	</proto>
	<proto>
		<name>PublicToiletMesh</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/PublicToiletMesh.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>TrashBin</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/street_furniture/protos/TrashBin.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A trash bin.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;trash bin&quot;\nfield SFColor coverColor 0.1 0.1 0.1 # Defines the color of the top part of the bin.\nfield SFColor binColor 0.08 0.46 0 # Defines the main color of the bin.\nfield MFColor recognitionColors [0.08 0.46 0, 0.1 0.1 0.1] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>TexturedBackgroundLight</name>
		<base-type>DirectionalLight</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/backgrounds/protos/TexturedBackgroundLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Light designed to match the skyboxes in the TexturedBackground PROTO.\n\nSupported values for the `texture` field:\n\n- dusk\n- empty_office\n- entrance_hall\n- factory\n- mars\n- noon_building_overcast\n- noon_cloudy_countryside\n- noon_park_empty\n- mountains\n- music_hall\n- stadium\n- stadium_dry\n\nDeprecated backgrounds:\n\n- dawn_cloudy_empty\n- morning_cloudy_empty\n- noon_cloudy_empty\n- noon_cloudy_mountains\n- noon_stormy_empty\n- noon_sunny_empty\n- noon_sunny_garden\n- twilight_cloudy_empty\n</description>
		<parameters>field SFString{&quot;dawn_cloudy_empty&quot;, &quot;dusk&quot;, &quot;empty_office&quot;, &quot;entrance_hall&quot;, &quot;factory&quot;, &quot;mars&quot;, &quot;morning_cloudy_empty&quot;, &quot;mountains&quot;, &quot;music_hall&quot;, &quot;noon_building_overcast&quot;, &quot;noon_cloudy_countryside&quot;, &quot;noon_cloudy_empty&quot;, &quot;noon_cloudy_mountains&quot;, &quot;noon_park_empty&quot;, &quot;noon_stormy_empty&quot;, &quot;noon_sunny_empty&quot;, &quot;noon_sunny_garden&quot;, &quot;stadium&quot;, &quot;stadium_dry&quot;, &quot;twilight_cloudy_empty&quot;}
 texture &quot;mountains&quot; # Should be equivalent to the 'texture' field of the TexturedBackground.\nfield SFFloat luminosity 1 # Multiplies the `Light.intensity` field.\nfield SFBool castShadows TRUE # Defines whether the light should cast shadows.</parameters>
	</proto>
	<proto>
		<name>TexturedBackground</name>
		<base-type>Background</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/backgrounds/protos/TexturedBackground.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>TexturedBackground provides a set of background textures, and applies them to the background skybox and to the reflections on the 3D objects.\nIt is designed to be used together with the TexturedBackgroundLight PROTO.\n\nSupported values for the `texture` field:\n\n- dusk\n- empty_office\n- entrance_hall\n- factory\n- mars\n- noon_building_overcast\n- noon_cloudy_countryside\n- noon_park_empty\n- mountains\n- music_hall\n- stadium\n- stadium_dry\n\nDeprecated backgrounds:\n\n- dawn_cloudy_empty\n- morning_cloudy_empty\n- noon_cloudy_empty\n- noon_cloudy_mountains\n- noon_stormy_empty\n- noon_sunny_empty\n- noon_sunny_garden\n- twilight_cloudy_empty\n</description>
		<parameters>field SFString{&quot;dawn_cloudy_empty&quot;, &quot;dusk&quot;, &quot;empty_office&quot;, &quot;entrance_hall&quot;, &quot;factory&quot;, &quot;mars&quot;, &quot;morning_cloudy_empty&quot;, &quot;mountains&quot;, &quot;music_hall&quot;, &quot;noon_building_overcast&quot;, &quot;noon_cloudy_countryside&quot;, &quot;noon_cloudy_empty&quot;, &quot;noon_cloudy_mountains&quot;, &quot;noon_park_empty&quot;, &quot;noon_stormy_empty&quot;, &quot;noon_sunny_empty&quot;, &quot;noon_sunny_garden&quot;, &quot;stadium&quot;, &quot;stadium_dry&quot;, &quot;twilight_cloudy_empty&quot;}
 texture &quot;mountains&quot; # Defines the texture of the background.\nfield SFFloat luminosity 1 # Is `Background.luminosity`.\nfield SFBool skybox TRUE # Specifies if the `texture` field is used to define the skybox shown in the scene background.\nfield MFColor skyColor [0 0 0] # Defines the background color in case the `skybox` field is `FALSE`.</parameters>
	</proto>
	<proto>
		<name>PhotoFrame</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bedroom/protos/PhotoFrame.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A photo frame with a customizable picture.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;photo frame&quot;\nfield MFString pictureUrl &quot;PhotoFrame/textures/child_picture.jpg&quot; # Url of the photo.\nfield SFNode frameAppearance VarnishedPine { colorOverride 0.333333 0.341176 0.32549 textureTransform TextureTransform { rotation 1 } } # Define the appearance of the frame.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Bed</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/bedroom/protos/Bed.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable bed with feet and one or 2 pillows.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bed&quot;\nfield SFNode frameAppearance PaintedWood { colorOverride 0.11 0.11 0.11 } # Defines the appearance of the frame.\nfield SFNode mattressAppearance PBRAppearance { roughness 1 metalness 0 } # Defines the appearance of the mattress.\nfield SFNode pillowAppearance PBRAppearance { roughness 1 metalness 0 } # Defines the appearance of the pillows.\nfield SFNode blanketAppearance PBRAppearance { baseColorMap ImageTexture { url &quot;Bed/textures/duvet.jpg&quot; } roughness 1 metalness 0 } # Defines the appearance of the blanket.</parameters>
	</proto>
	<proto>
		<name>CabinetHandle</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/cabinet/protos/CabinetHandle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A handle for the Cabinet PROTO.\n</description>
		<slot-type>handle</slot-type>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cabinet handle&quot;\nfield SFFloat handleLength 0.065 # Defines the lenght of the handle.\nfield SFFloat handleRadius 0.0055 # Defines the radius of the handle.\nfield SFColor handleColor 0.74 0.74 0.74 # Defines the color of the handle.\nfield SFFloat mass 0.3 # Defines the mass of the handle.</parameters>
	</proto>
	<proto>
		<name>CabinetDrawer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/cabinet/protos/CabinetDrawer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A drawer for the Cabinet PROTO.\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFString name &quot;cabinet drawer&quot;\nfield SFVec3f size 0.2 0.3 0.2 # Defines the size of the drawer.\nfield SFFloat thickness 0.03 # Defines the thickness of the drawer.\nfield SFFloat mass 1.5 # Defines the mass of the drawer.\nfield SFNode handle CabinetHandle {} # Defines the drawer handle.\nfield SFNode primaryAppearance NULL # Defines the primary appearance.\nfield SFNode secondaryAppearance NULL # Defines the secondary appearance.</parameters>
	</proto>
	<proto>
		<name>CabinetDoor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/cabinet/protos/CabinetDoor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A door for the Cabinet PROTO.\n</description>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFString name &quot;cabinet door&quot;\nfield SFVec3f size 0.2 0.3 0.2 # Defines the size of the door.\nfield SFBool rightSided TRUE # Defines on which side the door is connected.\nfield SFFloat thickness 0.03 # Defines the thickness of the door.\nfield SFFloat mass 1.5 # Defines the mass of the door.\nfield SFNode handle CabinetHandle {} # Defines door handle.\nfield SFNode secondaryAppearance NULL # Defines the secondary appearance.</parameters>
	</proto>
	<proto>
		<name>Cabinet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/cabinet/protos/Cabinet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable cabinet containing elements (shelves, dynamic doors, and drawers).\nThe internal cabinet layout is a grid in which the elements can be inserted.\nThe grid dimension (and so the cabinet size) is defined by the 'rowsHeights' and the 'columnsWidths' fields.\nThe `layout` field is defining the location and the dimension of the elements into the grid layout, according to the following syntax:\n- `layout`: list(&quot;[RightSidedDoor|LeftSiderDoor|Drawer|Shelf] (x, y, column span, row span[, mass])&quot;\n\nThe coordinate origin (1,1) of the grid layout is at the bottom left corner.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cabinet&quot;\nfield SFFloat depth 0.5 # Defines the depth of the cabinet.\nfield SFFloat innerThickness 0.02 # Defines the inner thickness of the cabinet frame.\nfield SFFloat outerThickness 0.03 # Defines the outer thickness of the cabinet frame.\nfield MFFloat rowsHeights [ # Defines the height of the cabinet rows.
 0.24
 0.2
 0.2
 0.4
 0.4
 ]\nfield MFFloat columnsWidths [ # Defines the width of the cabinet columns.
 0.4
 0.17
 0.17
 ]\nfield MFString layout [ # Defines the layout of the cabinet.
 &quot;RightSidedDoor (1, 4, 1, 2, 1.5)&quot;
 &quot;LeftSidedDoor (2, 4, 2, 2, 1.5)&quot;
 &quot;Drawer (3, 3, 1, 1, 1.5)&quot;
 &quot;Drawer (2, 2, 1, 1, 1.5)&quot;
 &quot;Drawer (3, 2, 1, 1, 1.5)&quot;
 &quot;Drawer (1, 1, 3, 1, 3.5)&quot;
 &quot;Shelf (1, 5, 3, 0)&quot;
 &quot;Shelf (1, 4, 3, 0)&quot;
 &quot;Shelf (1, 3, 3, 0)&quot;
 &quot;Shelf (1, 2, 3, 0)&quot;
 &quot;Shelf (1, 3, 0, 1)&quot;
 &quot;Shelf (2, 3, 0, 1)&quot;
 ]\nfield SFNode handle CabinetHandle {} # Defines the handle of the cabinet.\nfield SFNode primaryAppearance PaintedWood {} # Defines the primary appearance.\nfield SFNode secondaryAppearance PaintedWood {} # Defines the secondary appearance.</parameters>
	</proto>
	<proto>
		<name>BunchOfSunFlowers</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/plants/protos/BunchOfSunFlowers.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Five sun flowers into a pot (0.17 x 0.17 x 0.95 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bunch of sunflowers&quot;\nfield MFString flowerTextureUrl &quot;textures/bunch_of_sun_flowers_flower.png&quot; # Defines the textures used for the flowers.\nfield MFString leavesTextureUrl &quot;textures/bunch_of_sun_flowers_leaves.png&quot; # Defines the textures used for the leaves.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>PottedTree</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/plants/protos/PottedTree.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A potted tree (0.3 x 0.3 x 1.3 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;potted tree&quot;\nfield SFColor potAndTreeColor 1 1 1 # Defines the color of the pot and the three.\nfield MFString potAndTreeTextureUrl &quot;textures/potted_tree_pot_and_tree.jpg&quot; # Defines the textures used for of the pot and the three.\nfield SFColor leavesColor 1 1 1 # Defines the color of the leaves.\nfield MFString leavesTextureUrl &quot;textures/potted_tree_leaves.png&quot; # Defines the textures used for of the leaves.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>FlowerPot</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/plants/protos/FlowerPot.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A flower pot.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;flower pot&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>DoubleFluorescentLamp</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lights/protos/DoubleFluorescentLamp.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A double fluorescent lamp.\nIt does not contain any actual Light node, it only uses emissive color.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;double fuorescent lamp&quot;\nfield SFFloat intensity 10 # Defines the intensity of the emissive color.</parameters>
	</proto>
	<proto>
		<name>ConstructionLamp</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lights/protos/ConstructionLamp.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A construction lamp.\n</description>
		<parameters>field SFVec3f translation 0 0 0.07\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;construction lamp&quot;\nfield SFNode supportAppearance MetalPipePaint { } # Defines the appearance of the light support.\nfield SFColor spotLightColor 1 1 1 # Defines the color of the spot light.\nfield SFFloat spotLightIntensity 2 # Defines the intensity of the spot light.\nfield SFFloat spotLightRadius 100 # Defines the radius of the spot light.\nfield SFBool spotLightCastShadows FALSE # Defines whether the spot light should cast shadows.</parameters>
	</proto>
	<proto>
		<name>CeilingLight</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lights/protos/CeilingLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A ceiling light (0.19 x 0.19 x 0.8 m).\n</description>
		<parameters>field SFVec3f translation 0 0 2.4\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ceiling light&quot;\nfield SFColor bulbColor 1 1 1 # Defines the color of the light bulb.\nfield MFString bulbTextureUrl &quot;textures/light_bulb.jpg&quot; # Defines the texture used for the light bulb.\nfield SFColor supportColor 1 1 1 # Defines the color of the light support.\nfield MFString supportTextureUrl &quot;textures/light_support_base_color.jpg&quot; # Defines the texture used for the light support.\nfield SFColor pointLightColor 1 1 1 # Defines the color of the point light.\nfield SFFloat pointLightIntensity 1 # Defines the intensity of the point light.\nfield SFFloat pointLightRadius 100 # Defines the radius of the point light.\nfield SFBool pointLightCastShadows FALSE # Defines whether the point light should cast shadows.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>CeilingSpotLight</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lights/protos/CeilingSpotLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A ceiling spot light.\n</description>
		<parameters>field SFVec3f translation 0 0 1\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;ceiling light&quot;\nfield SFNode supportAppearance DamascusSteel { } # Defines the appearance of the light support.\nfield SFColor spotLightColor 1 1 1 # Defines the color of the spot light.\nfield SFFloat spotLightIntensity 1 # Defines the intensity of the spot light.\nfield SFFloat spotLightRadius 100 # Defines the radius of the spot light.\nfield SFBool spotLightCastShadows FALSE # Defines whether the spot light should cast shadows.</parameters>
	</proto>
	<proto>
		<name>FloorLight</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lights/protos/FloorLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A floor light (0.19 x 0.19 x 1.6 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;floor light&quot;\nfield SFColor bulbColor 1 1 1 # Defines the color of the light bulb.\nfield MFString bulbTextureUrl &quot;textures/light_bulb.jpg&quot; # Defines the texture used for the light bulb.\nfield SFColor supportColor 1 1 1 # Defines the color of the light support.\nfield MFString supportTextureUrl &quot;textures/light_support_base_color.jpg&quot; # Defines the texture used for the light support.\nfield SFColor pointLightColor 1 1 1 # Defines the color of the point light.\nfield SFFloat pointLightIntensity 1 # Defines the intensity of the point light.\nfield SFFloat pointLightRadius 100 # Defines the radius of the point light.\nfield SFBool pointLightCastShadows FALSE # Defines whether the point light should cast shadows.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Blackboard</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/school_furniture/protos/Blackboard.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A blackboard (about 1.3 x 2.5 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;blackboard&quot;\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>Clock</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/school_furniture/protos/Clock.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A clock (radius 16.5 cm).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;clock&quot;</parameters>
	</proto>
	<proto>
		<name>Book</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/school_furniture/protos/Book.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A book (0.02 x 0.15 x 0.2 m).\n</description>
		<parameters>field SFVec3f translation 0 0.1 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;book&quot;\nfield SFColor color 1 1 1 # Defines the color of the book.\nfield MFString textureUrl &quot;textures/book.jpg&quot; # Defines the texture used for the book.\nfield SFFloat mass 0.3 # Defines the mass of the book in kg.</parameters>
	</proto>
	<proto>
		<name>Barn</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Barn.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A barn.\nBased on the model of linus1178 (https://sketchfab.com/linus1178).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFString name &quot;barn&quot;</parameters>
	</proto>
	<proto>
		<name>ResidentialTowerFloor</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialTowerFloor.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 -0.013 0</parameters>
	</proto>
	<proto>
		<name>SmallResidentialBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SmallResidentialBuilding.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A small residential building with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential building&quot;\nfield SFString{&quot;white&quot;, &quot;braun black&quot;, &quot;red&quot;}
 type &quot;braun black&quot; # Defines the type which has a direct influence on the building texture.\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>SuburbanHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SuburbanHouse.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A suburban house with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;suburban house&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ModernHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ModernHouse.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple modern house.\nThe original blender model was made by andreschneider (http://www.blendswap.com/blends/view/65734).\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;modern house&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether to enable the bounding object or not.\nfield SFNode appearance PBRAppearance { baseColor 0.56 0.18 0.12 metalness 0 roughness 1 } # Defines the wall appearance.\nfield SFNode windowAppearance PBRAppearance { baseColor 0.38 0.55 0.69 metalness 0 roughness 0.2 } # Defines the windows appearance.</parameters>
	</proto>
	<proto>
		<name>SmallResidentialTowerBase</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SmallResidentialTowerBase.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>BuildingUnderConstruction</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/BuildingUnderConstruction.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Building under construction with scaffolding.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;building under construction&quot;</parameters>
	</proto>
	<proto>
		<name>UBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/UBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A building with a &quot;U&quot; form.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;U building&quot;</parameters>
	</proto>
	<proto>
		<name>Carwash</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Carwash.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A carwash with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;carwash&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the carwash should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ResidentialBuildingWithRoundFront</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialBuildingWithRoundFront.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A residential building with a rounded front face and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential building&quot;\nfield SFString{&quot;dark grey&quot;, &quot;orange&quot;, &quot;green&quot;, &quot;dark braun&quot;, &quot;light grey&quot;, &quot;light braun&quot;}
 type &quot;dark braun&quot; # Defines the type which has a direct influence on the building texture.\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>HollowBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/HollowBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A hollow building.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hollow building&quot;</parameters>
	</proto>
	<proto>
		<name>SimpleTwoFloorsHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SimpleTwoFloorsHouse.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple house with two floors.\nThe original blender model was made by andreschneider (http://www.blendswap.com/blends/view/59482).\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;simple two-storey house&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether to enable the bounding object.\nfield SFNode appearance PBRAppearance { baseColor 0.63 0.71 0.63 metalness 0 roughness 1 } # Defines the house appearance.</parameters>
	</proto>
	<proto>
		<name>ResidentialTower</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialTower.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A residential tower with variable number of floor and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential tower&quot;\nfield SFInt32 numberOfFloors 3 # Defines the number of floors of the tower.\nfield SFBool enableBoundingObject TRUE # Defines whether the towwer should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>LargeResidentialTowerRoof</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/LargeResidentialTowerRoof.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 -0.18 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>Church</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Church.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A church with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;church&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the church should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>SimpleBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SimpleBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable building, the size and geometry can fully be defined.\nThe texture of the wall and roof can be selected using the fields 'wallType' and 'roofType'.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;building&quot;\nfield SFFloat floorHeight 3 # Defines the height of one floor.\nfield SFInt32 floorNumber 3 # Defines the number of floors (excluding roof).\nfield SFInt32 startingFloor 0 # Defines the floor number for the &quot;ground floor&quot; of the building, as not all buildings start at the ground floor.\nfield MFVec2f corners [10 10, 10 -10, -10 -10, -10 10 ] # Defines the 2D geometry of the building (2D ground footprint of the building).\nfield SFString{&quot;glass building&quot;, &quot;classic building&quot;, &quot;orange building&quot;, &quot;gray glass building&quot;, &quot;blue glass building&quot;, &quot;arcade-style building&quot;, &quot;transparent highrise&quot;, &quot;windowed building&quot;, &quot;old brick building&quot;, &quot;red and white building&quot;, &quot;construction building&quot;, &quot;stone brick&quot;, &quot;stone wall&quot;, &quot;glass highrise&quot;, &quot;old house&quot;, &quot;old building&quot;, &quot;highrise&quot;, &quot;brick building&quot;, &quot;residential building&quot;, &quot;old office building&quot;, &quot;factory building&quot;, &quot;tall house&quot;, &quot;office building&quot;, &quot;concrete building&quot;}
 wallType &quot;windowed building&quot; # Defines the wall type.\nfield MFColor wallColor [] # Defines the wall color.\nfield MFString groundFloor [] # Defines the texture to be used for the first floor (optional).\nfield MFFloat groundFloorScale [] # Defines the horizontal scale of the ground texture.\nfield MFFloat groundFloorTranslation [] # Defines the translation of the ground floor textures.\nfield SFString{&quot;tiled&quot;, &quot;gravel&quot;, &quot;slate&quot;, &quot;old tiles&quot;, &quot;sheet metal&quot;, &quot;metal tiles&quot;, &quot;bitumen&quot;}
 roofType &quot;tiled&quot; # Defines roof type.\nfield MFColor roofColor [] # Defines the roof color.\nfield SFString{&quot;flat roof&quot;, &quot;pyramidal roof&quot;, &quot;gabled roof&quot;, &quot;hipped roof&quot;}
 roofShape &quot;pyramidal roof&quot; # Defines the geometry of the roof.\nfield SFBool snowOnRoof FALSE # Defines whether the texture with or without snow should be used.\nfield SFFloat roofHeight 3 # Defines the height of the roof.\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object or not.\nfield SFBool bottom FALSE # Defines whether the bottom face of the building should be displayed.</parameters>
	</proto>
	<proto>
		<name>LargeResidentialTowerBase</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/LargeResidentialTowerBase.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFBool surroundingWall TRUE</parameters>
	</proto>
	<proto>
		<name>FastFoodRestaurant</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/FastFoodRestaurant.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable fast food restaurant.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;fast food restaurant&quot;\nfield SFFloat height 4 # Defines the height of the building.\nfield SFFloat length 10 # Defines the length of the building.\nfield SFFloat width 10 # Defines the width of the building.\nfield SFString{&quot;KFC&quot;, &quot;FFC&quot;, &quot;subway&quot;, &quot;momo&quot;}
 brand &quot;KFC&quot; # Defines the brand of the restaurant.\nfield SFInt32{1, 2} numberOfSides 1 # Defines whether it is a two sided restaurant.</parameters>
	</proto>
	<proto>
		<name>SmallManor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SmallManor.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A small manor with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;small manor&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the manor should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ResidentialTowerBase</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialTowerBase.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
	</proto>
	<proto>
		<name>StripBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/StripBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A strip of buildings of variable length.\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;strip building&quot;\nfield SFFloat length 100 # Defines the minimum length of the strip (actual length is slightly bigger because buildings are not cut).\nfield SFInt32 randomSeed 1 # Defines the seed of the random number generator. A value smaller or equal to 0 sets a random seed.\nfield SFBool enableBoundingObject TRUE # Defines whether the buildings should have bounding objects.</parameters>
	</proto>
	<proto>
		<name>RandomBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/RandomBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable building, the size and geometry can fully be defined.\nThe texture of the wall is selected randomly.\nThe roof shape can be either 'flat' or 'pyramidal' (in case of pyramidal roof it is possible to define the height).\n</description>
		<tags>nonDeterministic</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;building&quot;\nfield SFFloat floorHeight 3 # Defines the height of one floor.\nfield SFInt32 floorNumber 3 # Defines the number of floors (excluding roof).\nfield SFInt32 startingFloor 0 # Defines the floor number for the &quot;ground floor&quot; of the building, as not all buildings start at the ground floor.\nfield MFVec2f corners [10 10, 10 -10, -10 -10, -10 10 ] # Defines the geometry of the building.\nfield MFString groundFloor [] # Defines the texture to be used for the first floor (optional).\nfield MFFloat groundFloorScale [] # Defines the horizontal scale of the ground texture.\nfield MFFloat groundFloorTranslation [] # Defines the translation of the ground floor textures.\nfield SFString{&quot;tiled&quot;, &quot;gravel&quot;, &quot;slate&quot;, &quot;old tiles&quot;, &quot;sheet metal&quot;, &quot;metal tiles&quot;, &quot;bitumen&quot;}
 roofType &quot;tiled&quot; # Defines the texture to be used for the roof.\nfield MFColor roofColor [ ] # Defines the color to be used for the roof.\nfield SFString{&quot;flat roof&quot;, &quot;pyramidal roof&quot;, &quot;gabled roof&quot;, &quot;hipped roof&quot;}
 roofShape &quot;pyramidal roof&quot; # Defines the geometry of the roof.\nfield SFBool snowOnRoof FALSE # Defines whether the texture with or without snow should be used.\nfield SFFloat roofHeight 3 # Defines the height of the roof (used only in the case of pyramidal roof).\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object or not.\nfield SFBool bottom FALSE # Defines whether the building should have a floor (visible from below) or not.</parameters>
	</proto>
	<proto>
		<name>ModernSuburbanHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ModernSuburbanHouse.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A modern suburban house with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;suburban house&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the house should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>OldResidentialBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/OldResidentialBuilding.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>An old residential building with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential building&quot;\nfield SFString{&quot;red grey&quot;, &quot;dark grey&quot;, &quot;light grey&quot;, &quot;red&quot;, &quot;braun&quot;}
 type &quot;braun&quot; # Defines the type which has a direct influence on the building texture.\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ResidentialBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A residential building.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential building&quot;</parameters>
	</proto>
	<proto>
		<name>LargeResidentialTowerFloor</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/LargeResidentialTowerFloor.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 -0.18 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>Windmill</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Windmill.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A windmill with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;windmill&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the windmill should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>BigGlassTower</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/BigGlassTower.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A big glass tower.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;big glass tower&quot;</parameters>
	</proto>
	<proto>
		<name>SmallResidentialTowerFloor</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SmallResidentialTowerFloor.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 0 0</parameters>
	</proto>
	<proto>
		<name>Museum</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Museum.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An old museum.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;museum&quot;</parameters>
	</proto>
	<proto>
		<name>Warehouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Warehouse.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A warehouse with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;warehouse&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the warehouse should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ResidentialTowerRoof</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ResidentialTowerRoof.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<tags>hidden</tags>
		<parameters>field SFVec3f translation 0 -0.007 0</parameters>
	</proto>
	<proto>
		<name>TheThreeTowers</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/TheThreeTowers.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A group of three towers.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;three towers&quot;</parameters>
	</proto>
	<proto>
		<name>CommercialBuilding</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/CommercialBuilding.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A commercial building.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;commercial building&quot;</parameters>
	</proto>
	<proto>
		<name>ComposedHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/ComposedHouse.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A house composed of several parts with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;composed house&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the house should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>HouseWithGarage</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/HouseWithGarage.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A house with a garage and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;house with garage&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the house should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>BungalowStyleHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/BungalowStyleHouse.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A configurable bungalow style house.\nThe original blender model was made by noenmaster (http://www.blendswap.com/blends/view/66305).\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;bungalow style house&quot;\nfield SFBool fence TRUE # Defines whether the house has a fence or not.\nfield SFBool floor TRUE # Defines whether the house is built on a wooden base layer or not.\nfield SFBool chimney TRUE # Defines whether the house has a chimney or not.\nfield SFBool enableBoundingObject TRUE # Defines whether to enable the bounding object or not.\nfield SFNode appearance PBRAppearance { baseColor 0.52 0.73 0.76 roughness 1 metalness 0 } # Defines the appearance of the wall.\nfield SFNode floorAppearance PBRAppearance { baseColor 0.27 0.14 0.03 roughness 1 metalness 0 } # Defines the appearance of the floor.\nfield SFNode fenceAppearance RoughPine { textureTransform TextureTransform { scale 10 10 } } # Defines the appearance of the fence.</parameters>
	</proto>
	<proto>
		<name>GasStation</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/GasStation.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A gas station with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;gas station&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the gas station should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>CyberboticsTower</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/CyberboticsTower.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>The Cyberbotics tower.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;Cyberbotics tower&quot;</parameters>
	</proto>
	<proto>
		<name>Building</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Building.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable building, the size, appearance and geometry can fully be defined.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;building&quot; # Defines the name of the building.\nfield SFFloat floorHeight 3 # Defines the height of one floor.\nfield SFInt32 floorNumber 3 # Defines the number of floors (excluding roof).\nfield SFInt32 startingFloor 0 # Defines the floor number for the &quot;ground floor&quot; of the building, as not all buildings start at the ground floor.\nfield MFVec2f corners [10 10, 10 -10, -10 -10, -10 10 ] # Defines the 2D geometry of the building (2D ground footprint of the building).\nfield SFNode wallAppearance PBRAppearance { metalness 0 roughness 1 } # Defines the appearance used for the walls of the building.\nfield MFString groundFloor [] # Defines the texture to be used for the first floor (optional).\nfield MFFloat groundFloorScale [] # Defines the horizontal scale of the ground texture.\nfield MFFloat groundFloorTranslation [] # Defines the translation of the ground floor textures.\nfield SFNode roofAppearance PBRAppearance { metalness 0 roughness 1 } # Defines the appearance used for the roof of the building.\nfield SFString{&quot;flat roof&quot;, &quot;pyramidal roof&quot;, &quot;gabled roof&quot;, &quot;hipped roof&quot;}
 roofShape &quot;pyramidal roof&quot; # Defines the geometry of the roof.\nfield SFFloat roofHeight 3 # Defines the height of the roof (used only in the case of pyramidal roof).\nfield SFBool enableBoundingObject TRUE # Defines whether the building should have a bounding object.\nfield SFBool bottom FALSE # Defines whether the bottom face of the building should be displayed.\nfield SFString model &quot;building&quot; # Is `Solid.model`.\nfield MFColor recognitionColors [] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>LargeResidentialTower</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/LargeResidentialTower.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A large residential tower with variable number of floors and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential tower&quot;\nfield SFInt32 numberOfFloors 4 # Defines the number of floors of the tower.\nfield SFBool groundSurroundingWall TRUE # Defines whether to include a surrounding wall at the ground floor.\nfield SFBool enableBoundingObject TRUE # Defines whether the tower should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Hotel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Hotel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A big hotel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hotel&quot;</parameters>
	</proto>
	<proto>
		<name>SmallResidentialTower</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/SmallResidentialTower.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A small residential tower with variable number of floor and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;residential tower&quot;\nfield SFInt32 numberOfFloors 3 # Defines the number of floors of the tower.\nfield SFBool enableBoundingObject TRUE # Defines whether the tower should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>MotelReception</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/MotelReception.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A motel reception with optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;motel reception&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the motel reception should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Auditorium</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/buildings/protos/Auditorium.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A classic auditoruim.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;auditorium&quot;</parameters>
	</proto>
	<proto>
		<name>LegoWheel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lego/protos/LegoWheel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>LEGO Mindstrom EV 3 wheel. Parts id: 4634091 &amp; 6035364.\n</description>
		<parameters>field SFVec3f translation 0 0 0.0219974\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;LEGO wheel&quot;</parameters>
	</proto>
	<proto>
		<name>LegoLargeMotor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/lego/protos/LegoLargeMotor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>LEGO Mindstorm EV3 large motor. Part id: 6009430.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;LEGO large motor&quot;</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>SolidRoundedBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/solids/protos/SolidRoundedBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A box object with rounded corners and edges implemented at the Solid-node level.\nThe box has similar properties as the VRML Box node in term of axis and fields.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rounded box&quot;\nfield SFVec3f size 2 2 2 # Defines the size of the box.\nfield SFFloat borderRadius 0.5 # Defines the radius of the box borders.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the box and so its resolution.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFNode appearance PBRAppearance { baseColorMap ImageTexture { url [ &quot;webots://projects/default/worlds/textures/tagged_wall.jpg&quot; ] } metalness 0 roughness 0.5 } # Defines the appearance of the box.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool enableBoundingObject TRUE # Defines whether the solid should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>SolidTorus</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/solids/protos/SolidTorus.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A torus object implemented at the Solid-node level.\nGraphically, the SolidTorus is defined as an IndexedFaceSet.\nPhysically, the SolidTorus is defined as a set of N spheres, where N is the subdivision field.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;torus&quot;\nfield SFFloat majorRadius 2 # Defines the major radius of the torus.\nfield SFFloat minorRadius 1 # Defines the minor radius of the torus.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the torus and so its resolution.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFNode appearance PBRAppearance { baseColorMap ImageTexture { url [ &quot;webots://projects/default/worlds/textures/tagged_wall.jpg&quot; ] } metalness 0 roughness 0.5 } # Defines the appearance of the torus.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool enableBoundingObject TRUE # Defines whether the solid should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>SolidBox</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/solids/protos/SolidBox.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A box object implemented at the Solid-node level.\nThe box has similar properties as the VRML Box node in term of axis and fields.\nThe UV-mapping is defined in a metric way (the textures are not deformed - the reference is the longest edge).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;box&quot;\nfield SFVec3f size 2 2 2 # Defines the size of the box. # Defines the number of polygons used to represent the box and so its resolution.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFNode appearance PBRAppearance { baseColorMap ImageTexture { url [ &quot;webots://projects/default/worlds/textures/tagged_wall.jpg&quot; ] } metalness 0 roughness 0.5 } # Defines the appearance of the box.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool enableBoundingObject TRUE # Defines whether the solid should have a bounding object.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.\nfield MFColor recognitionColors [] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>SolidPipe</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/solids/protos/SolidPipe.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A pipe object implemented at the Solid-node level.\nGraphically, the SolidPipe is an IndexedFaceSet.\nPhysically, the SolidPipe is a set of N boxes, where N is the subdivision field.\nThe 'accuracy' field defines how much boxes position can differ on z-axis: a 0 value represents an error-free model but it will slow down the simulation.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pipe&quot;\nfield SFFloat height 2 # Defines the height of the pipe.\nfield SFFloat radius 1 # Defines the radius of the pipe.\nfield SFFloat thickness 0.1 # Defines the thickness of the pipe.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the pipe and so its resolution.\nfield SFFloat accuracy 0.0001 # Defines how much boxes position can differ on y-axis: a 0 value represents an error-free model but it will slow down the simulation.\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFNode appearance PBRAppearance { baseColorMap ImageTexture { url [ &quot;webots://projects/default/worlds/textures/tagged_wall.jpg&quot; ] } metalness 0 roughness 0.5 } # Defines the appearance of the pipe.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFBool enableBoundingObject TRUE # Defines whether the solid should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>PedestrianCrossing</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/PedestrianCrossing.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A pedestrian crossing 20 x 8 meters (0.1m thick).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pedestrian crossing&quot;\nfield SFVec3f scale 1 1 1\nfield SFVec2f size 20 8 # Defines the size of the pedestrian crossing.\nfield SFInt32 textureFiltering 4 # Defines the filtering level for the texture used for the pedestrian crossing.\nfield SFBool enableBoundingObject TRUE # Defines whether the pedestrian crossing should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>ExitSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/ExitSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Exit sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;exit sign&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the panel.\nfield MFNode signBoards [ ExitPanel { translation 0 0 -0.051 } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>CrossRoadsTrafficLight</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/CrossRoadsTrafficLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Four roads crossing traffic light.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;cross road traffic light&quot;\nfield SFString controller &quot;crossroads_traffic_lights&quot; # Is `Robot.controller`.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFVec2f size 20.8 20.8 # Defines the size of the traffic lights.</parameters>
	</proto>
	<proto>
		<name>RectangularPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/RectangularPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple rectangular traffic pannel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rectangular panel&quot;\nfield MFString signImage &quot;textures/signs/eu/dead_end.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield SFVec2f size 0.5 0.5 # Defines the size of the panel.\nfield MFColor recognitionColors [ 0 0.5 0.76, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>OrderPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/OrderPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Order panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;order panel&quot;\nfield MFString signImage &quot;textures/signs/do_not_enter.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield MFColor recognitionColors [ 0.75 0.17 0.22, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>StopSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/StopSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Stop sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;stop sign&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the sign.\nfield MFNode signBoards [ StopPanel { translation 0 0 -0.097 } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>StopPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/StopPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Stop panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;stop panel&quot;\nfield MFString signImage &quot;textures/signs/stop.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the panel.\nfield MFColor recognitionColors [ 0.75 0.25 0.12, 0.58 0.58 0.58 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>Pole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/Pole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A metallic pole for the traffic lights.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pole&quot;\nfield MFNode slot [] # Extends the pole with panels or traffic lights.</parameters>
	</proto>
	<proto>
		<name>TrafficLightStandardLampGeometry</name>
		<base-type>Sphere</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficLightStandardLampGeometry.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A traffic light lamp with a standard geometry.\n</description>
	</proto>
	<proto>
		<name>TrafficLightHorizontal</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficLightHorizontal.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Horizontal traffic light without lamp to put on the big pole above the road.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;horizontal traffic light&quot;\nfield SFString red_light &quot;red light&quot; # Defines the name of the red LED device.\nfield SFString orange_light &quot;orange light&quot; # Defines the name of the orange LED device.\nfield SFString green_light &quot;green light&quot; # Defines the name of the green LED device.\nfield SFNode lamp_geometry NULL # Defines the geometry of the lamps.\nfield SFRotation lamp_rotation 0 0 1 0 # Defines the rotation of the lamps.\nfield MFColor recognitionColors [ 0.25 0.25 0.25, 0 0 0 ] # Is `Solid.recognitionColors`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>YieldPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/YieldPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Yield panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;yield panel&quot;\nfield MFString signImage &quot;textures/signs/us/yield.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield SFFloat textureRotation 0 # Defines the rotation of the texture used for the sign.\nfield MFColor recognitionColors [ 0.7 0.12 0.18, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>CautionPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/CautionPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Caution panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;caution panel&quot;\nfield MFString signImage &quot;textures/signs/us/traffic_signals_ahead.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield MFColor recognitionColors [ 1 0.82 0.2, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>StreetLight</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/StreetLight.proto</url>
		<license>Creative Commons Attribution 3.0 United States License (original model by Andrew Kator &amp; Jennifer Legaz).</license>
		<license-url>https://creativecommons.org/licenses/by/3.0/legalcode</license-url>
		<description>Simple model of a street light including a customizable SpotLight.\nThis model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;street light&quot;\nfield SFFloat beamWidth 1.1 # Defines the beam width of the spot light.\nfield SFColor color 1 1 1 # Defines the color of the spot light.\nfield SFFloat cutOffAngle 1.4 # Defines the cut-off angle of the spot light.\nfield SFVec3f direction 0.1 0 -1 # Defines the direction of the spot light.\nfield SFBool on TRUE # Defines whether the spot light is on or off.\nfield SFFloat radius 1000 # Defines the radius of the spot light.\nfield SFFloat intensity 30 # Defines the radius of the spot light.\nfield SFBool castShadows FALSE # Defines whether the spot light casts shadows.</parameters>
	</proto>
	<proto>
		<name>OrderSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/OrderSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Order sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;order sign&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the sign.\nfield MFNode signBoards [ OrderPanel { translation 0.026 0 -0.175 } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>TrafficLightArrowLampGeometry</name>
		<base-type>IndexedFaceSet</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficLightArrowLampGeometry.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A traffic light lamp with an adjustable arrow.\n</description>
	</proto>
	<proto>
		<name>DivergentIndicator</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/DivergentIndicator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A divergent indicator block.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;divergent indicator&quot;\nfield MFString texture &quot;textures/divergent_indicator.jpg&quot; # Defines the texture used by the divergent indicator.\nfield SFFloat height 1 # Defines the height of the divergent indicator.\nfield SFFloat radius 0.5 # Defines the radius of the divergent indicator.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the divergent indicator cylindrical part and so its resolution .</parameters>
	</proto>
	<proto>
		<name>WorkBarrier</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/WorkBarrier.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A work barrier with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;work barrier&quot;\nfield SFBool enablePhysics FALSE # Defines whether the barrier should have physics.</parameters>
	</proto>
	<proto>
		<name>SignPole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/SignPole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable direction panel on pole with the possibility of adding more panels.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sign pole&quot;\nfield SFFloat height 2.2 # Defines the height of the sign.\nfield SFFloat radius 0.02 # Defines the radius of the sign.\nfield SFColor color 0.258824 0.258824 0.258824 # Defines the color of the pole.\nfield MFNode signBoards [ DirectionPanel {} ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>TrafficLightBigPole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficLightBigPole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A big metallic pole above the road for traffic lights.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;traffic light big pole&quot;\nfield MFNode slot1 [] # Extends the pole with a traffic light located in the middle of the vertical part of the pole.\nfield MFNode slot2 [] # Extends the pole with a traffic light located in the begining of the horizontal part of the pole.\nfield MFNode slot3 [] # Extends the pole with a traffic light located in the end of the horizontal part of the pole.</parameters>
	</proto>
	<proto>
		<name>TrafficLight</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Basic traffic light without lamp.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;traffic light&quot;\nfield SFString red_light &quot;red light&quot; # Defines the name of the red LED device.\nfield SFString orange_light &quot;orange light&quot; # Defines the name of the orange LED device.\nfield SFString green_light &quot;green light&quot; # Defines the name of the green LED device.\nfield SFNode lamp_geometry NULL # Defines the geometry of the lamps.\nfield SFRotation lamp_rotation 0 0 1 0 # Defines the rotation of the lamps.\nfield MFColor recognitionColors [ 0.25 0.25 0.25, 0 0 0 ] # Is `Solid.recognitionColors`.</parameters>
		<needs-robot-ancestor>true</needs-robot-ancestor>
	</proto>
	<proto>
		<name>ParkingMeter</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/ParkingMeter.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A parking meter.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;parking meter&quot;</parameters>
	</proto>
	<proto>
		<name>GenericTrafficLight</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/GenericTrafficLight.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A generic traffic light with configurable timming.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;generic traffic light&quot;\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool startGreen TRUE # Defines whether the traffic light should start in a 'green' state or 'red' state.\nfield SFFloat greenTime 60 # Defines how long should be the green state in seconds.\nfield SFFloat redTime 15 # Defines how long should be the red state in seconds.\nfield SFString state &quot;off&quot; # Defines the current state of the traffic light, this field is automatically updated when the state change.</parameters>
	</proto>
	<proto>
		<name>HighwaySign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/HighwaySign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Resizable sign with front texture option.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;highway sign&quot;\nfield SFFloat height 3 # Defines the height of the sign.\nfield SFFloat length 4.5 # Defines the lenght of the sign.\nfield SFFloat thickness 0.2 # Defines the thickness of the sign.\nfield SFColor color 0.258824 0.258824 0.258824 # Defines the color of the sign.\nfield MFString texture &quot;webots://projects/objects/traffic/protos/textures/highway_sign_bordeaux.jpg&quot; # Defines the texture used for the sign.\nfield MFColor recognitionColors [ 0.08 0.22 0.75, 0.26 0.26 0.26 ] # Is `Solid.recognitionColorsrecognitionColors`.</parameters>
	</proto>
	<proto>
		<name>ParkingLines</name>
		<base-type>Transform</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/ParkingLines.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Parking lines for several consecutive cars.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFInt32 numberOfCarParks 5 # Defines the number of parks.\nfield SFFloat carParkLength 4.8 # Defines the length of one park.\nfield SFFloat carParkWidth 2.4 # Defines the width of one park.\nfield MFString texture &quot;textures/parking_lines.png&quot; # Defines the texture used for the lines.</parameters>
	</proto>
	<proto>
		<name>ExitPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/ExitPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Exit panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;exit panel&quot;\nfield MFString signImage &quot;textures/signs/exit.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield MFColor recognitionColors [ 0 0.4 0.3, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>HighwayPole</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/HighwayPole.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable highway pole with the possibility of adding another stand and more signs along the vertical or horizontal parts of the pole.\nDifferent types of poles are available: &quot;cylinder&quot;, &quot;box&quot;, or &quot;H-shape&quot;.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;highway pole&quot;\nfield SFString{&quot;cylinder&quot;, &quot;box&quot;, &quot;H-shape&quot;}
 type &quot;cylinder&quot; # Defines the shape of the pole.\nfield SFInt32{1, 2} stand 1 # Defines the number of stands.\nfield SFFloat height 6 # Defines the height of the pole.\nfield SFFloat length 8 # Defines the length of the pole.\nfield SFFloat thickness 0.2 # Defines the thickness of the pole.\nfield SFColor color 0.258824 0.258824 0.258824 # Defines the color of the pole.\nfield SFFloat curveRadius 0.4 # Defines the curvature radius of the pole.\nfield MFNode rightHorizontalSigns [ HighwaySign { name &quot;vertical sign&quot; } ] # Defines the horizontal signs on the right side of the pole.\nfield MFNode rightVerticalSigns [ HighwaySign { name &quot;horizontal sign&quot; height 2.1 length 3.2 texture &quot;webots://projects/objects/traffic/protos/textures/highway_sign_la_ciotat.jpg&quot; } ] # Defines the vertical signs on the right side of the pole.\nfield MFNode leftHorizontalSigns [ ] # Defines the horizontal signs on the left side of the pole.\nfield MFNode leftVerticalSigns [ ] # Defines the vertical signs on the left side of the pole.</parameters>
	</proto>
	<proto>
		<name>DirectionPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/DirectionPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Resizable direction panel with two customizable sides.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;direction panel&quot;\nfield SFFloat width 1.3 # Defines the width of the panel.\nfield SFFloat height 0.4 # Defines the height of the panel.\nfield SFFloat thickness 0.04 # Defines the thickness of the panel.\nfield MFString frontTextTexture &quot;textures/no_text_front.png&quot; # Defines the texture to display on the front side.\nfield MFString backTextTexture &quot;textures/no_text_back.png&quot; # Defines the texture to display on the back side.</parameters>
	</proto>
	<proto>
		<name>CautionSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/CautionSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Caution sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;caution sign&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the sign.\nfield MFNode signBoards [ CautionPanel { translation 0 0 -0.17 } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>TrafficCone</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/TrafficCone.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic cone.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;traffic cone&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>ControlledStreetLight</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/ControlledStreetLight.proto</url>
		<license>Creative Commons Attribution 3.0 United States License (original model by Andrew Kator &amp; Jennifer Legaz).</license>
		<license-url>https://creativecommons.org/licenses/by/3.0/legalcode</license-url>
		<description>Simple model of a controlled street light including a customizable SpotLight.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;street light&quot;\nfield SFString controller &quot;defective_street_light&quot; # Defines the controller used to make the LED blink.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFFloat beamWidth 1.1 # Defines the beam width of the spot light.\nfield MFColor color [ 1 0.9 0.8 ] # Defines the color of the spot light.\nfield SFFloat cutOffAngle 1.4 # Defines the cut-off angle of the spot light.\nfield SFVec3f direction 0.1 0 -1 # Defines the direction of the spot light.\nfield SFFloat radius 1000 # Defines the radius of the spot light.\nfield SFBool castShadows FALSE # Defines whether the spot light casts shadows.</parameters>
	</proto>
	<proto>
		<name>SpeedLimitPanel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/SpeedLimitPanel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic panel: Speed limit panel (5mph to 80mph) or one way panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;speed limit panel&quot;\nfield MFString signImage &quot;textures/signs/us/speed_limit_45.jpg&quot; # Defines the texture used for the sign.\nfield SFColor color 0.8 0.8 0.8 # Defines the color of the panel.\nfield MFColor recognitionColors [ 1 1 1, 0.8 0.8 0.8 ] # Is `Solid.recognitionColors`.</parameters>
	</proto>
	<proto>
		<name>YieldSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/YieldSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Yield sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;yield sign&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the sign.\nfield MFNode signBoards [ YieldPanel { } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>SpeedLimitSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/traffic/protos/SpeedLimitSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Traffic sign: Speed limit sign (5mph to 80mph) or one way sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;speed limit&quot;\nfield SFFloat height 2 # Defines the height of the sign.\nfield SFFloat radius 0.03 # Defines the radius of the sign pole.\nfield SFColor color 0.576471 0.576471 0.576471 # Defines the color of the sign.\nfield MFNode signBoards [ SpeedLimitPanel { translation 0.023 0 0 } ] # Defines the boards.</parameters>
	</proto>
	<proto>
		<name>Panel</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/panels/protos/Panel.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Customizable simple panel.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;panel&quot;\nfield SFVec3f size 0.05 1.2 1.5 # Defines the size of the panel.\nfield SFFloat borderHeight 0.05 # Defines the height of the border.\nfield SFFloat internalWidth 0.02 # Defines the width of the panel (without border).\nfield SFInt32 panelsCount 2 # Defines the number of panels.\nfield SFNode appearance VarnishedPine { textureTransform TextureTransform { scale 5 5 } } # Defines the appearance of the panel body.\nfield SFNode borderAppearance BrushedAluminium {} # Defines the appearance of the panel border(s).</parameters>
	</proto>
	<proto>
		<name>PanelWithTubes</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/panels/protos/PanelWithTubes.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A gray panel with tubes.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;panel with tubes&quot;\nfield SFNode appearance BrushedAluminium { textureTransform TextureTransform { scale 3 3 } } # Defines the appearance of the panel.</parameters>
	</proto>
	<proto>
		<name>PannelWithTubes</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/panels/protos/PannelWithTubes.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A gray panel with tubes.\n</description>
		<tags>hidden,deprecated</tags>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;panel with tubes&quot;\nfield SFNode appearance BrushedAluminium { textureTransform TextureTransform { scale 3 3 } } # Defines the appearance of the panel.</parameters>
	</proto>
	<proto>
		<name>Sofa</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/living_room_furniture/protos/Sofa.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A sofa for two people (1 x 1.8 x 0.8 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;sofa&quot;\nfield SFColor color 1 1 1 # Defines the color of the sofa.\nfield MFString textureUrl &quot;textures/sofa.jpg&quot; # Defines the texture used for the sofa.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Carpet</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/living_room_furniture/protos/Carpet.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A carpet (2.4 x 1.6 x 0.02 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;carpet&quot;\nfield SFColor color 1 1 1 # Defines the color of the carpet.</parameters>
	</proto>
	<proto>
		<name>Armchair</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/living_room_furniture/protos/Armchair.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An armchair (1 x 1.1 x 0.8 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;armchair&quot;\nfield SFColor color 1 1 1 # Defines the color of the armchair.\nfield MFString textureUrl &quot;textures/sofa.jpg&quot; # Defines the texture used for the armchair.\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>IntermodalContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/freight/protos/IntermodalContainer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An intermodal container is a large standardized shipping container, designed and built for intermodal freight transport, meaning these containers can be used across different modes of transport – from ship to rail to truck – without unloading and reloading their cargo.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;container&quot; # Is `Solid.name`.\nfield SFColor color 0.9 0.1 0.1 # Defines the color.</parameters>
	</proto>
	<proto>
		<name>IntermodalOfficeContainer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/freight/protos/IntermodalOfficeContainer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An intermodal container is a large standardized shipping container, designed and built for intermodal freight transport, meaning these containers can be used across different modes of transport – from ship to rail to truck – without unloading and reloading their cargo.\nAn intermodal container with an office room.\n</description>
		<parameters>field SFVec3f translation 0 0 0 # Is `Transform.translation`.\nfield SFRotation rotation 0 0 1 0 # Is `Transform.rotation`.\nfield SFString name &quot;office&quot; # Is `Solid.name`.\nfield SFColor primaryColor 0.9 0.1 0.1 # Defines the primary color.\nfield SFColor secondaryColor 0.6 0.6 0.6 # Defines the secondary color.</parameters>
	</proto>
	<proto>
		<name>RubberDuck</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/toys/protos/RubberDuck.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A rubber yellow duck (7.42 x 10.66 x 10.13 cm).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;rubber duck&quot;\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield SFColor bodyColor 0.87451 0.756863 0.113725 # Defines the color of the rubber duck.\nfield SFFloat density 400 # Defines density of the rubber duck in kg / m^3.\nfield MFNode immersionProperties [ # Is `Solid.immersionProperties`.
 ImmersionProperties {
 fluidName &quot;water&quot;
 viscousResistanceForceCoefficient 400
 viscousResistanceTorqueCoefficient 0.5
 }
 ]</parameters>
	</proto>
	<proto>
		<name>PaperBoat</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/toys/protos/PaperBoat.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A paper boat (42.8 x 10.6 x 14.2 cm).\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;paper boat&quot;\nfield SFFloat scale 1 # Defines the global scaling factor.\nfield MFString textureUrl &quot;PaperBoat/textures/newspaper.jpg&quot; # Defines the texture used for the paper boat.\nfield SFFloat mass 0.25 # Defines the mass of the paper boat in kg.\nfield MFNode immersionProperties [ # Is `Solid.immersionProperties`.
 ImmersionProperties {
 fluidName &quot;water&quot;
 dragForceCoefficients 0.05 0 0
 viscousResistanceForceCoefficient 200
 }
 ]</parameters>
	</proto>
	<proto>
		<name>DripStand</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/DripStand.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A drip stand.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;drip stand&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>HandSanitizer</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/HandSanitizer.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A hand sanitizer bottle.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hand sanitizer&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>HospitalBed</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/HospitalBed.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An hospital bed.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;hospital bed&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>Curtain</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/Curtain.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A curtain.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;curtain&quot;\nfield SFColor baseColor 0.672885 0.8 0.650323</parameters>
	</proto>
	<proto>
		<name>MedicineBottle</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/MedicineBottle.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A bottle of medicine.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;medicine bottle&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>EmergencyExitSign</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/hospital/protos/EmergencyExitSign.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An emergency exit sign.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;emergency exit sign&quot;\nfield SFNode physics NULL # Is `Solid.physics`.</parameters>
	</proto>
	<proto>
		<name>PortraitPainting</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/paintings/protos/PortraitPainting.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A painting (0.05 x 0.82 x 1.01 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0.505\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;portrait painting&quot;\nfield SFColor color 1 1 1 # Defines the color of the painting.\nfield MFString textureUrl &quot;textures/portrait_painting.jpg&quot; # Defines the texure used for the painting.</parameters>
	</proto>
	<proto>
		<name>LandscapePainting</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/paintings/protos/LandscapePainting.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A painting (0.05 x 1.5 x 1 m).\n</description>
		<parameters>field SFVec3f translation 0 0 0.5\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;landscape painting&quot;\nfield SFColor color 1 1 1 # Defines the color of the painting.\nfield MFString textureUrl &quot;textures/landscape_painting.jpg&quot; # Defines the texure used for the painting.</parameters>
	</proto>
	<proto>
		<name>RobotstadiumSoccerField</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/robotstadium/protos/RobotstadiumSoccerField.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Robot soccer field inspired from the RoboCup 2014 Standard Platform League.\nThe soccer field is built on a total carpet area of length 10.4 m and width 7.4 m.\nThe field dimensions (within the white lines) are 9 x 6 m.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;robotstadium soccer field&quot;\nfield SFString contactMaterial &quot;default&quot; # Is `Solid.contactMaterial`.\nfield SFColor frame1Color 1 1 1 # Defines the color of the first goal frame.\nfield SFColor frame2Color 1 1 1 # Defines the color of the second goal frame.\nfield SFFloat postRadius 0.05 # Defines the radius of the goal posts.</parameters>
	</proto>
	<proto>
		<name>RobotstadiumGoal</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/robotstadium/protos/RobotstadiumGoal.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Robot soccer goal inspired from the RoboCup 2013-2014 Standard Platform League.\nThe color of the goal and the support polygons can be modified.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;robotstadium goal&quot;\nfield SFFloat postRadius 0.05 # Defines the radius of the goal posts.\nfield SFColor frameColor 1 1 1 # Defines the color of the goal frame.</parameters>
	</proto>
	<proto>
		<name>GenericDoorAppearance</name>
		<base-type>PBRAppearance</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/GenericDoorAppearance.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A generic varnished, painted wooden door's appearance.\n</description>
		<parameters>field SFColor colorOverride 1 1 1 # Defines the color to be multiplied with the texture color.</parameters>
	</proto>
	<proto>
		<name>Radiator</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/Radiator.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A radiator with a variable number of fins and optional bounding object.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;radiator&quot;\nfield SFInt32 numberOfFins 10\nfield SFNode finAppearance Roughcast { textureTransform TextureTransform { scale 3 3 } } # Defines the appearance of the fins.\nfield SFNode tubeAppearance HammeredCopper { } # Defines the appearance of the input and ouput tubes.\nfield SFBool enableBoundingObject TRUE # Defines whether the radiator should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Window</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/Window.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable window including walls above and below.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;window&quot;\nfield SFVec3f size 0.2 0.8 2.4 # Defines the size of the window.\nfield SFFloat windowThickness 0.05 # Defines the thickness of the window.\nfield SFFloat bottomWallHeight 0.7 # Defines the height of the top wall.\nfield SFFloat windowHeight 1.4 # Defines the height of the window.\nfield SFVec3f frameSize 0.05 0.02 0.05 # Defines the size of the window frame.\nfield SFVec2f windowSillSize 0.1 0.05 # Defines the size of the sill below the window.\nfield SFNode wallAppearance Roughcast {} # Defines the appearance of the wall.\nfield SFNode frameAppearance VarnishedPine {} # Defines the appearance of the frame.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>Door</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/Door.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A cutomizable openable door.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;door&quot;\nfield SFVec3f size 0.2 1 2.4 # Defines the width, height and thickness of the door wall frame.\nfield SFBool canBeOpen TRUE # Defines whether the door is connected to the frame throught a hinge-joint.\nfield SFFloat position 0 # Defines the position (aperture) of the door.\nfield SFBool jointAtLeft TRUE # Defines on which side the door is connected to the frame.\nfield SFBool selfClosing FALSE # Defines whether the door as a spring effect that makes it closing on itself.\nfield SFFloat doorThickness 0.05 # Defines the thickness of the door.\nfield SFFloat frameHeight 2.0 # Defines the height of the door frame. It should be must be less than or equal to `size.y`.\nfield SFVec3f frameSize 0.05 0.05 0.05 # Defines the size of the door frame.\nfield SFFloat mainMaterialDensity 200 # Defines the density of the door.\nfield SFNode doorAppearance GenericDoorAppearance {} # Defines the door's appearance.\nfield SFNode wallAppearance Roughcast {} # Defines the wall's appearance.\nfield SFNode frameAppearance VarnishedPine {} # Defines the frame's appearance.\nfield SFNode doorHandle DoorLever {} # Defines an optional door handle.\nfield MFNode doorSlot [] # Extends the door with new nodes.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>Ceiling</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/Ceiling.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A configurable standard ceiling.\n</description>
		<parameters>field SFVec3f translation 0 0 2.4\nfield SFRotation rotation 1 0 0 3.14159\nfield SFString name &quot;ceiling&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield SFVec2f size 10 10 # Defines the size of the ceiling.\nfield SFNode appearance Roughcast { textureTransform TextureTransform { scale 10 10 } } # Defines the appearance of the ceiling.\nfield SFBool locked TRUE # Is `Solid.locked`.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>Wall</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/Wall.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A customizable wall.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wall&quot;\nfield SFVec3f size 0.2 1 2.4 # Defines the size of the wall.\nfield SFNode appearance Roughcast { textureTransform TextureTransform { scale 2.4 1 } } # Defines the appearance of the wall.</parameters>
	</proto>
	<proto>
		<name>WallPlug</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/WallPlug.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An electrical wall plug with optional bounding object.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wall plug&quot;\nfield SFColor mainColor 1 1 1 # Defines the main color of the plug.\nfield SFColor secondaryColor 0 0 0 # Defines the secondary color of the plug.\nfield SFBool enableBoundingObject TRUE # Defines whether the plug should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>DoorKnob</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/DoorKnob.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A door knob.\nThis object can be used in the 'doorHandle' field of the Door object.\n</description>
		<slot-type>door handle</slot-type>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;door knob&quot;\nfield SFFloat doorThickness 0.05 # Defines the thickness of the door.\nfield SFFloat handleRadius 0.03 # Defines the radius of the handle.\nfield SFFloat distanceFromDoor 0.065 # Defines the distance between the handle and the door.\nfield SFNode appearance BrushedAluminium {} # Defines the appearance of the handle.\nfield SFFloat mass 0.7 # Defines the mass of the handle.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>DoorLever</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/apartment_structure/protos/DoorLever.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A door lever.\nThis object can be used in the 'doorHandle' field of the Door object.\n</description>
		<slot-type>door handle</slot-type>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;door lever&quot;\nfield SFBool canTurn FALSE # Defines whether the lever is connected to the door using a hinge-joint.\nfield SFBool jointAtLeft TRUE # Defines on which side is the lever.\nfield SFFloat doorThickness 0.05 # Defines the thickness of the door.\nfield SFFloat handleThickness 0.0125 # Defines the thickness of the handle.\nfield SFFloat handleLength 0.12 # Defines the length of the handle.\nfield SFFloat distanceFromDoor 0.065 # Defines the distance between the handle and the door.\nfield SFNode appearance BrushedAluminium {} # Defines the appearance of the lever.\nfield SFFloat mass 0.7 # Defines the mass of the lever.\nfield SFBool hasStaticParent FALSE # Defines whether the parent door has physics or not.\nfield SFBool castShadows TRUE # Defines whether this object should cast shadows.</parameters>
	</proto>
	<proto>
		<name>Telephone</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/telephone/protos/Telephone.proto</url>
		<license>MIT</license>
		<license-url>https://opensource.org/licenses/MIT</license-url>
		<description>A model of a telephone, sourced from the GLTF PBR reference implementation, found at https://github.com/KhronosGroup/glTF-WebGL-PBR.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0</parameters>
	</proto>
	<proto>
		<name>OfficeTelephone</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/telephone/protos/OfficeTelephone.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>An office telephone with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;office telephone&quot;\nfield SFBool enablePhysics TRUE # Defines whether the telephone should have physics.</parameters>
	</proto>
	<proto>
		<name>Mirror</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/mirror/protos/Mirror.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>A simple mirror made of a display attached to a camera.\nThe reflected image does not depend on the viewpoint position.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;mirror&quot;\nfield SFString controller &quot;mirror&quot; # Defines the controller of the mirror. This controller should simply enable the camera and attach it to the display.\nfield SFString window &quot;&lt;none&gt;&quot; # Is `Robot.window`.\nfield SFBool supervisor FALSE # Is `Robot.supervisor`.\nfield SFFloat fieldOfView 0.785398 # Defines the field of view of the mirror camera.\nfield SFFloat width 0.5 # Defines the width of the mirror.\nfield SFFloat height 0.8 # Defines the height of the mirror.\nfield SFFloat frameThickness 0.02 # Defines the thickness of the mirror frame.\nfield SFNode physics NULL # Is `Solid.physics`.\nfield SFNode frameAppearance VarnishedPine {} # Defines the appearance of the mirror frame.</parameters>
	</proto>
	<proto>
		<name>WateringCan</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/WateringCan.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A watering can with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;watering can&quot;\nfield SFBool enablePhysics FALSE # Defines whether the watering can should have physics.</parameters>
	</proto>
	<proto>
		<name>Slide</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Slide.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A slide.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;slide&quot;</parameters>
	</proto>
	<proto>
		<name>SwingCouch</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/SwingCouch.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A swing couch.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;swing couch&quot;</parameters>
	</proto>
	<proto>
		<name>Pergolas</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Pergolas.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A pergola.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;pergola&quot;</parameters>
	</proto>
	<proto>
		<name>Barbecue</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Barbecue.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A barbecue with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;barbecue&quot;\nfield SFBool enablePhysics FALSE # Defines whether the barbecue should have physics.</parameters>
	</proto>
	<proto>
		<name>DogHouse</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/DogHouse.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A dog house.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;dog house&quot;</parameters>
	</proto>
	<proto>
		<name>PicketFence</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/PicketFence.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A picket fence made of several segments with optional boundingObject.\nEach segment is made of 11 pickets.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;picket fence&quot;\nfield SFInt32 numberOfSegments 1 # Defines the number of consecutive segments, the width of one segment is 1.7 meters.\nfield SFBool enableBoundingObject TRUE # Defines whether the fence should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>Gnome</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Gnome.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A gnome with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;gnome&quot;\nfield SFBool enablePhysics FALSE # Defines whether the gnome should have physics.</parameters>
	</proto>
	<proto>
		<name>Swing</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Swing.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A swing.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;swing&quot;</parameters>
	</proto>
	<proto>
		<name>Wheelbarrow</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/Wheelbarrow.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A wheelbarrow with optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;wheelbarrow&quot;\nfield SFBool enablePhysics FALSE # Defines whether the wheelbarrow should have physics.</parameters>
	</proto>
	<proto>
		<name>TableWithUmbrella</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/TableWithUmbrella.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A table with a central umbrella and optional physics.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;table with umbrella&quot;\nfield SFBool enablePhysics FALSE # Defines whether the table should have physics.</parameters>
	</proto>
	<proto>
		<name>PicketFenceWithDoor</name>
		<base-type>Solid</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/objects/garden/protos/PicketFenceWithDoor.proto</url>
		<license>Creative Commons Attribution 4.0 International License.</license>
		<license-url>https://creativecommons.org/licenses/by/4.0/legalcode</license-url>
		<description>A picket fence with a door and optional boundingObject.\n</description>
		<parameters>field SFVec3f translation 0 0 0\nfield SFRotation rotation 0 0 1 0\nfield SFString name &quot;picket fence with door&quot;\nfield SFBool enableBoundingObject TRUE # Defines whether the fence should have a bounding object.</parameters>
	</proto>
	<proto>
		<name>HingeJointWithBacklash</name>
		<base-type>HingeJoint</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/joints/protos/HingeJointWithBacklash.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>This extension of the hinge joint allows to model the effect of backlash.\n</description>
		<parameters>field SFNode jointParameters HingeJointParameters {}\nfield SFFloat backlash 0.01 # Defines the gear clearence, [0, inf).\nfield SFFloat gearMass 0.1 # Defines the gear mass, [0, inf).\nfield MFNode device [ ] # {RotationalMotor, PositionSensor, Brake}.\nfield MFNode{PositionSensor{}} outputSensor [ ] # {PositionSensor}.\nfield MFNode{Group{}, Transform{}, Shape{}} startPoint NULL # {Group, Transform, or Shape}.\nfield SFNode endPoint NULL # {Solid, SolidReference, or Slot}.</parameters>
	</proto>
	<proto>
		<name>Hinge2JointWithBacklash</name>
		<base-type>HingeJoint</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/joints/protos/Hinge2JointWithBacklash.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>This extension of the hinge2joint allows to model the effect of backlash.\n</description>
		<parameters>field SFNode jointParameters HingeJointParameters {}\nfield SFNode jointParameters2 JointParameters {}\nfield SFFloat backlash 0.01 # Defines the gear clearence for axis, [0, inf).\nfield SFFloat backlash2 0.01 # Defines the gear clearence for axis2, [0, inf).\nfield SFFloat gearMass 0.1 # Defines the gear mass for axis, [0, inf).\nfield SFFloat gearMass2 0.1 # Defines the gear mass for axis2, [0, inf).\nfield MFNode device [ ] # {RotationalMotor, PositionSensor, Brake}.\nfield MFNode device2 [ ] # {RotationalMotor, PositionSensor, Brake}.\nfield MFNode{PositionSensor{}} outputSensor [ ] # {PositionSensor}.\nfield MFNode{PositionSensor{}} outputSensor2 [ ] # {PositionSensor}.\nfield MFNode{Group{}, Transform{}, Shape{}} startPoint NULL # {Group, Transform, or Shape}.\nfield MFNode{Group{}, Transform{}, Shape{}} startPoint2 NULL # {Group, Transform, or Shape}.\nfield SFNode endPoint NULL # {Solid, SolidReference, or Slot}.</parameters>
	</proto>
	<proto>
		<name>PipeBoundingObject</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/bounding_objects/protos/PipeBoundingObject.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>This bounding object with a pipe shape is formed by a group of boxes.\n</description>
		<parameters>field SFFloat height 2 # Defines the height of the pipe.\nfield SFFloat radius 1 # Defines the radius of the pipe.\nfield SFFloat thickness 0.1 # Defines the thickness of the pipe.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the pipe and so its resolution.\nfield SFFloat accuracy 0.0001 # Defines how much boxes position can differ on y axis: a 0 value represents an error-free model but it will slow down the simulation.</parameters>
	</proto>
	<proto>
		<name>TorusBoundingObject</name>
		<base-type>Group</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/bounding_objects/protos/TorusBoundingObject.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>This bounding object with a torus shape is formed by a group of spheres.\n</description>
		<parameters>field SFFloat majorRadius 2 # Defines the major radius of the torus.\nfield SFFloat minorRadius 1 # Defines the minor radius of the torus.\nfield SFInt32 subdivision 24 # Defines the number of polygons used to represent the torus and so its resolution.</parameters>
	</proto>
	<proto>
		<name>Supervisor</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/default/protos/Supervisor.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<description>Backward compatibility with the deprecated 'Supervisor' node (deprecated in Webots R2018c)\n</description>
		<tags>hidden</tags>
		<parameters>vrmlField SFVec3f translation 0 0 0
 vrmlField SFRotation rotation 0 0 1 0
 vrmlField SFVec3f scale 1 1 1
 vrmlField MFNode children []\nfield SFString name &quot;supervisor&quot;\nfield SFString model &quot;&quot;\nfield SFString description &quot;&quot;\nfield SFString contactMaterial &quot;default&quot;\nfield MFNode immersionProperties []\nfield SFNode boundingObject NULL\nfield SFNode physics NULL\nfield SFBool locked FALSE\nfield SFFloat translationStep 0.01\nfield SFFloat rotationStep 0.261799387\nfield SFFloat radarCrossSection 0.0\nfield MFColor recognitionColors []\nfield SFString controller &quot;&lt;generic&gt;&quot;\nfield MFString controllerArgs []\nfield SFString customData &quot;&quot;\nfield SFBool supervisor FALSE\nfield SFBool synchronization TRUE\nfield MFFloat battery []\nfield SFFloat cpuConsumption 10\nfield SFBool selfCollision FALSE\nfield SFString window &quot;&lt;generic&gt;&quot;\nfield SFString remoteControl &quot;&lt;none&gt;&quot;</parameters>
	</proto>
	<proto>
		<name>SumoInterface</name>
		<base-type>Robot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/default/protos/SumoInterface.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/sumo-interface</documentation-url>
		<description>Supervisor interfacing SUMO with Webots\n</description>
		<parameters>field SFString name &quot;sumo interface&quot;\nfield SFBool gui TRUE\nfield SFBool useNetconvert FALSE\nfield SFBool enableTrafficLights TRUE\nfield SFBool enableWheelsRotation FALSE\nfield SFInt32 maxVehicles 100\nfield SFInt32 radius -1\nfield SFFloat maximumLateralSpeed 2.5\nfield SFFloat maximumAngularSpeed 3\nfield SFFloat laneChangeDelay 3\nfield SFBool enableHeight FALSE\nfield SFInt32 step 200\nfield SFInt32 port 8873\nfield SFInt32 seed 1\nfield SFString networkFiles &quot;&quot;\nfield SFString sumoArguments &quot;&quot;\nfield SFNode display NULL\nfield SFBool verbose FALSE\nfield SFBool synchronization TRUE\nfield MFNode children []</parameters>
	</proto>
	<proto>
		<name>SumoDisplay</name>
		<base-type>Slot</base-type>
		<url>https://raw.githubusercontent.com/cyberbotics/webots/develop/projects/default/protos/SumoDisplay.proto</url>
		<license>Copyright Cyberbotics Ltd. Licensed for use only with Webots.</license>
		<license-url>https://cyberbotics.com/webots_assets_license</license-url>
		<documentation-url>https://www.cyberbotics.com/doc/automobile/sumo-interface</documentation-url>
		<description>This PROTO is meant to be inserted in the 'display'\nfield of the 'SumoInterface' PROTO\n</description>
		<slot-type>sumo display</slot-type>
		<parameters>field SFInt32 width 256\nfield SFInt32 height 256\nfield SFFloat zoom 1.0\nfield SFInt32 refreshRate 1000\nfield SFBool fitSize FALSE</parameters>
	</proto>
</proto-list>
