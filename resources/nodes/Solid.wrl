# A Solid node can be used to represent objects in the simulated environment (e.g. obstacles, walls, ground, robot parts, etc.).
# Solid nodes can be collision detected (boundingObject) and therefore can prevent objects from intersecting.
# In addition, Solid nodes can have an optional Physics node that allow them to be simulated with the physics engine.

Solid {
  #fields that inherit from the Transform node:
  vrmlField SFVec3f    translation         0 0 0
  vrmlField SFRotation rotation            0 0 1 0
  vrmlField SFVec3f    scale               1 1 1
  vrmlField MFNode     children            []        # shape and solids fixed to that solid
  #fields specific to the Solid node:
  field     SFString   name                "solid"   # used by wb_robot_get_device()
  field     SFString   model               ""        # generic name of the solid (eg: "chair")
  field     SFString   description         ""        # a short (1 line) of description of the solid
  field     SFString   contactMaterial     "default" # see ContactProperties node
  field     MFNode     immersionProperties []        # see ImmersionProperties node
  field     SFNode     boundingObject      NULL      # for collision detection
  field     SFNode     physics             NULL      # optional Physics node
  field     SFBool     locked              FALSE     # to avoid moving objects with the mouse
  field     SFFloat    radarCrossSection   0.0       # radar cross section of this solid
  field     MFColor    recognitionColors   []        # colors returned for this Solid by Cameras with a Recognition node
  #fields that inherit from the Transform node:
  field     SFFloat    translationStep 0.01        # step size used by translation manipulator
  field     SFFloat    rotationStep    0.261799387 # step size used by rotation manipulator (PI/12)
  # hidden fields
  hiddenField SFVec3f linearVelocity  0 0 0   # (m/s) Solid's initial linear velocity
  hiddenField SFVec3f angularVelocity 0 0 0   # (rad/s) Solid's initial angular velocity
}
