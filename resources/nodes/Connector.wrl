# Connector nodes are used to simulate mechanical docking systems, or any other type of device that
# can dynamically create a rigid link with a similar device.
# The physical connection between two Connectors can be created and destroyed at run time by the robot controller program.

Connector {
  #fields that inherit from the Solid node:
  vrmlField SFVec3f    translation         0 0 0
  vrmlField SFRotation rotation            0 0 1 0
  vrmlField MFNode     children            []          # shape and solids fixed to that solid
  field     SFString   name                "connector" # used by wb_robot_get_device()
  field     SFString   model               ""          # generic name of the solid (eg: "chair")
  field     SFString   description         ""          # a short (1 line) of description of the solid
  field     SFString   contactMaterial     "default"   # see ContactProperties node
  field     MFNode     immersionProperties []          # see ImmersionProperties node
  field     SFNode     boundingObject      NULL        # for collision detection (if NULL, use children)
  field     SFNode     physics             NULL        # physical properties (Physics node)
  field     SFBool     locked              FALSE       # to avoid moving objects with the mouse
  field     SFFloat    translationStep     0.01        # step size used by translation manipulator
  field     SFFloat    rotationStep        0.261799387 # step size used by rotation manipulator
  field     SFFloat    radarCrossSection   0.0         # radar cross section of this solid
  field     MFColor    recognitionColors   []          # colors returned for this Solid by Cameras with a Recognition node
  #fields specific to the Connector node:
  field     SFString{"symmetric", "active", "passive"}   type               "symmetric" # connection type
  field     SFBool                                       isLocked           FALSE       # current locked state
  field     SFBool                                       autoLock           FALSE       # locks automatically in case of presence (but only when "isLocked")
  field     SFBool                                       unilateralLock     TRUE        # for "symmetric" type only: enable unilateral locking
  field     SFBool                                       unilateralUnlock   TRUE        # for "symmetric" type only: enable unilateral unlocking
  field     SFFloat                                      distanceTolerance  0.01        # acceptable error in the distance between both Connectors
  field     SFFloat                                      axisTolerance      0.2         # acceptable error angle between the two normals vectors
  field     SFFloat                                      rotationTolerance  0.2         # acceptable error in the rotational alignment
  field     SFInt32                                      numberOfRotations  4           # number of possible rotational docking alignments
  field     SFBool                                       snap               TRUE        # precisely adjust docking when locked
  field     SFFloat                                      tensileStrength    -1          # max pull force that the connector can withstand before breaking (Newtons)
  field     SFFloat                                      shearStrength      -1          # max shear force that the connector can withstand before breaking (Newtons)

  # hidden fields
  hiddenField SFVec3f linearVelocity  0 0 0   # (m/s) Solid's initial linear velocity
  hiddenField SFVec3f angularVelocity 0 0 0   # (rad/s) Solid's initial angular velocity
}
